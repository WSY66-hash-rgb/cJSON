<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="parse__number_8c" kind="file" language="C++">
    <compoundname>parse_number.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="unity__config_8h" local="yes">unity/examples/unity_config.h</includes>
    <includes refid="unity_8h" local="yes">unity/src/unity.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <incdepgraph>
      <node id="15">
        <label>float.h</label>
      </node>
      <node id="13">
        <label>../cJSON.c</label>
        <link refid="cJSON_8c"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cJSON.h</label>
        <link refid="cJSON_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>setjmp.h</label>
      </node>
      <node id="12">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>unity/examples/unity_config.h</label>
        <link refid="unity__config_8h"/>
      </node>
      <node id="9">
        <label>math.h</label>
      </node>
      <node id="1">
        <label>tests/parse_number.c</label>
        <link refid="parse__number_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>unity_internals.h</label>
        <link refid="unity__internals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>unity/src/unity.h</label>
        <link refid="unity_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ctype.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" prot="public" static="yes" mutable="no">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref></type>
        <definition>cJSON item[1]</definition>
        <argsstring>[1]</argsstring>
        <name>item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="31" column="14" bodyfile="tests/parse_number.c" bodystart="31" bodyend="-1"/>
        <referencedby refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" compoundref="parse__number_8c" startline="46" endline="56">assert_parse_number</referencedby>
        <referencedby refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__number_8c" startline="99" endline="110">main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parse__number_8c_1afcfc9f4824d344f7a62b1505be214995" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void assert_is_number</definition>
        <argsstring>(cJSON *number_item)</argsstring>
        <name>assert_is_number</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>number_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="33" column="13" bodyfile="tests/parse_number.c" bodystart="33" bodyend="44"/>
        <referencedby refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" compoundref="parse__number_8c" startline="46" endline="56">assert_parse_number</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void assert_parse_number</definition>
        <argsstring>(const char *string, int integer, double real)</argsstring>
        <name>assert_parse_number</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>integer</declname>
        </param>
        <param>
          <type>double</type>
          <declname>real</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="46" column="13" bodyfile="tests/parse_number.c" bodystart="46" bodyend="56"/>
        <references refid="parse__number_8c_1afcfc9f4824d344f7a62b1505be214995" compoundref="parse__number_8c" startline="33" endline="44">assert_is_number</references>
        <references refid="structparse__buffer_1a52ee1184576baa3d5171059ab0e942de" compoundref="cJSON_8c" startline="289">parse_buffer::content</references>
        <references refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__number_8c" startline="31">item</references>
        <references refid="structparse__buffer_1a036970e9335896d3cee8459eda9e2eb9" compoundref="cJSON_8c" startline="290">parse_buffer::length</references>
        <references refid="cJSON_8c_1a699e1cebda71c2846a9a10b29b4dc407" compoundref="cJSON_8c" startline="305" endline="379">parse_number</references>
        <references refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" compoundref="cJSON_8h" startline="119">cJSON::valuedouble</references>
        <references refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" compoundref="cJSON_8h" startline="117">cJSON::valueint</references>
        <referencedby refid="parse__number_8c_1a9416e8bfbe883860eb49ed8571edc717" compoundref="parse__number_8c" startline="65" endline="70">parse_number_should_parse_negative_integers</referencedby>
        <referencedby refid="parse__number_8c_1a83d75e695fc7a30fe190014d4e9ad8e6" compoundref="parse__number_8c" startline="89" endline="97">parse_number_should_parse_negative_reals</referencedby>
        <referencedby refid="parse__number_8c_1af9445973760166b9c7e7400ccc6b6f59" compoundref="parse__number_8c" startline="72" endline="77">parse_number_should_parse_positive_integers</referencedby>
        <referencedby refid="parse__number_8c_1a8981c2f612d8130f39c5baedc5849aa9" compoundref="parse__number_8c" startline="79" endline="87">parse_number_should_parse_positive_reals</referencedby>
        <referencedby refid="parse__number_8c_1a9354d4826bbeb5de2954ad64f2cdb9ee" compoundref="parse__number_8c" startline="58" endline="63">parse_number_should_parse_zero</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__number_8c_1a9354d4826bbeb5de2954ad64f2cdb9ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_number_should_parse_zero</definition>
        <argsstring>(void)</argsstring>
        <name>parse_number_should_parse_zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="58" column="13" bodyfile="tests/parse_number.c" bodystart="58" bodyend="63"/>
        <references refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" compoundref="parse__number_8c" startline="46" endline="56">assert_parse_number</references>
        <referencedby refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__number_8c" startline="99" endline="110">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__number_8c_1a9416e8bfbe883860eb49ed8571edc717" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_number_should_parse_negative_integers</definition>
        <argsstring>(void)</argsstring>
        <name>parse_number_should_parse_negative_integers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="65" column="13" bodyfile="tests/parse_number.c" bodystart="65" bodyend="70"/>
        <references refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" compoundref="parse__number_8c" startline="46" endline="56">assert_parse_number</references>
        <referencedby refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__number_8c" startline="99" endline="110">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__number_8c_1af9445973760166b9c7e7400ccc6b6f59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_number_should_parse_positive_integers</definition>
        <argsstring>(void)</argsstring>
        <name>parse_number_should_parse_positive_integers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="72" column="13" bodyfile="tests/parse_number.c" bodystart="72" bodyend="77"/>
        <references refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" compoundref="parse__number_8c" startline="46" endline="56">assert_parse_number</references>
        <referencedby refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__number_8c" startline="99" endline="110">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__number_8c_1a8981c2f612d8130f39c5baedc5849aa9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_number_should_parse_positive_reals</definition>
        <argsstring>(void)</argsstring>
        <name>parse_number_should_parse_positive_reals</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="79" column="13" bodyfile="tests/parse_number.c" bodystart="79" bodyend="87"/>
        <references refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" compoundref="parse__number_8c" startline="46" endline="56">assert_parse_number</references>
        <referencedby refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__number_8c" startline="99" endline="110">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__number_8c_1a83d75e695fc7a30fe190014d4e9ad8e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_number_should_parse_negative_reals</definition>
        <argsstring>(void)</argsstring>
        <name>parse_number_should_parse_negative_reals</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="89" column="13" bodyfile="tests/parse_number.c" bodystart="89" bodyend="97"/>
        <references refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" compoundref="parse__number_8c" startline="46" endline="56">assert_parse_number</references>
        <referencedby refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__number_8c" startline="99" endline="110">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_number.c" line="99" column="8" bodyfile="tests/parse_number.c" bodystart="99" bodyend="110"/>
        <references refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__number_8c" startline="31">item</references>
        <references refid="parse__number_8c_1a9416e8bfbe883860eb49ed8571edc717" compoundref="parse__number_8c" startline="65" endline="70">parse_number_should_parse_negative_integers</references>
        <references refid="parse__number_8c_1a83d75e695fc7a30fe190014d4e9ad8e6" compoundref="parse__number_8c" startline="89" endline="97">parse_number_should_parse_negative_reals</references>
        <references refid="parse__number_8c_1af9445973760166b9c7e7400ccc6b6f59" compoundref="parse__number_8c" startline="72" endline="77">parse_number_should_parse_positive_integers</references>
        <references refid="parse__number_8c_1a8981c2f612d8130f39c5baedc5849aa9" compoundref="parse__number_8c" startline="79" endline="87">parse_number_should_parse_positive_reals</references>
        <references refid="parse__number_8c_1a9354d4826bbeb5de2954ad64f2cdb9ee" compoundref="parse__number_8c" startline="58" endline="63">parse_number_should_parse_zero</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2009-2017<sp/>Dave<sp/>Gamble<sp/>and<sp/>cJSON<sp/>contributors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity__config_8h" kindref="compound">unity/examples/unity_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity_8h" kindref="compound">unity/src/unity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/><ref refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>[1];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="parse__number_8c_1afcfc9f4824d344f7a62b1505be214995" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__number_8c_1afcfc9f4824d344f7a62b1505be214995" kindref="member">assert_is_number</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*number_item)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1ab29f13f0eaebfc7cd26c0b9360f66e92" kindref="member">TEST_ASSERT_NOT_NULL_MESSAGE</ref>(number_item,<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>is<sp/>NULL.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a2c8688f23b1d3dc9584d95cbb2779612" kindref="member">assert_not_in_list</ref>(number_item);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a740922f131411646171056003b2cb526" kindref="member">assert_has_no_child</ref>(number_item);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(number_item,<sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1a6e62df3c208d5c52b7ac5a43c691a2" kindref="member">assert_has_no_reference</ref>(number_item);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a72c7484cb26a1f6575e20febbdc69b12" kindref="member">assert_has_no_const_string</ref>(number_item);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1e8af304fb1faa1122841764ea1ac7bb" kindref="member">assert_has_no_valuestring</ref>(number_item);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1aabd3d6d1e1cd513025780693b223f279" kindref="member">assert_has_no_string</ref>(number_item);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>real)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparse__buffer" kindref="compound">parse_buffer</ref><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.content<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.length<sp/>=<sp/>strlen(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1a6a0527f090dfc0b5ce9724415e51ebe5" kindref="member">TEST_ASSERT_TRUE</ref>(<ref refid="cJSON_8c_1a699e1cebda71c2846a9a10b29b4dc407" kindref="member">parse_number</ref>(<ref refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>&amp;<ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1afcfc9f4824d344f7a62b1505be214995" kindref="member">assert_is_number</ref>(<ref refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1af52a321a93c580a6213fef3e0f85c237" kindref="member">TEST_ASSERT_EQUAL_INT</ref>(integer,<sp/><ref refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" kindref="member">valueint</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1ae0a2c6258810a0cdee35e24502b66eaa" kindref="member">TEST_ASSERT_EQUAL_DOUBLE</ref>(real,<sp/><ref refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" kindref="member">valuedouble</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="parse__number_8c_1a9354d4826bbeb5de2954ad64f2cdb9ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__number_8c_1a9354d4826bbeb5de2954ad64f2cdb9ee" kindref="member">parse_number_should_parse_zero</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;0.0&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0.0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-0&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>-0.0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="parse__number_8c_1a9416e8bfbe883860eb49ed8571edc717" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__number_8c_1a9416e8bfbe883860eb49ed8571edc717" kindref="member">parse_number_should_parse_negative_integers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>-1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-32768&quot;</highlight><highlight class="normal">,<sp/>-32768,<sp/>-32768.0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-2147483648&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-2147483648.0,<sp/>-2147483648.0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="parse__number_8c_1af9445973760166b9c7e7400ccc6b6f59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__number_8c_1af9445973760166b9c7e7400ccc6b6f59" kindref="member">parse_number_should_parse_positive_integers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;32767&quot;</highlight><highlight class="normal">,<sp/>32767,<sp/>32767.0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;2147483647&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)2147483647.0,<sp/>2147483647.0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="parse__number_8c_1a8981c2f612d8130f39c5baedc5849aa9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__number_8c_1a8981c2f612d8130f39c5baedc5849aa9" kindref="member">parse_number_should_parse_positive_reals</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;0.001&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0.001);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;10e-10&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>10e-10);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;10E-10&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>10e-10);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;10e10&quot;</highlight><highlight class="normal">,<sp/>INT_MAX,<sp/>10e10);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;123e+127&quot;</highlight><highlight class="normal">,<sp/>INT_MAX,<sp/>123e127);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;123e-128&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>123e-128);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="parse__number_8c_1a83d75e695fc7a30fe190014d4e9ad8e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__number_8c_1a83d75e695fc7a30fe190014d4e9ad8e6" kindref="member">parse_number_should_parse_negative_reals</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-0.001&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>-0.001);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-10e-10&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>-10e-10);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-10E-10&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>-10e-10);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-10e20&quot;</highlight><highlight class="normal">,<sp/>INT_MIN,<sp/>-10e20);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-123e+127&quot;</highlight><highlight class="normal">,<sp/>INT_MIN,<sp/>-123e127);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__number_8c_1a53a9722e174d2afdbf82fc8d0fd5fd38" kindref="member">assert_parse_number</ref>(</highlight><highlight class="stringliteral">&quot;-123e-128&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>-123e-128);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a79203c3ba406ffd5736627cc1e082e38" kindref="member">CJSON_CDECL</ref><sp/><ref refid="parse__number_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>cJSON<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="parse__number_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcJSON" kindref="compound">cJSON</ref>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aaad15a5d10e50a412d0a6851d0e5091a" kindref="member">UNITY_BEGIN</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__number_8c_1a9354d4826bbeb5de2954ad64f2cdb9ee" kindref="member">parse_number_should_parse_zero</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__number_8c_1a9416e8bfbe883860eb49ed8571edc717" kindref="member">parse_number_should_parse_negative_integers</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__number_8c_1af9445973760166b9c7e7400ccc6b6f59" kindref="member">parse_number_should_parse_positive_integers</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__number_8c_1a8981c2f612d8130f39c5baedc5849aa9" kindref="member">parse_number_should_parse_positive_reals</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__number_8c_1a83d75e695fc7a30fe190014d4e9ad8e6" kindref="member">parse_number_should_parse_negative_reals</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1aa519129d3af737eb796fc91720fae26a" kindref="member">UNITY_END</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/parse_number.c"/>
  </compounddef>
</doxygen>
