<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="unity__fixture_8c" kind="file" language="C++">
    <compoundname>unity_fixture.c</compoundname>
    <includes refid="unity__fixture_8h" local="yes">unity_fixture.h</includes>
    <includes refid="unity__internals_8h" local="yes">unity_internals.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>setjmp.h</label>
      </node>
      <node id="12">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>limits.h</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
      <node id="11">
        <label>unity_fixture_malloc_overrides.h</label>
        <link refid="unity__fixture__malloc__overrides_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>unity_fixture_internals.h</label>
        <link refid="unity__fixture__internals_8h"/>
      </node>
      <node id="5">
        <label>../examples/unity_config.h</label>
        <link refid="unity__config_8h"/>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>unity_internals.h</label>
        <link refid="unity__internals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>unity.h</label>
        <link refid="unity_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="1">
        <label>tests/unity/extras/fixture/src/unity_fixture.c</label>
        <link refid="unity__fixture_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>unity_fixture.h</label>
        <link refid="unity__fixture_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structGuardBytes" prot="public">GuardBytes</innerclass>
    <innerclass refid="structPointerPair" prot="public">PointerPair</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="unity__fixture_8c_1a3f1b1eff9064dbe426821f93e435fee5" prot="public" static="no">
        <name>MALLOC_DONT_FAIL</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="134" column="9" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="unity__fixture_8c_1a6f4162ac543f92892987e4557edd1f0b" prot="public" static="no">
        <type>struct <ref refid="structGuardBytes" kindref="compound">GuardBytes</ref></type>
        <definition>typedef struct GuardBytes Guard</definition>
        <argsstring></argsstring>
        <name>Guard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="176" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structUNITY__FIXTURE__T" kindref="compound">UNITY_FIXTURE_T</ref></type>
        <definition>struct UNITY_FIXTURE_T UnityFixture</definition>
        <argsstring></argsstring>
        <name>UnityFixture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="1" column="0" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="12" bodyend="-1"/>
        <referencedby refid="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" compoundref="unity__fixture_8c" startline="23" endline="30">announceTestRun</referencedby>
        <referencedby refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" compoundref="unity__fixture_8c" startline="63" endline="66">groupSelected</referencedby>
        <referencedby refid="unity__fixture__Test_8c_1a6dd5f3f906e49b2cc859da9a68fb5c2c" compoundref="unity__fixture__Test_8c" startline="185" endline="192">TEST</referencedby>
        <referencedby refid="unity__fixture__Test_8c_1ae9cf33cb1c7ef56006f497d542d9b516" compoundref="unity__fixture__Test_8c" startline="164" endline="170">TEST_SETUP</referencedby>
        <referencedby refid="unity__fixture__Test_8c_1a124f65267ba6264ba9d2591a470e8222" compoundref="unity__fixture__Test_8c" startline="172" endline="178">TEST_TEAR_DOWN</referencedby>
        <referencedby refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" compoundref="unity__fixture_8c" startline="58" endline="61">testSelected</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a1ae5ed8b684e16585dd4bd0cb07f51eb" compoundref="unity__fixture_8c" startline="409" endline="432">UnityConcludeFixtureTest</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a898356b51b63100ec321e05d2e5f2d55" compoundref="unity__fixture_8c" startline="347" endline="407">UnityGetCommandLineOptions</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a0979b54fd6b64e3d44c2adc91fe2c80e" compoundref="unity__fixture_8c" startline="115" endline="129">UnityIgnoreTest</referencedby>
        <referencedby refid="unity__fixture_8h_1a58ec279183697abbd5d3efea3442d4e5" compoundref="unity__fixture_8c" startline="32" endline="49">UnityMain</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int malloc_count</definition>
        <argsstring></argsstring>
        <name>malloc_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="135" column="12" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="135" bodyend="-1"/>
        <referencedby refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" compoundref="unity__fixture_8c" startline="227" endline="241">release_memory</referencedby>
        <referencedby refid="unity__fixture__malloc__overrides_8h_1a93ff6fda0f975eb47b8d828bd084f411" compoundref="unity__fixture_8c" startline="181" endline="216">unity_malloc</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a44409b47989dd823f395d62ba759032a" compoundref="unity__fixture_8c" startline="144" endline="151">UnityMalloc_EndTest</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1ad5bf2e255600eb6aef54f95c9a838628" compoundref="unity__fixture_8c" startline="138" endline="142">UnityMalloc_StartTest</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int malloc_fail_countdown</definition>
        <argsstring></argsstring>
        <name>malloc_fail_countdown</name>
        <initializer>=  -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="136" column="12" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="136" bodyend="-1"/>
        <referencedby refid="unity__fixture__malloc__overrides_8h_1a93ff6fda0f975eb47b8d828bd084f411" compoundref="unity__fixture_8c" startline="181" endline="216">unity_malloc</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a44409b47989dd823f395d62ba759032a" compoundref="unity__fixture_8c" startline="144" endline="151">UnityMalloc_EndTest</referencedby>
        <referencedby refid="unity__fixture_8h_1a7d3b04cbb7731cdf0c033d4c3a822d2b" compoundref="unity__fixture_8c" startline="153" endline="156">UnityMalloc_MakeMallocFailAfterCount</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1ad5bf2e255600eb6aef54f95c9a838628" compoundref="unity__fixture_8c" startline="138" endline="142">UnityMalloc_StartTest</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char end[]</definition>
        <argsstring>[]</argsstring>
        <name>end</name>
        <initializer>= &quot;END&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="179" column="19" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="179" bodyend="-1"/>
        <referencedby refid="misc__tests_8c_1ac96bb79bdea45dc66f6d11a70f8f4e15" compoundref="misc__tests_8c" startline="283" endline="328">cjson_replace_item_via_pointer_should_replace_items</referencedby>
        <referencedby refid="readme__examples_8c_1ab10b3b636031ab2ee2c74f1718760d03" compoundref="readme__examples_8c" startline="45" endline="115">create_monitor</referencedby>
        <referencedby refid="readme__examples_8c_1a3df44a6d83f425696bde276722b71b5f" compoundref="readme__examples_8c" startline="117" endline="166">create_monitor_with_helpers</referencedby>
        <referencedby refid="unity__fixture_8c_1a6f3beab996c5abbecb5d9ed6950cf13d" compoundref="unity__fixture_8c" startline="218" endline="225">isOverrun</referencedby>
        <referencedby refid="readme__examples_8c_1aac8a48367d8eb50de4be9aa823415b34" compoundref="readme__examples_8c" startline="169" endline="215">supports_full_hd</referencedby>
        <referencedby refid="unity__fixture__malloc__overrides_8h_1a93ff6fda0f975eb47b8d828bd084f411" compoundref="unity__fixture_8c" startline="181" endline="216">unity_malloc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structPointerPair" kindref="compound">PointerPair</ref></type>
        <definition>struct PointerPair pointer_store[5]</definition>
        <argsstring>[5]</argsstring>
        <name>pointer_store</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="268" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="314" bodyend="-1"/>
        <referencedby refid="unity__fixture__internals_8h_1acd8eb8ea79ad611a9427f35997d8becd" compoundref="unity__fixture_8c" startline="322" endline="335">UnityPointer_Set</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a378369455928df4fd5101722645953c6" compoundref="unity__fixture_8c" startline="337" endline="345">UnityPointer_UndoAllSets</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int pointer_index</definition>
        <argsstring></argsstring>
        <name>pointer_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="315" column="12" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="315" bodyend="-1"/>
        <referencedby refid="unity__fixture__internals_8h_1a799ef3abbb7aeb75b7f8faaf870dee5e" compoundref="unity__fixture_8c" startline="317" endline="320">UnityPointer_Init</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1acd8eb8ea79ad611a9427f35997d8becd" compoundref="unity__fixture_8c" startline="322" endline="335">UnityPointer_Set</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a378369455928df4fd5101722645953c6" compoundref="unity__fixture_8c" startline="337" endline="345">UnityPointer_UndoAllSets</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="unity__fixture_8c_1a95c834d6178047ce9e1bce7cbfea2836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setUp</definition>
        <argsstring>(void)</argsstring>
        <name>setUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="19" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a9909011e5fea0c018842eec4d93d0662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tearDown</definition>
        <argsstring>(void)</argsstring>
        <name>tearDown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="20" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void announceTestRun</definition>
        <argsstring>(unsigned int runNumber)</argsstring>
        <name>announceTestRun</name>
        <param>
          <type>unsigned int</type>
          <declname>runNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="23" column="13" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="23" bodyend="30"/>
        <references refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" compoundref="unity__fixture__internals_8h" startline="19">UNITY_FIXTURE_T::RepeatCount</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <referencedby refid="unity__fixture_8h_1a58ec279183697abbd5d3efea3442d4e5" compoundref="unity__fixture_8c" startline="32" endline="49">UnityMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a58ec279183697abbd5d3efea3442d4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnityMain</definition>
        <argsstring>(int argc, const char *argv[], void(*runAllTests)(void))</argsstring>
        <name>UnityMain</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>runAllTests</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="32" column="5" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="32" bodyend="49"/>
        <references refid="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" compoundref="unity__fixture_8c" startline="23" endline="30">announceTestRun</references>
        <references refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" compoundref="unity__fixture__internals_8h" startline="19">UNITY_FIXTURE_T::RepeatCount</references>
        <references refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" compoundref="unity__internals_8h" startline="393">UNITY_STORAGE_T::TestFailures</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1aed50601fbdaea8fc0fef0c61cf877809" compoundref="unity_8c" startline="1349" endline="1362">UnityBegin</references>
        <references refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <references refid="unity__fixture__internals_8h_1a898356b51b63100ec321e05d2e5f2d55" compoundref="unity__fixture_8c" startline="347" endline="407">UnityGetCommandLineOptions</references>
        <references refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" compoundref="unity__fixture__internals_8h" startline="18">UNITY_FIXTURE_T::Verbose</references>
        <referencedby refid="all__tests_8c_1ac0f2228420376f4db7e1274f2b41667c" compoundref="all__tests_8c" startline="9" endline="12">main</referencedby>
        <referencedby refid="unity__fixture__Test_8c_1a9bf8a28dfb9a0a218a8878a399a42160" compoundref="unity__fixture__Test_8c" startline="295" endline="300">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1addf1fa3a2d7db3fcc310ec0d0a337eff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int selected</definition>
        <argsstring>(const char *filter, const char *name)</argsstring>
        <name>selected</name>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="51" column="12" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="51" bodyend="56"/>
        <referencedby refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" compoundref="unity__fixture_8c" startline="63" endline="66">groupSelected</referencedby>
        <referencedby refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" compoundref="unity__fixture_8c" startline="58" endline="61">testSelected</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int testSelected</definition>
        <argsstring>(const char *test)</argsstring>
        <name>testSelected</name>
        <param>
          <type>const char *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="58" column="12" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="58" bodyend="61"/>
        <references refid="structUNITY__FIXTURE__T_1a98e6483802e9ba8c55cd10f9eec36cb3" compoundref="unity__fixture__internals_8h" startline="20">UNITY_FIXTURE_T::NameFilter</references>
        <references refid="unity__fixture_8c_1addf1fa3a2d7db3fcc310ec0d0a337eff" compoundref="unity__fixture_8c" startline="51" endline="56">selected</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <referencedby refid="unity__fixture__internals_8h_1a0979b54fd6b64e3d44c2adc91fe2c80e" compoundref="unity__fixture_8c" startline="115" endline="129">UnityIgnoreTest</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int groupSelected</definition>
        <argsstring>(const char *group)</argsstring>
        <name>groupSelected</name>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="63" column="12" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="63" bodyend="66"/>
        <references refid="structUNITY__FIXTURE__T_1a9480a05bc2d571c0fe5f8a7872082af1" compoundref="unity__fixture__internals_8h" startline="21">UNITY_FIXTURE_T::GroupFilter</references>
        <references refid="unity__fixture_8c_1addf1fa3a2d7db3fcc310ec0d0a337eff" compoundref="unity__fixture_8c" startline="51" endline="56">selected</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <referencedby refid="unity__fixture__internals_8h_1a0979b54fd6b64e3d44c2adc91fe2c80e" compoundref="unity__fixture_8c" startline="115" endline="129">UnityIgnoreTest</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a5d76db431eacd889a636a2a49e2d6077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityTestRunner</definition>
        <argsstring>(unityfunction *setup, unityfunction *testBody, unityfunction *teardown, const char *printableName, const char *group, const char *name, const char *file, unsigned int line)</argsstring>
        <name>UnityTestRunner</name>
        <param>
          <type><ref refid="unity__fixture__internals_8h_1aa3c739140f3ffd8f39779be4e6598774" kindref="member">unityfunction</ref> *</type>
          <declname>setup</declname>
        </param>
        <param>
          <type><ref refid="unity__fixture__internals_8h_1aa3c739140f3ffd8f39779be4e6598774" kindref="member">unityfunction</ref> *</type>
          <declname>testBody</declname>
        </param>
        <param>
          <type><ref refid="unity__fixture__internals_8h_1aa3c739140f3ffd8f39779be4e6598774" kindref="member">unityfunction</ref> *</type>
          <declname>teardown</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>printableName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="68" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="68" bodyend="113"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" compoundref="unity__internals_8h" startline="391">UNITY_STORAGE_T::CurrentTestLineNumber</references>
        <references refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" compoundref="unity__internals_8h" startline="386">UNITY_STORAGE_T::CurrentTestName</references>
        <references refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" compoundref="unity__fixture_8c" startline="63" endline="66">groupSelected</references>
        <references refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" compoundref="unity__internals_8h" startline="392">UNITY_STORAGE_T::NumberOfTests</references>
        <references refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" compoundref="unity__internals_8h" startline="385">UNITY_STORAGE_T::TestFile</references>
        <references refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" compoundref="unity__fixture_8c" startline="58" endline="61">testSelected</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__fixture__internals_8h_1a1ae5ed8b684e16585dd4bd0cb07f51eb" compoundref="unity__fixture_8c" startline="409" endline="432">UnityConcludeFixtureTest</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <references refid="unity__fixture__internals_8h_1a44409b47989dd823f395d62ba759032a" compoundref="unity__fixture_8c" startline="144" endline="151">UnityMalloc_EndTest</references>
        <references refid="unity__fixture__internals_8h_1ad5bf2e255600eb6aef54f95c9a838628" compoundref="unity__fixture_8c" startline="138" endline="142">UnityMalloc_StartTest</references>
        <references refid="unity__fixture__internals_8h_1a799ef3abbb7aeb75b7f8faaf870dee5e" compoundref="unity__fixture_8c" startline="317" endline="320">UnityPointer_Init</references>
        <references refid="unity__fixture__internals_8h_1a378369455928df4fd5101722645953c6" compoundref="unity__fixture_8c" startline="337" endline="345">UnityPointer_UndoAllSets</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" compoundref="unity__fixture__internals_8h" startline="18">UNITY_FIXTURE_T::Verbose</references>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a0979b54fd6b64e3d44c2adc91fe2c80e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityIgnoreTest</definition>
        <argsstring>(const char *printableName, const char *group, const char *name)</argsstring>
        <name>UnityIgnoreTest</name>
        <param>
          <type>const char *</type>
          <declname>printableName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="115" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="115" bodyend="129"/>
        <references refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" compoundref="unity__fixture_8c" startline="63" endline="66">groupSelected</references>
        <references refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" compoundref="unity__internals_8h" startline="392">UNITY_STORAGE_T::NumberOfTests</references>
        <references refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" compoundref="unity__internals_8h" startline="394">UNITY_STORAGE_T::TestIgnores</references>
        <references refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" compoundref="unity__fixture_8c" startline="58" endline="61">testSelected</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" compoundref="unity__fixture__internals_8h" startline="18">UNITY_FIXTURE_T::Verbose</references>
        <referencedby refid="unity__fixture__Test_8c_1af8a572f34dfa6d3411718d0bc3cc40ef" compoundref="unity__fixture__Test_8c" startline="302" endline="308">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1ad5bf2e255600eb6aef54f95c9a838628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityMalloc_StartTest</definition>
        <argsstring>(void)</argsstring>
        <name>UnityMalloc_StartTest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="138" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="138" bodyend="142"/>
        <references refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" compoundref="unity__fixture_8c" startline="135">malloc_count</references>
        <references refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" compoundref="unity__fixture_8c" startline="136">malloc_fail_countdown</references>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a44409b47989dd823f395d62ba759032a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityMalloc_EndTest</definition>
        <argsstring>(void)</argsstring>
        <name>UnityMalloc_EndTest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="144" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="144" bodyend="151"/>
        <references refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" compoundref="unity__internals_8h" startline="391">UNITY_STORAGE_T::CurrentTestLineNumber</references>
        <references refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" compoundref="unity__fixture_8c" startline="135">malloc_count</references>
        <references refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" compoundref="unity__fixture_8c" startline="136">malloc_fail_countdown</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a987522fae9a5f45af2cf385a2223bdac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityMalloc_MakeMallocFailAfterCount</definition>
        <argsstring>(int countdown)</argsstring>
        <name>UnityMalloc_MakeMallocFailAfterCount</name>
        <param>
          <type>int</type>
          <declname>countdown</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="153" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="153" bodyend="156"/>
        <references refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" compoundref="unity__fixture_8c" startline="136">malloc_fail_countdown</references>
        <referencedby refid="unity__fixture__Test_8c_1abd69643a685b46777bd9a2ba39338b20" compoundref="unity__fixture__Test_8c" startline="47" endline="57">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a93ff6fda0f975eb47b8d828bd084f411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* unity_malloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>unity_malloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="181" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="181" bodyend="216"/>
        <references refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" compoundref="unity__fixture_8c" startline="179">end</references>
        <references refid="structGuardBytes_1a96585124a68487455e7fc4990680fbdb" compoundref="unity__fixture_8c" startline="175">GuardBytes::guard_space</references>
        <references refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" compoundref="unity__fixture_8c" startline="135">malloc_count</references>
        <references refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" compoundref="unity__fixture_8c" startline="136">malloc_fail_countdown</references>
        <references refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" compoundref="unity__fixture_8c" startline="174">GuardBytes::size</references>
        <referencedby refid="unity__fixture__Test_8c_1abd69643a685b46777bd9a2ba39338b20" compoundref="unity__fixture__Test_8c" startline="47" endline="57">TEST</referencedby>
        <referencedby refid="unity__fixture__malloc__overrides_8h_1a55e86effa9aaf4a111d6b47684a05369" compoundref="unity__fixture_8c" startline="260" endline="266">unity_calloc</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a6f3beab996c5abbecb5d9ed6950cf13d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int isOverrun</definition>
        <argsstring>(void *mem)</argsstring>
        <name>isOverrun</name>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="218" column="12" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="218" bodyend="225"/>
        <references refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" compoundref="unity__fixture_8c" startline="179">end</references>
        <references refid="structGuardBytes_1a96585124a68487455e7fc4990680fbdb" compoundref="unity__fixture_8c" startline="175">GuardBytes::guard_space</references>
        <references refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" compoundref="unity__fixture_8c" startline="174">GuardBytes::size</references>
        <referencedby refid="unity__fixture__malloc__overrides_8h_1a34d61a21a177a63f9681e1d89653cc74" compoundref="unity__fixture_8c" startline="243" endline="258">unity_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void release_memory</definition>
        <argsstring>(void *mem)</argsstring>
        <name>release_memory</name>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="227" column="13" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="227" bodyend="241"/>
        <references refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" compoundref="unity__fixture_8c" startline="135">malloc_count</references>
        <referencedby refid="unity__fixture__malloc__overrides_8h_1a34d61a21a177a63f9681e1d89653cc74" compoundref="unity__fixture_8c" startline="243" endline="258">unity_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a34d61a21a177a63f9681e1d89653cc74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unity_free</definition>
        <argsstring>(void *mem)</argsstring>
        <name>unity_free</name>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="243" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="243" bodyend="258"/>
        <references refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" compoundref="unity__internals_8h" startline="391">UNITY_STORAGE_T::CurrentTestLineNumber</references>
        <references refid="unity__fixture_8c_1a6f3beab996c5abbecb5d9ed6950cf13d" compoundref="unity__fixture_8c" startline="218" endline="225">isOverrun</references>
        <references refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" compoundref="unity__fixture_8c" startline="227" endline="241">release_memory</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <referencedby refid="unity__fixture__Test_8c_1abd69643a685b46777bd9a2ba39338b20" compoundref="unity__fixture__Test_8c" startline="47" endline="57">TEST</referencedby>
        <referencedby refid="unity__output__Spy_8h_1a0915ac11fce4fd69d1c961c7cd050f8e" compoundref="unity__output__Spy_8c" startline="30" endline="34">UnityOutputCharSpy_Destroy</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a55e86effa9aaf4a111d6b47684a05369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* unity_calloc</definition>
        <argsstring>(size_t num, size_t size)</argsstring>
        <name>unity_calloc</name>
        <param>
          <type>size_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="260" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="260" bodyend="266"/>
        <references refid="unity__fixture__malloc__overrides_8h_1a93ff6fda0f975eb47b8d828bd084f411" compoundref="unity__fixture_8c" startline="181" endline="216">unity_malloc</references>
        <referencedby refid="unity__fixture__Test_8c_1a0bc093afbc24f24d70ecf9bc721a1344" compoundref="unity__fixture__Test_8c" startline="101" endline="110">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a943255616637b00dbcf8e798acf0ab20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* unity_realloc</definition>
        <argsstring>(void *oldMem, size_t size)</argsstring>
        <name>unity_realloc</name>
        <param>
          <type>void *</type>
          <declname>oldMem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="268" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="268" bodyend="303"/>
        <referencedby refid="unity__fixture__Test_8c_1aea04b21650a2c88c5d011c414356399b" compoundref="unity__fixture__Test_8c" startline="59" endline="65">TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a799ef3abbb7aeb75b7f8faaf870dee5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPointer_Init</definition>
        <argsstring>(void)</argsstring>
        <name>UnityPointer_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="317" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="317" bodyend="320"/>
        <references refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" compoundref="unity__fixture_8c" startline="315">pointer_index</references>
        <referencedby refid="unity__fixture__Test_8c_1a71f21057fe7ca680a76047df15aae32e" compoundref="unity__fixture__Test_8c" startline="115" endline="132">TEST</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1ac29ad7cc4430309e0abfdfda6ad34635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPointer_Set</definition>
        <argsstring>(void **pointer, void *newValue, UNITY_LINE_TYPE line)</argsstring>
        <name>UnityPointer_Set</name>
        <param>
          <type>void **</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="322" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="322" bodyend="335"/>
        <references refid="structPointerPair_1afa4927f6318fe77182704346b634da13" compoundref="unity__fixture_8c" startline="311">PointerPair::old_value</references>
        <references refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" compoundref="unity__fixture_8c" startline="310">PointerPair::pointer</references>
        <references refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" compoundref="unity__fixture_8c" startline="315">pointer_index</references>
        <references refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" compoundref="unity__fixture_8c" startline="314">pointer_store</references>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a378369455928df4fd5101722645953c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPointer_UndoAllSets</definition>
        <argsstring>(void)</argsstring>
        <name>UnityPointer_UndoAllSets</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="337" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="337" bodyend="345"/>
        <references refid="structPointerPair_1afa4927f6318fe77182704346b634da13" compoundref="unity__fixture_8c" startline="311">PointerPair::old_value</references>
        <references refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" compoundref="unity__fixture_8c" startline="310">PointerPair::pointer</references>
        <references refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" compoundref="unity__fixture_8c" startline="315">pointer_index</references>
        <references refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" compoundref="unity__fixture_8c" startline="314">pointer_store</references>
        <referencedby refid="unity__fixture__Test_8c_1a183393cdcc25e60984298bf48c8a47cc" compoundref="unity__fixture__Test_8c" startline="31" endline="45">TEST</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a898356b51b63100ec321e05d2e5f2d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnityGetCommandLineOptions</definition>
        <argsstring>(int argc, const char *argv[])</argsstring>
        <name>UnityGetCommandLineOptions</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="347" column="5" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="347" bodyend="407"/>
        <references refid="structUNITY__FIXTURE__T_1a9480a05bc2d571c0fe5f8a7872082af1" compoundref="unity__fixture__internals_8h" startline="21">UNITY_FIXTURE_T::GroupFilter</references>
        <references refid="structUNITY__FIXTURE__T_1a98e6483802e9ba8c55cd10f9eec36cb3" compoundref="unity__fixture__internals_8h" startline="20">UNITY_FIXTURE_T::NameFilter</references>
        <references refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" compoundref="unity__fixture__internals_8h" startline="19">UNITY_FIXTURE_T::RepeatCount</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <references refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" compoundref="unity__fixture__internals_8h" startline="18">UNITY_FIXTURE_T::Verbose</references>
        <referencedby refid="unity__fixture__Test_8c_1a6dd5f3f906e49b2cc859da9a68fb5c2c" compoundref="unity__fixture__Test_8c" startline="185" endline="192">TEST</referencedby>
        <referencedby refid="unity__fixture_8h_1a58ec279183697abbd5d3efea3442d4e5" compoundref="unity__fixture_8c" startline="32" endline="49">UnityMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity__fixture_8c_1a1ae5ed8b684e16585dd4bd0cb07f51eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityConcludeFixtureTest</definition>
        <argsstring>(void)</argsstring>
        <name>UnityConcludeFixtureTest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/extras/fixture/src/unity_fixture.c" line="409" column="6" bodyfile="tests/unity/extras/fixture/src/unity_fixture.c" bodystart="409" bodyend="432"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" compoundref="unity__internals_8h" startline="396">UNITY_STORAGE_T::CurrentTestIgnored</references>
        <references refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" compoundref="unity__internals_8h" startline="393">UNITY_STORAGE_T::TestFailures</references>
        <references refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" compoundref="unity__internals_8h" startline="394">UNITY_STORAGE_T::TestIgnores</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" compoundref="unity__fixture_8c" startline="12">UnityFixture</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" compoundref="unity__fixture__internals_8h" startline="18">UNITY_FIXTURE_T::Verbose</references>
        <referencedby refid="unity__fixture__Test_8c_1acee2e4a8922cfc7f9ac37e2df0fd94ac" compoundref="unity__fixture__Test_8c" startline="139" endline="153">TEST</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="unity__fixture__internals_8h_1a7bb0ff1b1e2f4e56979878609016c11e" refkind="member"><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2010<sp/>James<sp/>Grenning<sp/>and<sp/>Contributed<sp/>to<sp/>Unity<sp/>Project</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>==========================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Unity<sp/>Project<sp/>-<sp/>A<sp/>Test<sp/>Framework<sp/>for<sp/>C</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2007<sp/>Mike<sp/>Karlesky,<sp/>Mark<sp/>VanderVoord,<sp/>Greg<sp/>Williams</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>[Released<sp/>under<sp/>MIT<sp/>License.<sp/>Please<sp/>refer<sp/>to<sp/>license.txt<sp/>for<sp/>details]</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>==========================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity__fixture_8h" kindref="compound">unity_fixture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity__internals_8h" kindref="compound">unity_internals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUNITY__FIXTURE__T" kindref="compound">UNITY_FIXTURE_T</ref><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>you<sp/>decide<sp/>to<sp/>use<sp/>the<sp/>function<sp/>pointer<sp/>approach.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Build<sp/>with<sp/>-D<sp/>UNITY_OUTPUT_CHAR=outputChar<sp/>and<sp/>include<sp/>&lt;stdio.h&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>int<sp/>(*outputChar)(int)<sp/>=<sp/>putchar;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(UNITY_WEAK_ATTRIBUTE)<sp/>&amp;&amp;<sp/>!defined(UNITY_WEAK_PRAGMA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="unity__fixture_8c_1a95c834d6178047ce9e1bce7cbfea2836" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a95c834d6178047ce9e1bce7cbfea2836" kindref="member">setUp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*does<sp/>nothing*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="20" refid="unity__fixture_8c_1a9909011e5fea0c018842eec4d93d0662" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a9909011e5fea0c018842eec4d93d0662" kindref="member">tearDown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">/*does<sp/>nothing*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" kindref="member">announceTestRun</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runNumber)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;Unity<sp/>test<sp/>run<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(runNumber+1);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(<ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" kindref="member">RepeatCount</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="unity__fixture_8h_1a58ec279183697abbd5d3efea3442d4e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a58ec279183697abbd5d3efea3442d4e5" kindref="member">UnityMain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<ref refid="AllTests_8c_1a7f649b562ed3d6a869db371002a27075" kindref="member">runAllTests</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="unity__fixture_8c_1a898356b51b63100ec321e05d2e5f2d55" kindref="member">UnityGetCommandLineOptions</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" kindref="member">RepeatCount</ref>;<sp/>r++)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aed50601fbdaea8fc0fef0c61cf877809" kindref="member">UnityBegin</ref>(argv[0]);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" kindref="member">announceTestRun</ref>(r);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AllTests_8c_1a7f649b562ed3d6a869db371002a27075" kindref="member">runAllTests</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" kindref="member">Verbose</ref>)<sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" kindref="member">UnityEnd</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" kindref="member">TestFailures</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="unity__fixture_8c_1addf1fa3a2d7db3fcc310ec0d0a337eff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1addf1fa3a2d7db3fcc310ec0d0a337eff" kindref="member">selected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strstr(<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>,<sp/>filter)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" kindref="member">testSelected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>test)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1addf1fa3a2d7db3fcc310ec0d0a337eff" kindref="member">selected</ref>(<ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1a98e6483802e9ba8c55cd10f9eec36cb3" kindref="member">NameFilter</ref>,<sp/>test);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" kindref="member">groupSelected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture__Test_8c_1aed0f0a476b6440526e5fd67097fd799c" kindref="member">group</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1addf1fa3a2d7db3fcc310ec0d0a337eff" kindref="member">selected</ref>(<ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1a9480a05bc2d571c0fe5f8a7872082af1" kindref="member">GroupFilter</ref>,<sp/><ref refid="unity__fixture__Test_8c_1aed0f0a476b6440526e5fd67097fd799c" kindref="member">group</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a5d76db431eacd889a636a2a49e2d6077" kindref="member">UnityTestRunner</ref>(<ref refid="unity__fixture__internals_8h_1aa3c739140f3ffd8f39779be4e6598774" kindref="member">unityfunction</ref>*<sp/>setup,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture__internals_8h_1aa3c739140f3ffd8f39779be4e6598774" kindref="member">unityfunction</ref>*<sp/>testBody,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture__internals_8h_1aa3c739140f3ffd8f39779be4e6598774" kindref="member">unityfunction</ref>*<sp/>teardown,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printableName,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture__Test_8c_1aed0f0a476b6440526e5fd67097fd799c" kindref="member">group</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" kindref="member">testSelected</ref>(<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>)<sp/>&amp;&amp;<sp/><ref refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" kindref="member">groupSelected</ref>(<ref refid="unity__fixture__Test_8c_1aed0f0a476b6440526e5fd67097fd799c" kindref="member">group</ref>))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" kindref="member">TestFile</ref><sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" kindref="member">CurrentTestName</ref><sp/>=<sp/>printableName;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" kindref="member">CurrentTestLineNumber</ref><sp/>=<sp/>line;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" kindref="member">Verbose</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(printableName);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>UNITY_REPEAT_TEST_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" kindref="member">CurrentTestName</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" kindref="member">NumberOfTests</ref>++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ad5bf2e255600eb6aef54f95c9a838628" kindref="member">UnityMalloc_StartTest</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a799ef3abbb7aeb75b7f8faaf870dee5e" kindref="member">UnityPointer_Init</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a61d21043921ebc1c2ee49543fc100f9a" kindref="member">TEST_PROTECT</ref>())</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testBody();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a61d21043921ebc1c2ee49543fc100f9a" kindref="member">TEST_PROTECT</ref>())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>teardown();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a61d21043921ebc1c2ee49543fc100f9a" kindref="member">TEST_PROTECT</ref>())</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a378369455928df4fd5101722645953c6" kindref="member">UnityPointer_UndoAllSets</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a44409b47989dd823f395d62ba759032a" kindref="member">UnityMalloc_EndTest</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a1ae5ed8b684e16585dd4bd0cb07f51eb" kindref="member">UnityConcludeFixtureTest</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="unity__fixture__internals_8h_1a0979b54fd6b64e3d44c2adc91fe2c80e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a0979b54fd6b64e3d44c2adc91fe2c80e" kindref="member">UnityIgnoreTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>printableName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture__Test_8c_1aed0f0a476b6440526e5fd67097fd799c" kindref="member">group</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1a8f394b022e49e022267f4cbdcd9da855" kindref="member">testSelected</ref>(<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>)<sp/>&amp;&amp;<sp/><ref refid="unity__fixture_8c_1a6e8f15027dcf573c012fc42fc7f95213" kindref="member">groupSelected</ref>(<ref refid="unity__fixture__Test_8c_1aed0f0a476b6440526e5fd67097fd799c" kindref="member">group</ref>))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" kindref="member">NumberOfTests</ref>++;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" kindref="member">TestIgnores</ref>++;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" kindref="member">Verbose</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(printableName);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Malloc<sp/>and<sp/>free<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="unity__fixture_8c_1a3f1b1eff9064dbe426821f93e435fee5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MALLOC_DONT_FAIL<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" kindref="member">malloc_count</ref>;</highlight></codeline>
<codeline lineno="136" refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" kindref="member">malloc_fail_countdown</ref><sp/>=<sp/><ref refid="unity__fixture_8c_1a3f1b1eff9064dbe426821f93e435fee5" kindref="member">MALLOC_DONT_FAIL</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="unity__fixture__internals_8h_1ad5bf2e255600eb6aef54f95c9a838628" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1ad5bf2e255600eb6aef54f95c9a838628" kindref="member">UnityMalloc_StartTest</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" kindref="member">malloc_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" kindref="member">malloc_fail_countdown</ref><sp/>=<sp/><ref refid="unity__fixture_8c_1a3f1b1eff9064dbe426821f93e435fee5" kindref="member">MALLOC_DONT_FAIL</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="unity__fixture__internals_8h_1a44409b47989dd823f395d62ba759032a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a44409b47989dd823f395d62ba759032a" kindref="member">UnityMalloc_EndTest</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" kindref="member">malloc_fail_countdown</ref><sp/>=<sp/><ref refid="unity__fixture_8c_1a3f1b1eff9064dbe426821f93e435fee5" kindref="member">MALLOC_DONT_FAIL</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" kindref="member">malloc_count</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a3d31f0df7b97fe0bed97d15583042aa4" kindref="member">UNITY_TEST_FAIL</ref>(<ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" kindref="member">CurrentTestLineNumber</ref>,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>test<sp/>leaks!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="unity__fixture_8h_1a7d3b04cbb7731cdf0c033d4c3a822d2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a987522fae9a5f45af2cf385a2223bdac" kindref="member">UnityMalloc_MakeMallocFailAfterCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countdown)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" kindref="member">malloc_fail_countdown</ref><sp/>=<sp/>countdown;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>definitions<sp/>are<sp/>always<sp/>included<sp/>from<sp/>unity_fixture_malloc_overrides.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>undef<sp/>to<sp/>use<sp/>them<sp/>or<sp/>avoid<sp/>conflict<sp/>with<sp/>&lt;stdlib.h&gt;<sp/>per<sp/>the<sp/>C<sp/>standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_STDLIB_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>unity_heap[UNITY_INTERNAL_HEAP_SIZE_BYTES];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>heap_index;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="structGuardBytes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGuardBytes" kindref="compound">GuardBytes</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174" refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="175" refid="structGuardBytes_1a96585124a68487455e7fc4990680fbdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structGuardBytes_1a96585124a68487455e7fc4990680fbdb" kindref="member">guard_space</ref>;</highlight></codeline>
<codeline lineno="176" refid="unity__fixture_8c_1a6f4162ac543f92892987e4557edd1f0b" refkind="member"><highlight class="normal">}<sp/><ref refid="unity__fixture_8c_1a6f4162ac543f92892987e4557edd1f0b" kindref="member">Guard</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;END&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="unity__fixture__malloc__overrides_8h_1a93ff6fda0f975eb47b8d828bd084f411" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture_8c_1a93ff6fda0f975eb47b8d828bd084f411" kindref="member">unity_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mem;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGuardBytes" kindref="compound">Guard</ref>*<sp/>guard;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size<sp/>=<sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unity__fixture_8c_1a6f4162ac543f92892987e4557edd1f0b" kindref="member">Guard</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" kindref="member">malloc_fail_countdown</ref><sp/>!=<sp/><ref refid="unity__fixture_8c_1a3f1b1eff9064dbe426821f93e435fee5" kindref="member">MALLOC_DONT_FAIL</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" kindref="member">malloc_fail_countdown</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ab7fc308c8a9a276ee6c3b12483663d31" kindref="member">malloc_fail_countdown</ref>--;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_STDLIB_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap_index<sp/>+<sp/>total_size<sp/>&gt;<sp/>UNITY_INTERNAL_HEAP_SIZE_BYTES)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guard<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guard<sp/>=<sp/>(<ref refid="structGuardBytes" kindref="compound">Guard</ref>*)&amp;unity_heap[heap_index];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_index<sp/>+=<sp/>total_size;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>guard<sp/>=<sp/>(<ref refid="structGuardBytes" kindref="compound">Guard</ref>*)<ref refid="unity__fixture__malloc__overrides_8h_1ab26049f9ba1924f79efb7ccc5a71c020" kindref="member">UNITY_FIXTURE_MALLOC</ref>(total_size);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guard<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" kindref="member">malloc_count</ref>++;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref><sp/>=<sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>guard-&gt;<ref refid="structGuardBytes_1a96585124a68487455e7fc4990680fbdb" kindref="member">guard_space</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;(guard[1]);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;mem[<ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>],<sp/><ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)mem;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="unity__fixture_8c_1a6f3beab996c5abbecb5d9ed6950cf13d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a6f3beab996c5abbecb5d9ed6950cf13d" kindref="member">isOverrun</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mem)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGuardBytes" kindref="compound">Guard</ref>*<sp/>guard<sp/>=<sp/>(<ref refid="structGuardBytes" kindref="compound">Guard</ref>*)mem;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>memAsChar<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)mem;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>guard--;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>guard-&gt;<ref refid="structGuardBytes_1a96585124a68487455e7fc4990680fbdb" kindref="member">guard_space</ref><sp/>!=<sp/>0<sp/>||<sp/>strcmp(&amp;memAsChar[guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref>],<sp/><ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" kindref="member">release_memory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mem)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGuardBytes" kindref="compound">Guard</ref>*<sp/>guard<sp/>=<sp/>(<ref refid="structGuardBytes" kindref="compound">Guard</ref>*)mem;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>guard--;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a68e8d8ffce2ca197b90ba94adde6efa7" kindref="member">malloc_count</ref>--;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_STDLIB_MALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>unity_heap<sp/>+<sp/>heap_index<sp/>-<sp/>guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>))</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_index<sp/>-=<sp/>(guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unity__fixture_8c_1a6f4162ac543f92892987e4557edd1f0b" kindref="member">Guard</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture__malloc__overrides_8h_1ae40455769ddeba6b0295b7c13be6ea52" kindref="member">UNITY_FIXTURE_FREE</ref>(guard);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="unity__fixture__malloc__overrides_8h_1a34d61a21a177a63f9681e1d89653cc74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a34d61a21a177a63f9681e1d89653cc74" kindref="member">unity_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mem)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overrun;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>overrun<sp/>=<sp/><ref refid="unity__fixture_8c_1a6f3beab996c5abbecb5d9ed6950cf13d" kindref="member">isOverrun</ref>(mem);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" kindref="member">release_memory</ref>(mem);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overrun)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a3d31f0df7b97fe0bed97d15583042aa4" kindref="member">UNITY_TEST_FAIL</ref>(<ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" kindref="member">CurrentTestLineNumber</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Buffer<sp/>overrun<sp/>detected<sp/>during<sp/>free()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="unity__fixture__malloc__overrides_8h_1a55e86effa9aaf4a111d6b47684a05369" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture_8c_1a55e86effa9aaf4a111d6b47684a05369" kindref="member">unity_calloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mem<sp/>=<sp/><ref refid="unity__fixture_8c_1a93ff6fda0f975eb47b8d828bd084f411" kindref="member">unity_malloc</ref>(num<sp/>*<sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mem,<sp/>0,<sp/>num<sp/>*<sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture_8c_1a943255616637b00dbcf8e798acf0ab20" kindref="member">unity_realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>oldMem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGuardBytes" kindref="compound">Guard</ref>*<sp/>guard<sp/>=<sp/>(<ref refid="structGuardBytes" kindref="compound">Guard</ref>*)oldMem;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>newMem;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldMem<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a93ff6fda0f975eb47b8d828bd084f411" kindref="member">unity_malloc</ref>(<ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>guard--;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1a6f3beab996c5abbecb5d9ed6950cf13d" kindref="member">isOverrun</ref>(oldMem))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" kindref="member">release_memory</ref>(oldMem);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a3d31f0df7b97fe0bed97d15583042aa4" kindref="member">UNITY_TEST_FAIL</ref>(<ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" kindref="member">CurrentTestLineNumber</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Buffer<sp/>overrun<sp/>detected<sp/>during<sp/>realloc()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" kindref="member">release_memory</ref>(oldMem);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref><sp/>&gt;=<sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldMem;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_EXCLUDE_STDLIB_MALLOC<sp/></highlight><highlight class="comment">/*<sp/>Optimization<sp/>if<sp/>memory<sp/>is<sp/>expandable<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldMem<sp/>==<sp/>unity_heap<sp/>+<sp/>heap_index<sp/>-<sp/>guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unity__fixture_8c_1acc28e141c890270905160748bebdc3ed" kindref="member">end</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap_index<sp/>+<sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref><sp/>-<sp/>guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref><sp/>&lt;=<sp/>UNITY_INTERNAL_HEAP_SIZE_BYTES)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" kindref="member">release_memory</ref>(oldMem);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>thread-safe,<sp/>like<sp/>unity_heap<sp/>generally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a93ff6fda0f975eb47b8d828bd084f411" kindref="member">unity_malloc</ref>(<ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>);<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>memcpy<sp/>since<sp/>data<sp/>is<sp/>in<sp/>place<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>newMem<sp/>=<sp/><ref refid="unity__fixture_8c_1a93ff6fda0f975eb47b8d828bd084f411" kindref="member">unity_malloc</ref>(<ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newMem<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>not<sp/>release<sp/>old<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(newMem,<sp/>oldMem,<sp/>guard-&gt;<ref refid="structGuardBytes_1aaaa61ece04c10796769dfb24d15227dc" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a074a56afb3ebceadda65ee87911e4b68" kindref="member">release_memory</ref>(oldMem);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newMem;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*Automatic<sp/>pointer<sp/>restoration<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="structPointerPair" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPointerPair" kindref="compound">PointerPair</ref></highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310" refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><ref refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="311" refid="structPointerPair_1afa4927f6318fe77182704346b634da13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structPointerPair_1afa4927f6318fe77182704346b634da13" kindref="member">old_value</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPointerPair" kindref="compound">PointerPair</ref><sp/><ref refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" kindref="member">pointer_store</ref>[<ref refid="unity__fixture__internals_8h_1af5c2db10e08158be3e8b33336e52d549" kindref="member">UNITY_MAX_POINTERS</ref>];</highlight></codeline>
<codeline lineno="315" refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="unity__fixture__internals_8h_1a799ef3abbb7aeb75b7f8faaf870dee5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a799ef3abbb7aeb75b7f8faaf870dee5e" kindref="member">UnityPointer_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="unity__fixture__internals_8h_1acd8eb8ea79ad611a9427f35997d8becd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1ac29ad7cc4430309e0abfdfda6ad34635" kindref="member">UnityPointer_Set</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><ref refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" kindref="member">pointer</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>newValue,<sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>line)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref><sp/>&gt;=<sp/><ref refid="unity__fixture__internals_8h_1af5c2db10e08158be3e8b33336e52d549" kindref="member">UNITY_MAX_POINTERS</ref>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a3d31f0df7b97fe0bed97d15583042aa4" kindref="member">UNITY_TEST_FAIL</ref>(line,<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>pointers<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" kindref="member">pointer_store</ref>[<ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref>].<ref refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" kindref="member">pointer</ref><sp/>=<sp/><ref refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" kindref="member">pointer_store</ref>[<ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref>].<ref refid="structPointerPair_1afa4927f6318fe77182704346b634da13" kindref="member">old_value</ref><sp/>=<sp/>*<ref refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" kindref="member">pointer</ref><sp/>=<sp/>newValue;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref>++;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="unity__fixture__internals_8h_1a378369455928df4fd5101722645953c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a378369455928df4fd5101722645953c6" kindref="member">UnityPointer_UndoAllSets</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref>--;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(<ref refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" kindref="member">pointer_store</ref>[<ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref>].<ref refid="structPointerPair_1a2875d2c1a18176e22513cf845e83d85c" kindref="member">pointer</ref>)<sp/>=</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1ad1d22c2d4d5c634da2fae342ff9050e4" kindref="member">pointer_store</ref>[<ref refid="unity__fixture_8c_1a2272648675f5d1d6eb576431d1afa673" kindref="member">pointer_index</ref>].<ref refid="structPointerPair_1afa4927f6318fe77182704346b634da13" kindref="member">old_value</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="unity__fixture__internals_8h_1a898356b51b63100ec321e05d2e5f2d55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a898356b51b63100ec321e05d2e5f2d55" kindref="member">UnityGetCommandLineOptions</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" kindref="member">Verbose</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1a9480a05bc2d571c0fe5f8a7872082af1" kindref="member">GroupFilter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1a98e6483802e9ba8c55cd10f9eec36cb3" kindref="member">NameFilter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" kindref="member">RepeatCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" kindref="member">Verbose</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-g&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>argc)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1a9480a05bc2d571c0fe5f8a7872082af1" kindref="member">GroupFilter</ref><sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-n&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>argc)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1a98e6483802e9ba8c55cd10f9eec36cb3" kindref="member">NameFilter</ref><sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-r&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" kindref="member">RepeatCount</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(argv[i])<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*(argv[i])<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>digit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" kindref="member">RepeatCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(argv[i][digit]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>argv[i][digit]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" kindref="member">RepeatCount</ref><sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1aaa9feba9c4991248a4107098e40813ac" kindref="member">RepeatCount</ref><sp/>+=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)argv[i][digit++]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>unknown<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="unity__fixture__internals_8h_1a1ae5ed8b684e16585dd4bd0cb07f51eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__fixture_8c_1a1ae5ed8b684e16585dd4bd0cb07f51eb" kindref="member">UnityConcludeFixtureTest</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" kindref="member">CurrentTestIgnored</ref>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" kindref="member">TestIgnores</ref>++;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref>)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__fixture_8c_1a7bb0ff1b1e2f4e56979878609016c11e" kindref="member">UnityFixture</ref>.<ref refid="structUNITY__FIXTURE__T_1ae5650e8bb94e0d9c75913a112277e445" kindref="member">Verbose</ref>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>PASS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Unity.CurrentTestFailed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" kindref="member">TestFailures</ref>++;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" kindref="member">CurrentTestIgnored</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/unity/extras/fixture/src/unity_fixture.c"/>
  </compounddef>
</doxygen>
