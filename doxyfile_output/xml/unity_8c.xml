<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="unity_8c" kind="file" language="C++">
    <compoundname>unity.c</compoundname>
    <includes refid="unity_8h" local="yes">unity.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>setjmp.h</label>
      </node>
      <node id="10">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>../examples/unity_config.h</label>
        <link refid="unity__config_8h"/>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>unity_internals.h</label>
        <link refid="unity__internals_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/unity/src/unity.c</label>
        <link refid="unity_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>unity.h</label>
        <link refid="unity_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="unity_8c_1a9f11f285a74cf837a5281ec56a21c86b" prot="public" static="no">
        <name>UNITY_INCLUDE_SETUP_STUBS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="7" column="9" bodyfile="tests/unity/src/unity.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" prot="public" static="no">
        <name>UNITY_FAIL_AND_BAIL</name>
        <initializer>{ Unity.CurrentTestFailed  = 1; <ref refid="unity__internals_8h_1a35ff53d9ad3c4ec9d611fdf04319a23b" kindref="member">TEST_ABORT</ref>(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="17" column="9" bodyfile="tests/unity/src/unity.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity_8c_1a8e7615065c9272a62eede0f1e725a774" prot="public" static="no">
        <name>UNITY_IGNORE_AND_BAIL</name>
        <initializer>{ Unity.CurrentTestIgnored = 1; <ref refid="unity__internals_8h_1a35ff53d9ad3c4ec9d611fdf04319a23b" kindref="member">TEST_ABORT</ref>(); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="18" column="9" bodyfile="tests/unity/src/unity.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity_8c_1abf9f99b384602e58874744dda3492aaa" prot="public" static="no">
        <name>RETURN_IF_FAIL_OR_IGNORE</name>
        <initializer>if (Unity.CurrentTestFailed || Unity.CurrentTestIgnored) return</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="19" column="9" bodyfile="tests/unity/src/unity.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" prot="public" static="no">
        <name>UnityPrintPointlessAndBail</name>
        <param></param>
        <initializer>{                                          \
    <ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber); \
    <ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a3512e59b7ef2269347af3afa0671ba84" kindref="member">UnityStrPointless</ref>);         \
    <ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);           \
    <ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="593" column="9" bodyfile="tests/unity/src/unity.c" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity_8c_1a02810feed4a9aca0b2f997854b94a01c" prot="public" static="no">
        <name>UNITY_FLOAT_OR_DOUBLE_WITHIN</name>
        <param><defname>delta</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <param><defname>diff</defname></param>
        <initializer>    if (<ref refid="unity__internals_8h_1a851063e6624621d373e8f4da8973d27b" kindref="member">isinf</ref>(expected) &amp;&amp; <ref refid="unity__internals_8h_1a851063e6624621d373e8f4da8973d27b" kindref="member">isinf</ref>(actual) &amp;&amp; ((expected &lt; 0) == (actual &lt; 0))) return 1;   \
    if (<ref refid="unity_8c_1a8943c89baca5ddc88a0f88a389ef13c7" kindref="member">UNITY_NAN_CHECK</ref>) return 1;                                                        \
    diff = actual - expected;                                                             \
    if (diff &lt; 0) diff = -diff;                                                           \
    if (delta &lt; 0) delta = -delta;                                                        \
    return !(<ref refid="unity__internals_8h_1a57f9c20a91520ba43d7942d03bb7a314" kindref="member">isnan</ref>(diff) || <ref refid="unity__internals_8h_1a851063e6624621d373e8f4da8973d27b" kindref="member">isinf</ref>(diff) || (diff &gt; delta))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="680" column="9" bodyfile="tests/unity/src/unity.c" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity_8c_1a8943c89baca5ddc88a0f88a389ef13c7" prot="public" static="no">
        <name>UNITY_NAN_CHECK</name>
        <initializer><ref refid="unity__internals_8h_1a57f9c20a91520ba43d7942d03bb7a314" kindref="member">isnan</ref>(expected) &amp;&amp; <ref refid="unity__internals_8h_1a57f9c20a91520ba43d7942d03bb7a314" kindref="member">isnan</ref>(actual)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="689" column="11" bodyfile="tests/unity/src/unity.c" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="unity_8c_1a8432f7429c7fcc0952eeae3658707be9" prot="public" static="no">
        <name>UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</name>
        <param><defname>expected</defname></param>
        <param><defname>actual</defname></param>
        <initializer>  {                                                               \
    <ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);                                 \
    <ref refid="unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(expected);                                    \
    <ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);                                      \
    <ref refid="unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(actual); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="695" column="11" bodyfile="tests/unity/src/unity.c" bodystart="695" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structUNITY__STORAGE__T" kindref="compound">UNITY_STORAGE_T</ref></type>
        <definition>struct UNITY_STORAGE_T Unity</definition>
        <argsstring></argsstring>
        <name>Unity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1" column="0" bodyfile="tests/unity/src/unity.c" bodystart="21" bodyend="-1"/>
        <referencedby refid="testparameterized_8c_1a9909011e5fea0c018842eec4d93d0662" compoundref="testparameterized_8c" startline="53">tearDown</referencedby>
        <referencedby refid="unity__fixture__Test_8c_1acee2e4a8922cfc7f9ac37e2df0fd94ac" compoundref="unity__fixture__Test_8c" startline="139" endline="153">TEST</referencedby>
        <referencedby refid="testRunnerGeneratorWithMocks_8c_1a77ecdb5246db5687be932e5ffd2db094" compoundref="testRunnerGeneratorWithMocks_8c" startline="184" endline="191">test_ShouldCallMockInitAndVerifyFunctionsForEachTest</referencedby>
        <referencedby refid="unity__fixture__malloc__overrides_8h_1a34d61a21a177a63f9681e1d89653cc74" compoundref="unity__fixture_8c" startline="243" endline="258">unity_free</referencedby>
        <referencedby refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="unity__internals_8h_1ac2901e8d0e2c26074462d616736e808f" compoundref="unity_8c" startline="1004" endline="1040">UnityAssertEqualString</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="unity__internals_8h_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="unity_8c" startline="1043" endline="1080">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="unity__internals_8h_1aed50601fbdaea8fc0fef0c61cf877809" compoundref="unity_8c" startline="1349" endline="1362">UnityBegin</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a1ae5ed8b684e16585dd4bd0cb07f51eb" compoundref="unity__fixture_8c" startline="409" endline="432">UnityConcludeFixtureTest</referencedby>
        <referencedby refid="unity__internals_8h_1a44f03f0124e59f6996da61946cc2a58e" compoundref="unity_8c" startline="376" endline="396">UnityConcludeTest</referencedby>
        <referencedby refid="unity__internals_8h_1ae3c8272eef0f0b6228ca47b9dd1aa2af" compoundref="unity_8c" startline="1330" endline="1346">UnityDefaultTestRun</referencedby>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
        <referencedby refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" compoundref="unity_8c" startline="1280" endline="1311">UnityFail</referencedby>
        <referencedby refid="unity__internals_8h_1a65cb63407f65e4f71f29ab4907f78734" compoundref="unity_8c" startline="1314" endline="1327">UnityIgnore</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a0979b54fd6b64e3d44c2adc91fe2c80e" compoundref="unity__fixture_8c" startline="115" endline="129">UnityIgnoreTest</referencedby>
        <referencedby refid="unity__fixture_8h_1a58ec279183697abbd5d3efea3442d4e5" compoundref="unity__fixture_8c" startline="32" endline="49">UnityMain</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a44409b47989dd823f395d62ba759032a" compoundref="unity__fixture_8c" startline="144" endline="151">UnityMalloc_EndTest</referencedby>
        <referencedby refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="unity_8c" startline="357" endline="365">UnityTestResultsBegin</referencedby>
        <referencedby refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrOk[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrOk</name>
        <initializer>= &quot;OK&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="29" column="19" bodyfile="tests/unity/src/unity.c" bodystart="29" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrPass[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrPass</name>
        <initializer>= &quot;PASS&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="30" column="19" bodyfile="tests/unity/src/unity.c" bodystart="30" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a44f03f0124e59f6996da61946cc2a58e" compoundref="unity_8c" startline="376" endline="396">UnityConcludeTest</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrFail[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrFail</name>
        <initializer>= &quot;FAIL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="31" column="19" bodyfile="tests/unity/src/unity.c" bodystart="31" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
        <referencedby refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" compoundref="unity_8c" startline="1280" endline="1311">UnityFail</referencedby>
        <referencedby refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1afee1e18090d3dba33ca2573759911a03" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrIgnore[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrIgnore</name>
        <initializer>= &quot;IGNORE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="32" column="19" bodyfile="tests/unity/src/unity.c" bodystart="32" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a65cb63407f65e4f71f29ab4907f78734" compoundref="unity_8c" startline="1314" endline="1327">UnityIgnore</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNull[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNull</name>
        <initializer>= &quot;NULL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="34" column="19" bodyfile="tests/unity/src/unity.c" bodystart="34" bodyend="-1"/>
        <referencedby refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="unity_8c" startline="422" endline="446">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="unity_8c" startline="449" endline="475">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrSpacer[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrSpacer</name>
        <initializer>= &quot;. &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="35" column="19" bodyfile="tests/unity/src/unity.c" bodystart="35" bodyend="-1"/>
        <referencedby refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" compoundref="unity_8c" startline="1280" endline="1311">UnityFail</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrExpected[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrExpected</name>
        <initializer>= &quot; Expected &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="36" column="19" bodyfile="tests/unity/src/unity.c" bodystart="36" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a711623f2c929b3f12dddd5261382309d" compoundref="unity_8c" startline="513" endline="531">UnityAssertBits</referencedby>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="unity_8c" startline="534" endline="552">UnityAssertEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="unity_8c" startline="422" endline="446">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="unity_8c" startline="449" endline="475">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrWas[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrWas</name>
        <initializer>= &quot; Was &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="37" column="19" bodyfile="tests/unity/src/unity.c" bodystart="37" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a711623f2c929b3f12dddd5261382309d" compoundref="unity_8c" startline="513" endline="531">UnityAssertBits</referencedby>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="unity_8c" startline="534" endline="552">UnityAssertEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="unity_8c" startline="422" endline="446">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="unity_8c" startline="449" endline="475">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrGt[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrGt</name>
        <initializer>= &quot; to be greater than &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="38" column="19" bodyfile="tests/unity/src/unity.c" bodystart="38" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrLt[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrLt</name>
        <initializer>= &quot; to be less than &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="39" column="19" bodyfile="tests/unity/src/unity.c" bodystart="39" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrOrEqual[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrOrEqual</name>
        <initializer>= &quot;or equal to &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="40" column="19" bodyfile="tests/unity/src/unity.c" bodystart="40" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrElement[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrElement</name>
        <initializer>= &quot; Element &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="41" column="19" bodyfile="tests/unity/src/unity.c" bodystart="41" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" compoundref="unity_8c" startline="842" endline="881">UnityAssertEqualDoubleArray</referencedby>
        <referencedby refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="unity_8c" startline="712" endline="751">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrByte[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrByte</name>
        <initializer>= &quot; Byte &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="42" column="19" bodyfile="tests/unity/src/unity.c" bodystart="42" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrMemory[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrMemory</name>
        <initializer>= &quot; Memory Mismatch.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="43" column="19" bodyfile="tests/unity/src/unity.c" bodystart="43" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDelta[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDelta</name>
        <initializer>= &quot; Values Not Within Delta &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="44" column="19" bodyfile="tests/unity/src/unity.c" bodystart="44" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a3512e59b7ef2269347af3afa0671ba84" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrPointless[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrPointless</name>
        <initializer>= &quot; You Asked Me To Compare Nothing, Which Was Pointless.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="45" column="19" bodyfile="tests/unity/src/unity.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNullPointerForExpected[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNullPointerForExpected</name>
        <initializer>= &quot; Expected pointer to be NULL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="46" column="19" bodyfile="tests/unity/src/unity.c" bodystart="46" bodyend="-1"/>
        <referencedby refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a62e630267be1d3697cb3bb4198dd089a" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNullPointerForActual[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNullPointerForActual</name>
        <initializer>= &quot; Actual pointer was NULL&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="47" column="19" bodyfile="tests/unity/src/unity.c" bodystart="47" bodyend="-1"/>
        <referencedby refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNot[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNot</name>
        <initializer>= &quot;Not &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="49" column="19" bodyfile="tests/unity/src/unity.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a4876da1b8ed2466bd85555f662e7697e" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrInf[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrInf</name>
        <initializer>= &quot;Infinity&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="50" column="19" bodyfile="tests/unity/src/unity.c" bodystart="50" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a61bebbc78e4db9e108a3af7836366d11" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNegInf[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNegInf</name>
        <initializer>= &quot;Negative Infinity&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="51" column="19" bodyfile="tests/unity/src/unity.c" bodystart="51" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrNaN[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrNaN</name>
        <initializer>= &quot;NaN&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="52" column="19" bodyfile="tests/unity/src/unity.c" bodystart="52" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDet[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDet</name>
        <initializer>= &quot;Determinate&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="53" column="19" bodyfile="tests/unity/src/unity.c" bodystart="53" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a36d991a514b3f74e81e9481529079e3b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrInvalidFloatTrait[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrInvalidFloatTrait</name>
        <initializer>= &quot;Invalid Float Trait&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="54" column="19" bodyfile="tests/unity/src/unity.c" bodystart="54" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ab644636442c612d56dfadc6970d2af67" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrFloat[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrFloat</name>
        <initializer>= &quot;Unity Floating Point Disabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="56" column="12" bodyfile="tests/unity/src/unity.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ac8d03220554dfa13081f6a057ced349e" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErrDouble[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErrDouble</name>
        <initializer>= &quot;Unity Double Precision Disabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="57" column="12" bodyfile="tests/unity/src/unity.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1af5c213ecde93420aed908a92a5b32c66" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrErr64[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrErr64</name>
        <initializer>= &quot;Unity 64-bit Support Disabled&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="58" column="12" bodyfile="tests/unity/src/unity.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrBreaker[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrBreaker</name>
        <initializer>= &quot;-----------------------&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="59" column="19" bodyfile="tests/unity/src/unity.c" bodystart="59" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrResultsTests[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrResultsTests</name>
        <initializer>= &quot; Tests &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="60" column="19" bodyfile="tests/unity/src/unity.c" bodystart="60" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrResultsFailures[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrResultsFailures</name>
        <initializer>= &quot; Failures &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="61" column="19" bodyfile="tests/unity/src/unity.c" bodystart="61" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ab866d9dfd564414877c69e753e7e382e" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrResultsIgnored[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrResultsIgnored</name>
        <initializer>= &quot; Ignored &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="62" column="19" bodyfile="tests/unity/src/unity.c" bodystart="62" bodyend="-1"/>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDetail1Name[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDetail1Name</name>
        <initializer>=  &quot;Function&quot;  &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="63" column="19" bodyfile="tests/unity/src/unity.c" bodystart="63" bodyend="-1"/>
        <referencedby refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" compoundref="unity_8c" startline="1280" endline="1311">UnityFail</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char UnityStrDetail2Name[]</definition>
        <argsstring>[]</argsstring>
        <name>UnityStrDetail2Name</name>
        <initializer>= &quot; &quot;  &quot;Argument&quot;  &quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="64" column="19" bodyfile="tests/unity/src/unity.c" bodystart="64" bodyend="-1"/>
        <referencedby refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" compoundref="unity_8c" startline="1280" endline="1311">UnityFail</referencedby>
      </memberdef>
      <memberdef kind="variable" id="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" prot="public" static="yes" mutable="no">
        <type>union @0</type>
        <definition>union @0 UnityQuickCompare</definition>
        <argsstring></argsstring>
        <name>UnityQuickCompare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1235" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrint</definition>
        <argsstring>(const char *string)</argsstring>
        <name>UnityPrint</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="70" column="6" bodyfile="tests/unity/src/unity.c" bodystart="70" bodyend="117"/>
        <references refid="unity__internals_8h_1a2a0a7fcc2e0d607c053035e4da00500e" compoundref="unity_8c" startline="210" endline="230">UnityPrintNumberHex</references>
        <referencedby refid="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" compoundref="unity__fixture_8c" startline="23" endline="30">announceTestRun</referencedby>
        <referencedby refid="testparameterized_8c_1a9909011e5fea0c018842eec4d93d0662" compoundref="testparameterized_8c" startline="53">tearDown</referencedby>
        <referencedby refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</referencedby>
        <referencedby refid="unity__internals_8h_1a711623f2c929b3f12dddd5261382309d" compoundref="unity_8c" startline="513" endline="531">UnityAssertBits</referencedby>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" compoundref="unity_8c" startline="842" endline="881">UnityAssertEqualDoubleArray</referencedby>
        <referencedby refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="unity_8c" startline="712" endline="751">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="unity_8c" startline="534" endline="552">UnityAssertEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a1ae5ed8b684e16585dd4bd0cb07f51eb" compoundref="unity__fixture_8c" startline="409" endline="432">UnityConcludeFixtureTest</referencedby>
        <referencedby refid="unity__internals_8h_1a44f03f0124e59f6996da61946cc2a58e" compoundref="unity_8c" startline="376" endline="396">UnityConcludeTest</referencedby>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
        <referencedby refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" compoundref="unity_8c" startline="1280" endline="1311">UnityFail</referencedby>
        <referencedby refid="unity__internals_8h_1a65cb63407f65e4f71f29ab4907f78734" compoundref="unity_8c" startline="1314" endline="1327">UnityIgnore</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1a0979b54fd6b64e3d44c2adc91fe2c80e" compoundref="unity__fixture_8c" startline="115" endline="129">UnityIgnoreTest</referencedby>
        <referencedby refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</referencedby>
        <referencedby refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="unity_8c" startline="422" endline="446">UnityPrintExpectedAndActualStrings</referencedby>
        <referencedby refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="unity_8c" startline="449" endline="475">UnityPrintExpectedAndActualStringsLen</referencedby>
        <referencedby refid="unity__internals_8h_1ac3d39bc0740a28949a2ba689588491c2" compoundref="unity_8c" startline="266" endline="353">UnityPrintFloat</referencedby>
        <referencedby refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="unity_8c" startline="357" endline="365">UnityTestResultsBegin</referencedby>
        <referencedby refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</referencedby>
        <referencedby refid="unity__fixture__internals_8h_1aae64fa6f0f5b87191a67ad858f95ca89" compoundref="unity__fixture_8c" startline="68" endline="113">UnityTestRunner</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a780817a15f2437360bd593c8fa7a1481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintLen</definition>
        <argsstring>(const char *string, const UNITY_UINT32 length)</argsstring>
        <name>UnityPrintLen</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="119" column="6" bodyfile="tests/unity/src/unity.c" bodystart="119" bodyend="154"/>
        <references refid="unity__internals_8h_1a2a0a7fcc2e0d607c053035e4da00500e" compoundref="unity_8c" startline="210" endline="230">UnityPrintNumberHex</references>
        <referencedby refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="unity_8c" startline="449" endline="475">UnityPrintExpectedAndActualStringsLen</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberByStyle</definition>
        <argsstring>(const UNITY_INT number, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityPrintNumberByStyle</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>number</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="157" column="6" bodyfile="tests/unity/src/unity.c" bodystart="157" bodyend="173"/>
        <references refid="unity__internals_8h_1ac96c1190db29236c5125638854eb82e6" compoundref="unity_8c" startline="176" endline="187">UnityPrintNumber</references>
        <references refid="unity__internals_8h_1a2a0a7fcc2e0d607c053035e4da00500e" compoundref="unity_8c" startline="210" endline="230">UnityPrintNumberHex</references>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="unity_8c" startline="534" endline="552">UnityAssertEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a644211a214ab000dcabd5582c52e0313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumber</definition>
        <argsstring>(const UNITY_INT number_to_print)</argsstring>
        <name>UnityPrintNumber</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>number_to_print</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="176" column="6" bodyfile="tests/unity/src/unity.c" bodystart="176" bodyend="187"/>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <referencedby refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" compoundref="unity_8c" startline="1365" endline="1392">UnityEnd</referencedby>
        <referencedby refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</referencedby>
        <referencedby refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="unity_8c" startline="357" endline="365">UnityTestResultsBegin</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberUnsigned</definition>
        <argsstring>(const UNITY_UINT number)</argsstring>
        <name>UnityPrintNumberUnsigned</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="191" column="6" bodyfile="tests/unity/src/unity.c" bodystart="191" bodyend="207"/>
        <referencedby refid="unity__fixture_8c_1ac54f18088c1ed178f3c602b868014f5d" compoundref="unity__fixture_8c" startline="23" endline="30">announceTestRun</referencedby>
        <referencedby refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" compoundref="unity_8c" startline="842" endline="881">UnityAssertEqualDoubleArray</referencedby>
        <referencedby refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="unity_8c" startline="712" endline="751">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="unity__internals_8h_1ac96c1190db29236c5125638854eb82e6" compoundref="unity_8c" startline="176" endline="187">UnityPrintNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintNumberHex</definition>
        <argsstring>(const UNITY_UINT number, const char nibbles_to_print)</argsstring>
        <name>UnityPrintNumberHex</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>number</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>nibbles_to_print</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="210" column="6" bodyfile="tests/unity/src/unity.c" bodystart="210" bodyend="230"/>
        <referencedby refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</referencedby>
        <referencedby refid="unity__internals_8h_1a780817a15f2437360bd593c8fa7a1481" compoundref="unity_8c" startline="119" endline="154">UnityPrintLen</referencedby>
        <referencedby refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintMask</definition>
        <argsstring>(const UNITY_UINT mask, const UNITY_UINT number)</argsstring>
        <name>UnityPrintMask</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="233" column="6" bodyfile="tests/unity/src/unity.c" bodystart="233" bodyend="257"/>
        <referencedby refid="unity__internals_8h_1a711623f2c929b3f12dddd5261382309d" compoundref="unity_8c" startline="513" endline="531">UnityAssertBits</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1ac3d39bc0740a28949a2ba689588491c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityPrintFloat</definition>
        <argsstring>(const UNITY_DOUBLE input_number)</argsstring>
        <name>UnityPrintFloat</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>input_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="266" column="6" bodyfile="tests/unity/src/unity.c" bodystart="266" bodyend="353"/>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityTestResultsBegin</definition>
        <argsstring>(const char *file, const UNITY_UINT line)</argsstring>
        <name>UnityTestResultsBegin</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="357" column="13" bodyfile="tests/unity/src/unity.c" bodystart="357" bodyend="365"/>
        <references refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" compoundref="unity__internals_8h" startline="386">UNITY_STORAGE_T::CurrentTestName</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1ac96c1190db29236c5125638854eb82e6" compoundref="unity_8c" startline="176" endline="187">UnityPrintNumber</references>
        <referencedby refid="unity__internals_8h_1a44f03f0124e59f6996da61946cc2a58e" compoundref="unity_8c" startline="376" endline="396">UnityConcludeTest</referencedby>
        <referencedby refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" compoundref="unity_8c" startline="1280" endline="1311">UnityFail</referencedby>
        <referencedby refid="unity__internals_8h_1a65cb63407f65e4f71f29ab4907f78734" compoundref="unity_8c" startline="1314" endline="1327">UnityIgnore</referencedby>
        <referencedby refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityTestResultsFailBegin</definition>
        <argsstring>(const UNITY_UINT line)</argsstring>
        <name>UnityTestResultsFailBegin</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="368" column="13" bodyfile="tests/unity/src/unity.c" bodystart="368" bodyend="373"/>
        <references refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" compoundref="unity__internals_8h" startline="385">UNITY_STORAGE_T::TestFile</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" compoundref="unity_8c" startline="31">UnityStrFail</references>
        <references refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="unity_8c" startline="357" endline="365">UnityTestResultsBegin</references>
        <referencedby refid="unity__internals_8h_1a711623f2c929b3f12dddd5261382309d" compoundref="unity_8c" startline="513" endline="531">UnityAssertBits</referencedby>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a21f44bea524fd2055973b0e84ed98011" compoundref="unity_8c" startline="884" endline="899">UnityAssertDoublesWithin</referencedby>
        <referencedby refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" compoundref="unity_8c" startline="842" endline="881">UnityAssertEqualDoubleArray</referencedby>
        <referencedby refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="unity_8c" startline="712" endline="751">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="unity_8c" startline="534" endline="552">UnityAssertEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1ac2901e8d0e2c26074462d616736e808f" compoundref="unity_8c" startline="1004" endline="1040">UnityAssertEqualString</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="unity__internals_8h_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="unity_8c" startline="1043" endline="1080">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a14adc0e30747c0823cbea7ebef92f114" compoundref="unity_8c" startline="754" endline="770">UnityAssertFloatsWithin</referencedby>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a44f03f0124e59f6996da61946cc2a58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityConcludeTest</definition>
        <argsstring>(void)</argsstring>
        <name>UnityConcludeTest</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="376" column="6" bodyfile="tests/unity/src/unity.c" bodystart="376" bodyend="396"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" compoundref="unity__internals_8h" startline="396">UNITY_STORAGE_T::CurrentTestIgnored</references>
        <references refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" compoundref="unity__internals_8h" startline="391">UNITY_STORAGE_T::CurrentTestLineNumber</references>
        <references refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" compoundref="unity__internals_8h" startline="393">UNITY_STORAGE_T::TestFailures</references>
        <references refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" compoundref="unity__internals_8h" startline="385">UNITY_STORAGE_T::TestFile</references>
        <references refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" compoundref="unity__internals_8h" startline="394">UNITY_STORAGE_T::TestIgnores</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" compoundref="unity_8c" startline="30">UnityStrPass</references>
        <references refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="unity_8c" startline="357" endline="365">UnityTestResultsBegin</references>
        <referencedby refid="unity__internals_8h_1ae3c8272eef0f0b6228ca47b9dd1aa2af" compoundref="unity_8c" startline="1330" endline="1346">UnityDefaultTestRun</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityAddMsgIfSpecified</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>UnityAddMsgIfSpecified</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="399" column="13" bodyfile="tests/unity/src/unity.c" bodystart="399" bodyend="419"/>
        <references refid="structUNITY__STORAGE__T_1a21674715adf3d4d1ac7f0c459887cf9d" compoundref="unity__internals_8h" startline="388">UNITY_STORAGE_T::CurrentDetail1</references>
        <references refid="structUNITY__STORAGE__T_1a9d821447e216e215911e8726aa986eec" compoundref="unity__internals_8h" startline="389">UNITY_STORAGE_T::CurrentDetail2</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" compoundref="unity_8c" startline="63">UnityStrDetail1Name</references>
        <references refid="unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" compoundref="unity_8c" startline="64">UnityStrDetail2Name</references>
        <references refid="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" compoundref="unity_8c" startline="35">UnityStrSpacer</references>
        <referencedby refid="unity__internals_8h_1a711623f2c929b3f12dddd5261382309d" compoundref="unity_8c" startline="513" endline="531">UnityAssertBits</referencedby>
        <referencedby refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" compoundref="unity_8c" startline="903" endline="960">UnityAssertDoubleSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a21f44bea524fd2055973b0e84ed98011" compoundref="unity_8c" startline="884" endline="899">UnityAssertDoublesWithin</referencedby>
        <referencedby refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" compoundref="unity_8c" startline="842" endline="881">UnityAssertEqualDoubleArray</referencedby>
        <referencedby refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="unity_8c" startline="712" endline="751">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1abbcf6507bc7150940fcf66999db6bc2a" compoundref="unity_8c" startline="534" endline="552">UnityAssertEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1ac2901e8d0e2c26074462d616736e808f" compoundref="unity_8c" startline="1004" endline="1040">UnityAssertEqualString</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
        <referencedby refid="unity__internals_8h_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="unity_8c" startline="1043" endline="1080">UnityAssertEqualStringLen</referencedby>
        <referencedby refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" compoundref="unity_8c" startline="773" endline="830">UnityAssertFloatSpecial</referencedby>
        <referencedby refid="unity__internals_8h_1a14adc0e30747c0823cbea7ebef92f114" compoundref="unity_8c" startline="754" endline="770">UnityAssertFloatsWithin</referencedby>
        <referencedby refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" compoundref="unity_8c" startline="555" endline="591">UnityAssertGreaterOrLessOrEqualNumber</referencedby>
        <referencedby refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" compoundref="unity_8c" startline="965" endline="1001">UnityAssertNumbersWithin</referencedby>
        <referencedby refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a37ee59a2ee4703563707b044db8739eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityPrintExpectedAndActualStrings</definition>
        <argsstring>(const char *expected, const char *actual)</argsstring>
        <name>UnityPrintExpectedAndActualStrings</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="422" column="13" bodyfile="tests/unity/src/unity.c" bodystart="422" bodyend="446"/>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" compoundref="unity_8c" startline="34">UnityStrNull</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <referencedby refid="unity__internals_8h_1ac2901e8d0e2c26074462d616736e808f" compoundref="unity_8c" startline="1004" endline="1040">UnityAssertEqualString</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1aee1c0284290f43293c296a979dc1b901" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void UnityPrintExpectedAndActualStringsLen</definition>
        <argsstring>(const char *expected, const char *actual, const UNITY_UINT32 length)</argsstring>
        <name>UnityPrintExpectedAndActualStringsLen</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="449" column="13" bodyfile="tests/unity/src/unity.c" bodystart="449" bodyend="475"/>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a780817a15f2437360bd593c8fa7a1481" compoundref="unity_8c" startline="119" endline="154">UnityPrintLen</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" compoundref="unity_8c" startline="34">UnityStrNull</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <referencedby refid="unity__internals_8h_1acdb5ad99e8015b63ae4f7963cbacef81" compoundref="unity_8c" startline="1043" endline="1080">UnityAssertEqualStringLen</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1aa4561ef9000ea11e866c410fb974192a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int UnityIsOneArrayNull</definition>
        <argsstring>(const void *expected, const void *actual, const UNITY_UINT lineNumber, const char *msg)</argsstring>
        <name>UnityIsOneArrayNull</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="481" column="12" bodyfile="tests/unity/src/unity.c" bodystart="481" bodyend="507"/>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1a62e630267be1d3697cb3bb4198dd089a" compoundref="unity_8c" startline="47">UnityStrNullPointerForActual</references>
        <references refid="unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" compoundref="unity_8c" startline="46">UnityStrNullPointerForExpected</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
        <referencedby refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" compoundref="unity_8c" startline="842" endline="881">UnityAssertEqualDoubleArray</referencedby>
        <referencedby refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="unity_8c" startline="712" endline="751">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" compoundref="unity_8c" startline="601" endline="675">UnityAssertEqualIntArray</referencedby>
        <referencedby refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" compoundref="unity_8c" startline="1162" endline="1217">UnityAssertEqualMemory</referencedby>
        <referencedby refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" compoundref="unity_8c" startline="1083" endline="1159">UnityAssertEqualStringArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a711623f2c929b3f12dddd5261382309d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertBits</definition>
        <argsstring>(const UNITY_INT mask, const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertBits</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="513" column="6" bodyfile="tests/unity/src/unity.c" bodystart="513" bodyend="531"/>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a207d5b3e2bfe8042b0505066ccd07c9b" compoundref="unity_8c" startline="233" endline="257">UnityPrintMask</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualNumber</definition>
        <argsstring>(const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertEqualNumber</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="534" column="6" bodyfile="tests/unity/src/unity.c" bodystart="534" bodyend="552"/>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertGreaterOrLessOrEqualNumber</definition>
        <argsstring>(const UNITY_INT threshold, const UNITY_INT actual, const UNITY_COMPARISON_T compare, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertGreaterOrLessOrEqualNumber</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48" kindref="member">UNITY_COMPARISON_T</ref></type>
          <declname>compare</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="555" column="6" bodyfile="tests/unity/src/unity.c" bodystart="555" bodyend="591"/>
        <references refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48ae634f01c386e7cf5adb87fdff10d0ef7" compoundref="unity__internals_8h" startline="355">UNITY_EQUAL_TO</references>
        <references refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48aef9811b045f1d85315961563cf96df72" compoundref="unity__internals_8h" startline="356">UNITY_GREATER_THAN</references>
        <references refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48a38d5a94ed78601d130841c0796bcdd27" compoundref="unity__internals_8h" startline="358">UNITY_SMALLER_THAN</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" compoundref="unity_8c" startline="38">UnityStrGt</references>
        <references refid="unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" compoundref="unity_8c" startline="39">UnityStrLt</references>
        <references refid="unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" compoundref="unity_8c" startline="40">UnityStrOrEqual</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualIntArray</definition>
        <argsstring>(const void *expected, const void *actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualIntArray</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref></type>
          <declname>style</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="601" column="6" bodyfile="tests/unity/src/unity.c" bodystart="601" bodyend="675"/>
        <references refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" compoundref="unity__internals_8h" startline="380">UNITY_ARRAY_TO_ARRAY</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</references>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <references refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="unity_8c" startline="41">UnityStrElement</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a1508384dc55508b31192772f11d6973c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int UnityFloatsWithin</definition>
        <argsstring>(UNITY_FLOAT delta, UNITY_FLOAT expected, UNITY_FLOAT actual)</argsstring>
        <name>UnityFloatsWithin</name>
        <param>
          <type><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref></type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref></type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="706" column="12" bodyfile="tests/unity/src/unity.c" bodystart="706" bodyend="710"/>
        <referencedby refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" compoundref="unity_8c" startline="712" endline="751">UnityAssertEqualFloatArray</referencedby>
        <referencedby refid="unity__internals_8h_1a14adc0e30747c0823cbea7ebef92f114" compoundref="unity_8c" startline="754" endline="770">UnityAssertFloatsWithin</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualFloatArray</definition>
        <argsstring>(const UNITY_FLOAT *expected, const UNITY_FLOAT *actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualFloatArray</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref> *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref> *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="712" column="6" bodyfile="tests/unity/src/unity.c" bodystart="712" bodyend="751"/>
        <references refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" compoundref="unity__internals_8h" startline="380">UNITY_ARRAY_TO_ARRAY</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1a1508384dc55508b31192772f11d6973c" compoundref="unity_8c" startline="706" endline="710">UnityFloatsWithin</references>
        <references refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <references refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="unity_8c" startline="41">UnityStrElement</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a14adc0e30747c0823cbea7ebef92f114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertFloatsWithin</definition>
        <argsstring>(const UNITY_FLOAT delta, const UNITY_FLOAT expected, const UNITY_FLOAT actual, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertFloatsWithin</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref></type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="754" column="6" bodyfile="tests/unity/src/unity.c" bodystart="754" bodyend="770"/>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1a1508384dc55508b31192772f11d6973c" compoundref="unity_8c" startline="706" endline="710">UnityFloatsWithin</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertFloatSpecial</definition>
        <argsstring>(const UNITY_FLOAT actual, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLOAT_TRAIT_T style)</argsstring>
        <name>UnityAssertFloatSpecial</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1b89a0178ea753186faf9f3dc271e2ba" kindref="member">UNITY_FLOAT_TRAIT_T</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="773" column="6" bodyfile="tests/unity/src/unity.c" bodystart="773" bodyend="830"/>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9df079c54906458c9d1d99d2ac26275a" compoundref="unity__internals_8h" startline="372">UNITY_FLOAT_IS_DET</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9ceb93a4a5ce94726a153ca20877c447" compoundref="unity__internals_8h" startline="366">UNITY_FLOAT_IS_INF</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a43b25527bc46de77748a152b4be49057" compoundref="unity__internals_8h" startline="370">UNITY_FLOAT_IS_NAN</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a4ae18ad2eb5577fbbb61396e7de329cc" compoundref="unity__internals_8h" startline="368">UNITY_FLOAT_IS_NEG_INF</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a87c2784971818301fc117b2ec02e339e" compoundref="unity__internals_8h" startline="371">UNITY_FLOAT_IS_NOT_DET</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a55d10c41853433a52e4bcf114370cc3c" compoundref="unity__internals_8h" startline="365">UNITY_FLOAT_IS_NOT_INF</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a6cd53722882f0d01dea4da8d2c148898" compoundref="unity__internals_8h" startline="369">UNITY_FLOAT_IS_NOT_NAN</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a1b9d774ad2582220a5986239a39b0c79" compoundref="unity__internals_8h" startline="367">UNITY_FLOAT_IS_NOT_NEG_INF</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1ac3d39bc0740a28949a2ba689588491c2" compoundref="unity_8c" startline="266" endline="353">UnityPrintFloat</references>
        <references refid="unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" compoundref="unity_8c" startline="53">UnityStrDet</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a4876da1b8ed2466bd85555f662e7697e" compoundref="unity_8c" startline="50">UnityStrInf</references>
        <references refid="unity_8c_1a36d991a514b3f74e81e9481529079e3b" compoundref="unity_8c" startline="54">UnityStrInvalidFloatTrait</references>
        <references refid="unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" compoundref="unity_8c" startline="52">UnityStrNaN</references>
        <references refid="unity_8c_1a61bebbc78e4db9e108a3af7836366d11" compoundref="unity_8c" startline="51">UnityStrNegInf</references>
        <references refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" compoundref="unity_8c" startline="49">UnityStrNot</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a98411fdeef76d68b5d2d9fe8e61715bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int UnityDoublesWithin</definition>
        <argsstring>(UNITY_DOUBLE delta, UNITY_DOUBLE expected, UNITY_DOUBLE actual)</argsstring>
        <name>UnityDoublesWithin</name>
        <param>
          <type><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="836" column="12" bodyfile="tests/unity/src/unity.c" bodystart="836" bodyend="840"/>
        <referencedby refid="unity__internals_8h_1a21f44bea524fd2055973b0e84ed98011" compoundref="unity_8c" startline="884" endline="899">UnityAssertDoublesWithin</referencedby>
        <referencedby refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" compoundref="unity_8c" startline="842" endline="881">UnityAssertEqualDoubleArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a9ebe014a78730b417504a334e0931e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualDoubleArray</definition>
        <argsstring>(const UNITY_DOUBLE *expected, const UNITY_DOUBLE *actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualDoubleArray</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref> *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref> *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="842" column="6" bodyfile="tests/unity/src/unity.c" bodystart="842" bodyend="881"/>
        <references refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" compoundref="unity__internals_8h" startline="380">UNITY_ARRAY_TO_ARRAY</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1a98411fdeef76d68b5d2d9fe8e61715bb" compoundref="unity_8c" startline="836" endline="840">UnityDoublesWithin</references>
        <references refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <references refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="unity_8c" startline="41">UnityStrElement</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a21f44bea524fd2055973b0e84ed98011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertDoublesWithin</definition>
        <argsstring>(const UNITY_DOUBLE delta, const UNITY_DOUBLE expected, const UNITY_DOUBLE actual, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertDoublesWithin</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="884" column="6" bodyfile="tests/unity/src/unity.c" bodystart="884" bodyend="899"/>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1a98411fdeef76d68b5d2d9fe8e61715bb" compoundref="unity_8c" startline="836" endline="840">UnityDoublesWithin</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1ac2f110257d3a7772eaef9d97c0622abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertDoubleSpecial</definition>
        <argsstring>(const UNITY_DOUBLE actual, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLOAT_TRAIT_T style)</argsstring>
        <name>UnityAssertDoubleSpecial</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a1b89a0178ea753186faf9f3dc271e2ba" kindref="member">UNITY_FLOAT_TRAIT_T</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="903" column="6" bodyfile="tests/unity/src/unity.c" bodystart="903" bodyend="960"/>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9df079c54906458c9d1d99d2ac26275a" compoundref="unity__internals_8h" startline="372">UNITY_FLOAT_IS_DET</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9ceb93a4a5ce94726a153ca20877c447" compoundref="unity__internals_8h" startline="366">UNITY_FLOAT_IS_INF</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a43b25527bc46de77748a152b4be49057" compoundref="unity__internals_8h" startline="370">UNITY_FLOAT_IS_NAN</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a4ae18ad2eb5577fbbb61396e7de329cc" compoundref="unity__internals_8h" startline="368">UNITY_FLOAT_IS_NEG_INF</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a87c2784971818301fc117b2ec02e339e" compoundref="unity__internals_8h" startline="371">UNITY_FLOAT_IS_NOT_DET</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a55d10c41853433a52e4bcf114370cc3c" compoundref="unity__internals_8h" startline="365">UNITY_FLOAT_IS_NOT_INF</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a6cd53722882f0d01dea4da8d2c148898" compoundref="unity__internals_8h" startline="369">UNITY_FLOAT_IS_NOT_NAN</references>
        <references refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a1b9d774ad2582220a5986239a39b0c79" compoundref="unity__internals_8h" startline="367">UNITY_FLOAT_IS_NOT_NEG_INF</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1ac3d39bc0740a28949a2ba689588491c2" compoundref="unity_8c" startline="266" endline="353">UnityPrintFloat</references>
        <references refid="unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" compoundref="unity_8c" startline="53">UnityStrDet</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a4876da1b8ed2466bd85555f662e7697e" compoundref="unity_8c" startline="50">UnityStrInf</references>
        <references refid="unity_8c_1a36d991a514b3f74e81e9481529079e3b" compoundref="unity_8c" startline="54">UnityStrInvalidFloatTrait</references>
        <references refid="unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" compoundref="unity_8c" startline="52">UnityStrNaN</references>
        <references refid="unity_8c_1a61bebbc78e4db9e108a3af7836366d11" compoundref="unity_8c" startline="51">UnityStrNegInf</references>
        <references refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" compoundref="unity_8c" startline="49">UnityStrNot</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertNumbersWithin</definition>
        <argsstring>(const UNITY_UINT delta, const UNITY_INT expected, const UNITY_INT actual, const char *msg, const UNITY_UINT lineNumber, const UNITY_DISPLAY_STYLE_T style)</argsstring>
        <name>UnityAssertNumbersWithin</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="965" column="6" bodyfile="tests/unity/src/unity.c" bodystart="965" bodyend="1001"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</references>
        <references refid="unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" compoundref="unity_8c" startline="44">UnityStrDelta</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1ac2901e8d0e2c26074462d616736e808f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualString</definition>
        <argsstring>(const char *expected, const char *actual, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertEqualString</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1004" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1004" bodyend="1040"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="unity_8c" startline="422" endline="446">UnityPrintExpectedAndActualStrings</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualStringLen</definition>
        <argsstring>(const char *expected, const char *actual, const UNITY_UINT32 length, const char *msg, const UNITY_UINT lineNumber)</argsstring>
        <name>UnityAssertEqualStringLen</name>
        <param>
          <type>const char *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1043" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1043" bodyend="1080"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" compoundref="unity_8c" startline="449" endline="475">UnityPrintExpectedAndActualStringsLen</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a2255be5a89ed1551deedd6732e917915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualStringArray</definition>
        <argsstring>(const void *expected, const char **actual, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualStringArray</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1083" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1083" bodyend="1159"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" compoundref="unity__internals_8h" startline="380">UNITY_ARRAY_TO_ARRAY</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" compoundref="unity_8c" startline="422" endline="446">UnityPrintExpectedAndActualStrings</references>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <references refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="unity_8c" startline="41">UnityStrElement</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityAssertEqualMemory</definition>
        <argsstring>(const void *expected, const void *actual, const UNITY_UINT32 length, const UNITY_UINT32 num_elements, const char *msg, const UNITY_UINT lineNumber, const UNITY_FLAGS_T flags)</argsstring>
        <name>UnityAssertEqualMemory</name>
        <param>
          <type>const void *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref></type>
          <declname>num_elements</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>lineNumber</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1162" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1162" bodyend="1217"/>
        <references refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca577dd656fdb92684b33920d5986d6f12" compoundref="unity__internals_8h" startline="379">UNITY_ARRAY_TO_VAL</references>
        <references refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4af3eb9042cc384cbcba5847d20449c8fa" compoundref="unity__internals_8h" startline="343">UNITY_DISPLAY_STYLE_HEX8</references>
        <references refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" compoundref="unity_8c" startline="399" endline="419">UnityAddMsgIfSpecified</references>
        <references refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" compoundref="unity_8c" startline="481" endline="507">UnityIsOneArrayNull</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" compoundref="unity_8c" startline="157" endline="173">UnityPrintNumberByStyle</references>
        <references refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" compoundref="unity_8c" startline="191" endline="207">UnityPrintNumberUnsigned</references>
        <references refid="unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" compoundref="unity_8c" startline="42">UnityStrByte</references>
        <references refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" compoundref="unity_8c" startline="41">UnityStrElement</references>
        <references refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" compoundref="unity_8c" startline="36">UnityStrExpected</references>
        <references refid="unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" compoundref="unity_8c" startline="43">UnityStrMemory</references>
        <references refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" compoundref="unity_8c" startline="37">UnityStrWas</references>
        <references refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" compoundref="unity_8c" startline="368" endline="373">UnityTestResultsFailBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1ad433d8b5fe8da56334e6103487aad8fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* UnityNumToPtr</definition>
        <argsstring>(const UNITY_INT num, const UNITY_UINT8 size)</argsstring>
        <name>UnityNumToPtr</name>
        <param>
          <type>const <ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1ae9c38948acf740d92635783d49f7437c" kindref="member">UNITY_UINT8</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1237" column="17" bodyfile="tests/unity/src/unity.c" bodystart="1237" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a15fd597bf819640790743db56424089b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* UnityFloatToPtr</definition>
        <argsstring>(const float num)</argsstring>
        <name>UnityFloatToPtr</name>
        <param>
          <type>const float</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1261" column="17" bodyfile="tests/unity/src/unity.c" bodystart="1261" bodyend="1265"/>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1afbf0f0258f53d9e340b36f9979509de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* UnityDoubleToPtr</definition>
        <argsstring>(const double num)</argsstring>
        <name>UnityDoubleToPtr</name>
        <param>
          <type>const double</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1269" column="17" bodyfile="tests/unity/src/unity.c" bodystart="1269" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a50275e939943157e22d5847646191696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityFail</definition>
        <argsstring>(const char *msg, const UNITY_UINT line)</argsstring>
        <name>UnityFail</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1280" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1280" bodyend="1311"/>
        <references refid="structUNITY__STORAGE__T_1a21674715adf3d4d1ac7f0c459887cf9d" compoundref="unity__internals_8h" startline="388">UNITY_STORAGE_T::CurrentDetail1</references>
        <references refid="structUNITY__STORAGE__T_1a9d821447e216e215911e8726aa986eec" compoundref="unity__internals_8h" startline="389">UNITY_STORAGE_T::CurrentDetail2</references>
        <references refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" compoundref="unity__internals_8h" startline="385">UNITY_STORAGE_T::TestFile</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" compoundref="unity_8c" startline="63">UnityStrDetail1Name</references>
        <references refid="unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" compoundref="unity_8c" startline="64">UnityStrDetail2Name</references>
        <references refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" compoundref="unity_8c" startline="31">UnityStrFail</references>
        <references refid="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" compoundref="unity_8c" startline="35">UnityStrSpacer</references>
        <references refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="unity_8c" startline="357" endline="365">UnityTestResultsBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a337924d7f537d54aa719e439d339b1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityIgnore</definition>
        <argsstring>(const char *msg, const UNITY_UINT line)</argsstring>
        <name>UnityIgnore</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const <ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1314" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1314" bodyend="1327"/>
        <references refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" compoundref="unity__internals_8h" startline="385">UNITY_STORAGE_T::TestFile</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity_8c_1afee1e18090d3dba33ca2573759911a03" compoundref="unity_8c" startline="32">UnityStrIgnore</references>
        <references refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" compoundref="unity_8c" startline="357" endline="365">UnityTestResultsBegin</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityDefaultTestRun</definition>
        <argsstring>(UnityTestFunction Func, const char *FuncName, const int FuncLineNum)</argsstring>
        <name>UnityDefaultTestRun</name>
        <param>
          <type><ref refid="unity__internals_8h_1a750c0436a18789b916e55d70aae12985" kindref="member">UnityTestFunction</ref></type>
          <declname>Func</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>FuncName</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>FuncLineNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1330" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1330" bodyend="1346"/>
        <references refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" compoundref="unity__internals_8h" startline="391">UNITY_STORAGE_T::CurrentTestLineNumber</references>
        <references refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" compoundref="unity__internals_8h" startline="386">UNITY_STORAGE_T::CurrentTestName</references>
        <references refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" compoundref="unity__internals_8h" startline="392">UNITY_STORAGE_T::NumberOfTests</references>
        <references refid="unity_8h_1a95c834d6178047ce9e1bce7cbfea2836" compoundref="example__1_2test_2TestProductionCode_8c" startline="10" endline="14">setUp</references>
        <references refid="unity_8h_1a9909011e5fea0c018842eec4d93d0662" compoundref="example__1_2test_2TestProductionCode_8c" startline="16" endline="18">tearDown</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1a44f03f0124e59f6996da61946cc2a58e" compoundref="unity_8c" startline="376" endline="396">UnityConcludeTest</references>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1aed50601fbdaea8fc0fef0c61cf877809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UnityBegin</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>UnityBegin</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1349" column="6" bodyfile="tests/unity/src/unity.c" bodystart="1349" bodyend="1362"/>
        <references refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" compoundref="unity__internals_8h" startline="395">UNITY_STORAGE_T::CurrentTestFailed</references>
        <references refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" compoundref="unity__internals_8h" startline="396">UNITY_STORAGE_T::CurrentTestIgnored</references>
        <references refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" compoundref="unity__internals_8h" startline="391">UNITY_STORAGE_T::CurrentTestLineNumber</references>
        <references refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" compoundref="unity__internals_8h" startline="386">UNITY_STORAGE_T::CurrentTestName</references>
        <references refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" compoundref="unity__internals_8h" startline="392">UNITY_STORAGE_T::NumberOfTests</references>
        <references refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" compoundref="unity__internals_8h" startline="393">UNITY_STORAGE_T::TestFailures</references>
        <references refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" compoundref="unity__internals_8h" startline="385">UNITY_STORAGE_T::TestFile</references>
        <references refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" compoundref="unity__internals_8h" startline="394">UNITY_STORAGE_T::TestIgnores</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <referencedby refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c" startline="45" endline="53">main</referencedby>
        <referencedby refid="unity__fixture_8h_1a58ec279183697abbd5d3efea3442d4e5" compoundref="unity__fixture_8c" startline="32" endline="49">UnityMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UnityEnd</definition>
        <argsstring>(void)</argsstring>
        <name>UnityEnd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/src/unity.c" line="1365" column="5" bodyfile="tests/unity/src/unity.c" bodystart="1365" bodyend="1392"/>
        <references refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" compoundref="unity__internals_8h" startline="392">UNITY_STORAGE_T::NumberOfTests</references>
        <references refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" compoundref="unity__internals_8h" startline="393">UNITY_STORAGE_T::TestFailures</references>
        <references refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" compoundref="unity__internals_8h" startline="394">UNITY_STORAGE_T::TestIgnores</references>
        <references refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" compoundref="unity_8c" startline="21">Unity</references>
        <references refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" compoundref="unity_8c" startline="70" endline="117">UnityPrint</references>
        <references refid="unity__internals_8h_1ac96c1190db29236c5125638854eb82e6" compoundref="unity_8c" startline="176" endline="187">UnityPrintNumber</references>
        <references refid="unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" compoundref="unity_8c" startline="59">UnityStrBreaker</references>
        <references refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" compoundref="unity_8c" startline="31">UnityStrFail</references>
        <references refid="unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" compoundref="unity_8c" startline="29">UnityStrOk</references>
        <references refid="unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" compoundref="unity_8c" startline="61">UnityStrResultsFailures</references>
        <references refid="unity_8c_1ab866d9dfd564414877c69e753e7e382e" compoundref="unity_8c" startline="62">UnityStrResultsIgnored</references>
        <references refid="unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" compoundref="unity_8c" startline="60">UnityStrResultsTests</references>
        <referencedby refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c" startline="45" endline="53">main</referencedby>
        <referencedby refid="unity__fixture_8h_1a58ec279183697abbd5d3efea3442d4e5" compoundref="unity__fixture_8c" startline="32" endline="49">UnityMain</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="unity__internals_8h_1aad738f665f16eb2336b8bc33f432d0da" refkind="member"><highlight class="comment">/*<sp/>=========================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Unity<sp/>Project<sp/>-<sp/>A<sp/>Test<sp/>Framework<sp/>for<sp/>C</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-14<sp/>Mike<sp/>Karlesky,<sp/>Mark<sp/>VanderVoord,<sp/>Greg<sp/>Williams</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>[Released<sp/>under<sp/>MIT<sp/>License.<sp/>Please<sp/>refer<sp/>to<sp/>license.txt<sp/>for<sp/>details]</highlight></codeline>
<codeline lineno="5"><highlight class="comment">============================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="unity_8c_1a9f11f285a74cf837a5281ec56a21c86b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_INCLUDE_SETUP_STUBS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity_8h" kindref="compound">unity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>omitted<sp/>from<sp/>header,<sp/>declare<sp/>overrideable<sp/>prototypes<sp/>here<sp/>so<sp/>they&apos;re<sp/>ready<sp/>for<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OMIT_OUTPUT_CHAR_HEADER_DECLARATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helpful<sp/>macros<sp/>for<sp/>us<sp/>to<sp/>use<sp/>here<sp/>in<sp/>Assert<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FAIL_AND_BAIL<sp/><sp/><sp/>{<sp/>Unity.CurrentTestFailed<sp/><sp/>=<sp/>1;<sp/>TEST_ABORT();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="unity_8c_1a8e7615065c9272a62eede0f1e725a774" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_IGNORE_AND_BAIL<sp/>{<sp/>Unity.CurrentTestIgnored<sp/>=<sp/>1;<sp/>TEST_ABORT();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RETURN_IF_FAIL_OR_IGNORE<sp/>if<sp/>(Unity.CurrentTestFailed<sp/>||<sp/>Unity.CurrentTestIgnored)<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structUNITY__STORAGE__T" kindref="compound">UNITY_STORAGE_T</ref><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_COLOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" kindref="member">UnityStrOk</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[42mOK\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" kindref="member">UnityStrPass</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[42mPASS\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[41mFAIL\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1afee1e18090d3dba33ca2573759911a03" kindref="member">UnityStrIgnore</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\033[43mIGNORE\033[00m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" kindref="member">UnityStrOk</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30" refid="unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" kindref="member">UnityStrPass</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PASS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31" refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32" refid="unity_8c_1afee1e18090d3dba33ca2573759911a03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1afee1e18090d3dba33ca2573759911a03" kindref="member">UnityStrIgnore</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IGNORE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35" refid="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36" refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Expected<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37" refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Was<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38" refid="unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" kindref="member">UnityStrGt</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>be<sp/>greater<sp/>than<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39" refid="unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" kindref="member">UnityStrLt</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40" refid="unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" kindref="member">UnityStrOrEqual</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;or<sp/>equal<sp/>to<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41" refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Element<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42" refid="unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" kindref="member">UnityStrByte</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Byte<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43" refid="unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" kindref="member">UnityStrMemory</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Memory<sp/>Mismatch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44" refid="unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" kindref="member">UnityStrDelta</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Values<sp/>Not<sp/>Within<sp/>Delta<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45" refid="unity_8c_1a3512e59b7ef2269347af3afa0671ba84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a3512e59b7ef2269347af3afa0671ba84" kindref="member">UnityStrPointless</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>You<sp/>Asked<sp/>Me<sp/>To<sp/>Compare<sp/>Nothing,<sp/>Which<sp/>Was<sp/>Pointless.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" kindref="member">UnityStrNullPointerForExpected</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Expected<sp/>pointer<sp/>to<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47" refid="unity_8c_1a62e630267be1d3697cb3bb4198dd089a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a62e630267be1d3697cb3bb4198dd089a" kindref="member">UnityStrNullPointerForActual</ref>[]<sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Actual<sp/>pointer<sp/>was<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50" refid="unity_8c_1a4876da1b8ed2466bd85555f662e7697e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a4876da1b8ed2466bd85555f662e7697e" kindref="member">UnityStrInf</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Infinity&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51" refid="unity_8c_1a61bebbc78e4db9e108a3af7836366d11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a61bebbc78e4db9e108a3af7836366d11" kindref="member">UnityStrNegInf</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Negative<sp/>Infinity&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52" refid="unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" kindref="member">UnityStrNaN</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NaN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53" refid="unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" kindref="member">UnityStrDet</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Determinate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54" refid="unity_8c_1a36d991a514b3f74e81e9481529079e3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a36d991a514b3f74e81e9481529079e3b" kindref="member">UnityStrInvalidFloatTrait</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Float<sp/>Trait&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="unity__internals_8h_1ab644636442c612d56dfadc6970d2af67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ab644636442c612d56dfadc6970d2af67" kindref="member">UnityStrErrFloat</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>Floating<sp/>Point<sp/>Disabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57" refid="unity__internals_8h_1ac8d03220554dfa13081f6a057ced349e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ac8d03220554dfa13081f6a057ced349e" kindref="member">UnityStrErrDouble</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>Double<sp/>Precision<sp/>Disabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58" refid="unity__internals_8h_1af5c213ecde93420aed908a92a5b32c66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1af5c213ecde93420aed908a92a5b32c66" kindref="member">UnityStrErr64</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>64-bit<sp/>Support<sp/>Disabled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" kindref="member">UnityStrBreaker</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-----------------------&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60" refid="unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" kindref="member">UnityStrResultsTests</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Tests<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61" refid="unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" kindref="member">UnityStrResultsFailures</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Failures<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62" refid="unity_8c_1ab866d9dfd564414877c69e753e7e382e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ab866d9dfd564414877c69e753e7e382e" kindref="member">UnityStrResultsIgnored</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Ignored<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63" refid="unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" kindref="member">UnityStrDetail1Name</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="unity__internals_8h_1a042d83acbb41b31be88dab4c80fdb0f5" kindref="member">UNITY_DETAIL1_NAME</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64" refid="unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" kindref="member">UnityStrDetail2Name</ref>[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ac9f3f929ab0b17100733abb2ae3a3e90" kindref="member">UNITY_DETAIL2_NAME</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>Pretty<sp/>Printers<sp/>&amp;<sp/>Test<sp/>Result<sp/>Output<sp/>Handlers</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="unity__internals_8h_1accff2eb4cfd0273e8ad62c37639d3e3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pch)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printable<sp/>characters<sp/>plus<sp/>CR<sp/>&amp;<sp/>LF<sp/>are<sp/>printed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pch<sp/>&lt;=<sp/>126)<sp/>&amp;&amp;<sp/>(*pch<sp/>&gt;=<sp/>32))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(*pch);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>carriage<sp/>returns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>13)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>line<sp/>feeds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>10)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_OUTPUT_COLOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>ANSI<sp/>escape<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>27<sp/>&amp;&amp;<sp/>*(pch<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pch<sp/>&amp;&amp;<sp/>*pch<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(*pch);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unprintable<sp/>characters<sp/>are<sp/>shown<sp/>as<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)*pch,<sp/>2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="unity__internals_8h_1a780817a15f2437360bd593c8fa7a1481" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a780817a15f2437360bd593c8fa7a1481" kindref="member">UnityPrintLen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>length)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pch<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pch<sp/>&amp;&amp;<sp/>(<ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref>)(pch<sp/>-<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>&lt;<sp/>length)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printable<sp/>characters<sp/>plus<sp/>CR<sp/>&amp;<sp/>LF<sp/>are<sp/>printed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pch<sp/>&lt;=<sp/>126)<sp/>&amp;&amp;<sp/>(*pch<sp/>&gt;=<sp/>32))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(*pch);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>carriage<sp/>returns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>13)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>escaped<sp/>line<sp/>feeds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pch<sp/>==<sp/>10)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unprintable<sp/>characters<sp/>are<sp/>shown<sp/>as<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)*pch,<sp/>2);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pch++;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="unity__internals_8h_1a83c7c7072b2f0e3cce93e56960da46e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref><sp/>style)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/><ref refid="unity__internals_8h_1a26974acf13f60993e03bd2fde52e7957" kindref="member">UNITY_DISPLAY_RANGE_INT</ref>)<sp/>==<sp/><ref refid="unity__internals_8h_1a26974acf13f60993e03bd2fde52e7957" kindref="member">UNITY_DISPLAY_RANGE_INT</ref>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>(number);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/><ref refid="unity__internals_8h_1a52b6d0ed023c20279b5cf7d6de75bf87" kindref="member">UNITY_DISPLAY_RANGE_UINT</ref>)<sp/>==<sp/><ref refid="unity__internals_8h_1a52b6d0ed023c20279b5cf7d6de75bf87" kindref="member">UNITY_DISPLAY_RANGE_UINT</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)number);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)number,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)((style<sp/>&amp;<sp/>0xF)<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="unity__internals_8h_1ac96c1190db29236c5125638854eb82e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>number_to_print)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>number<sp/>=<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)number_to_print;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number_to_print<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>negative<sp/>number,<sp/>including<sp/>MIN<sp/>negative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>=<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)(-number_to_print);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(number);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>basically<sp/>do<sp/>an<sp/>itoa<sp/>using<sp/>as<sp/>little<sp/>ram<sp/>as<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="unity__internals_8h_1a3ef388786e9a8e769d13af2601b592dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>number)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>divisor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>figure<sp/>out<sp/>initial<sp/>divisor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>/<sp/>divisor<sp/>&gt;<sp/>9)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divisor<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>mod<sp/>and<sp/>print,<sp/>then<sp/>divide<sp/>divisor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>(number<sp/>/<sp/>divisor<sp/>%<sp/>10)));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divisor<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(divisor<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="unity__internals_8h_1a2a0a7fcc2e0d607c053035e4da00500e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ab5636c2c3e2d5ff0d89461e2323aa469" kindref="member">UnityPrintNumberHex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nibbles_to_print)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nibble;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nibbles<sp/>=<sp/>nibbles_to_print;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)nibbles<sp/>&gt;<sp/>(2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(number)))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nibbles<sp/>=<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(number);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nibbles<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nibbles--;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nibble<sp/>=<sp/>(int)(number<sp/>&gt;&gt;<sp/>(nibbles<sp/>*<sp/>4))<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nibble<sp/>&lt;=<sp/>9)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>nibble));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/>10<sp/>+<sp/>nibble));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="unity__internals_8h_1a207d5b3e2bfe8042b0505066ccd07c9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" kindref="member">UnityPrintMask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>number)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>current_bit<sp/>=<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)1<sp/>&lt;&lt;<sp/>(<ref refid="unity__internals_8h_1a49d706e83bdd826e9da179aa695ee390" kindref="member">UNITY_INT_WIDTH</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" kindref="member">UNITY_INT32</ref><sp/>i;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="unity__internals_8h_1a49d706e83bdd826e9da179aa695ee390" kindref="member">UNITY_INT_WIDTH</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_bit<sp/>&amp;<sp/>mask)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_bit<sp/>&amp;<sp/>number)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_bit<sp/>=<sp/>current_bit<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>prints<sp/>a<sp/>floating-point<sp/>value<sp/>in<sp/>a<sp/>format<sp/>similar<sp/>to</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>printf(&quot;%.6g&quot;).<sp/><sp/>It<sp/>can<sp/>work<sp/>with<sp/>either<sp/>single-<sp/>or<sp/>double-precision,</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>but<sp/>for<sp/>simplicity,<sp/>it<sp/>prints<sp/>only<sp/>6<sp/>significant<sp/>digits<sp/>in<sp/>either<sp/>case.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>Printing<sp/>more<sp/>than<sp/>6<sp/>digits<sp/>accurately<sp/>is<sp/>hard<sp/>(at<sp/>least<sp/>in<sp/>the<sp/>single-</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>precision<sp/>case)<sp/>and<sp/>isn&apos;t<sp/>attempted<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="unity__internals_8h_1ac3d39bc0740a28949a2ba689588491c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>input_number)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>number<sp/>=<sp/>input_number;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>minus<sp/>sign<sp/>(including<sp/>for<sp/>negative<sp/>zero)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)0.0f<sp/>||<sp/>(number<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)0.0f<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)1.0f<sp/>/<sp/>number<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)0.0f))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>=<sp/>-number;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>zero,<sp/>NaN,<sp/>and<sp/>+/-<sp/>infinity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>==<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)0.0f)<sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a11b2d271b8abcb53159ffb82dc29547a" kindref="member">isnan</ref>(number))<sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;nan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1abad128f70dbd5a06aa93fe79b3acc4df" kindref="member">isinf</ref>(number))<sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;inf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exponent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decimals,<sp/>digits;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" kindref="member">UNITY_INT32</ref><sp/>n;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[16];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>up<sp/>or<sp/>down<sp/>by<sp/>powers<sp/>of<sp/>10<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(100000.0f<sp/>/<sp/>1e6f))<sp/><sp/>{<sp/>number<sp/>*=<sp/>(double)1e6f;<sp/>exponent<sp/>-=<sp/>6;<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)100000.0f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>number<sp/>*=<sp/>(double)10.0f;<sp/>exponent--;<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(1000000.0f<sp/>*<sp/>1e6f))<sp/>{<sp/>number<sp/>/=<sp/>(double)1e6f;<sp/>exponent<sp/>+=<sp/>6;<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(number<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)1000000.0f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>number<sp/>/=<sp/>(double)10.0f;<sp/>exponent++;<sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>to<sp/>nearest<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>((<ref refid="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" kindref="member">UNITY_INT32</ref>)(number<sp/>+<sp/>number)<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>999999)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent++;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>determine<sp/>where<sp/>to<sp/>place<sp/>decimal<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimals<sp/>=<sp/>(exponent<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>exponent<sp/>&gt;=<sp/>-9)<sp/>?<sp/>-exponent<sp/>:<sp/>5;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent<sp/>+=<sp/>decimals;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>truncate<sp/>trailing<sp/>zeroes<sp/>after<sp/>decimal<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(decimals<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>n<sp/>%<sp/>10<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimals--;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>up<sp/>buffer<sp/>in<sp/>reverse<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>0<sp/>||<sp/>digits<sp/>&lt;<sp/>decimals<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[digits++]<sp/>=<sp/>(char)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>n<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(digits<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(digits<sp/>==<sp/>decimals)<sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(buf[--digits]);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>exponent<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exponent<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(exponent<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent<sp/>=<sp/>-exponent;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(exponent<sp/>!=<sp/>0<sp/>||<sp/>digits<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[digits++]<sp/>=<sp/>(char)(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>exponent<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponent<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(digits<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(buf[--digits]);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!<sp/>UNITY_EXCLUDE_FLOAT_PRINT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>line)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(file);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)line);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" kindref="member">CurrentTestName</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>line)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" kindref="member">TestFile</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="unity__internals_8h_1a44f03f0124e59f6996da61946cc2a58e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a44f03f0124e59f6996da61946cc2a58e" kindref="member">UnityConcludeTest</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" kindref="member">CurrentTestIgnored</ref>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" kindref="member">TestIgnores</ref>++;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" kindref="member">TestFile</ref>,<sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" kindref="member">CurrentTestLineNumber</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ad2cf819d80c1fe3a9649baf4ccdcbced" kindref="member">UnityStrPass</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" kindref="member">TestFailures</ref>++;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" kindref="member">CurrentTestIgnored</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a797ba83286171b672f39e93f97bce814" kindref="member">UNITY_FLUSH_CALL</ref>();</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DETAILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a21674715adf3d4d1ac7f0c459887cf9d" kindref="member">CurrentDetail1</ref>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" kindref="member">UnityStrDetail1Name</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a21674715adf3d4d1ac7f0c459887cf9d" kindref="member">CurrentDetail1</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a9d821447e216e215911e8726aa986eec" kindref="member">CurrentDetail2</ref>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" kindref="member">UnityStrDetail2Name</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a9d821447e216e215911e8726aa986eec" kindref="member">CurrentDetail2</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(msg);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" kindref="member">UnityPrintExpectedAndActualStrings</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(expected);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(actual);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" kindref="member">UnityPrintExpectedAndActualStringsLen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>length)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a780817a15f2437360bd593c8fa7a1481" kindref="member">UnityPrintLen</ref>(expected,<sp/>length);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a780817a15f2437360bd593c8fa7a1481" kindref="member">UnityPrintLen</ref>(actual,<sp/>length);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a78f60aa66b35eadf23ea2c7d6279b499" kindref="member">UnityStrNull</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>Assertion<sp/>&amp;<sp/>Control<sp/>Helpers</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/>expected,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/>actual,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>and<sp/>return<sp/>true<sp/>if<sp/>just<sp/>expected<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ac72614ebe50c4d968eb6ef4a70eb78da" kindref="member">UnityStrNullPointerForExpected</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>and<sp/>return<sp/>true<sp/>if<sp/>just<sp/>actual<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a62e630267be1d3697cb3bb4198dd089a" kindref="member">UnityStrNullPointerForActual</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>return<sp/>false<sp/>if<sp/>neither<sp/>is<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*<sp/>Assertion<sp/>Functions</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="unity__internals_8h_1a711623f2c929b3f12dddd5261382309d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a711623f2c929b3f12dddd5261382309d" kindref="member">UnityAssertBits</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>mask,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>expected,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>actual,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/>expected)<sp/>!=<sp/>(mask<sp/>&amp;<sp/>actual))</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" kindref="member">UnityPrintMask</ref>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)mask,<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)expected);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a207d5b3e2bfe8042b0505066ccd07c9b" kindref="member">UnityPrintMask</ref>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)mask,<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)actual);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="unity__internals_8h_1abbcf6507bc7150940fcf66999db6bc2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1abbcf6507bc7150940fcf66999db6bc2a" kindref="member">UnityAssertEqualNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>expected,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>actual,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref><sp/>style)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>actual)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(expected,<sp/>style);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual,<sp/>style);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="unity__internals_8h_1a3d1ea56b146e2b8f1e7467ab579cb38f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a3d1ea56b146e2b8f1e7467ab579cb38f" kindref="member">UnityAssertGreaterOrLessOrEqualNumber</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>threshold,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>actual,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48" kindref="member">UNITY_COMPARISON_T</ref><sp/>compare,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref><sp/>style)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threshold<sp/>==<sp/>actual<sp/>&amp;&amp;<sp/>compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48ae634f01c386e7cf5adb87fdff10d0ef7" kindref="member">UNITY_EQUAL_TO</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threshold<sp/>==<sp/>actual)<sp/>failed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/><ref refid="unity__internals_8h_1a26974acf13f60993e03bd2fde52e7957" kindref="member">UNITY_DISPLAY_RANGE_INT</ref>)<sp/>==<sp/><ref refid="unity__internals_8h_1a26974acf13f60993e03bd2fde52e7957" kindref="member">UNITY_DISPLAY_RANGE_INT</ref>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>&gt;<sp/>threshold<sp/>&amp;&amp;<sp/>compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48a38d5a94ed78601d130841c0796bcdd27" kindref="member">UNITY_SMALLER_THAN</ref>)<sp/>failed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>&lt;<sp/>threshold<sp/>&amp;&amp;<sp/>compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48aef9811b045f1d85315961563cf96df72" kindref="member">UNITY_GREATER_THAN</ref>)<sp/>failed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>UINT<sp/>or<sp/>HEX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)actual<sp/>&gt;<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)threshold<sp/>&amp;&amp;<sp/>compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48a38d5a94ed78601d130841c0796bcdd27" kindref="member">UNITY_SMALLER_THAN</ref>)<sp/>failed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)actual<sp/>&lt;<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)threshold<sp/>&amp;&amp;<sp/>compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48aef9811b045f1d85315961563cf96df72" kindref="member">UNITY_GREATER_THAN</ref>)<sp/>failed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual,<sp/>style);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48aef9811b045f1d85315961563cf96df72" kindref="member">UNITY_GREATER_THAN</ref>)<sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ae25a9c628718ec7c2e38e9c9e4319f8e" kindref="member">UnityStrGt</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48a38d5a94ed78601d130841c0796bcdd27" kindref="member">UNITY_SMALLER_THAN</ref>)<sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1afd900db1d2a7f61b192c6bf5abecf733" kindref="member">UnityStrLt</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare<sp/>&amp;<sp/><ref refid="unity__internals_8h_1af032691a9e32795aa06770185ac14a48ae634f01c386e7cf5adb87fdff10d0ef7" kindref="member">UNITY_EQUAL_TO</ref>)<sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1aafdcec313458f50683bf0ce05c5a7ac5" kindref="member">UnityStrOrEqual</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(threshold,<sp/>style);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UnityPrintPointlessAndBail()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityTestResultsFailBegin(lineNumber);<sp/>\</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrPointless);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityAddMsgIfSpecified(msg);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UNITY_FAIL_AND_BAIL;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="unity__internals_8h_1ae26992b50db5eb05cbd694f587ede9c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ae26992b50db5eb05cbd694f587ede9c5" kindref="member">UnityAssertEqualIntArray</ref>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/>expected,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/>actual,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>num_elements,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref><sp/>style,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref><sp/>flags)</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/><sp/><sp/>=<sp/>style<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>(expected,<sp/>actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elements--)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>expect_val;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>actual_val;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(length)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ad0279e5d512a86af7ff1cfda67b9f64e" kindref="member">UNITY_INT8</ref>*)expected;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ad0279e5d512a86af7ff1cfda67b9f64e" kindref="member">UNITY_INT8</ref>*)actual;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1af18ca161e8d679a2d3b75928112c1707" kindref="member">UNITY_INT16</ref>*)expected;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1af18ca161e8d679a2d3b75928112c1707" kindref="member">UNITY_INT16</ref>*)actual;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT64*)expected;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNITY_INT64*)actual;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>length<sp/>4<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" kindref="member">UNITY_INT32</ref>*)expected;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>=<sp/>*(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" kindref="member">UNITY_INT32</ref>*)actual;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expect_val<sp/>!=<sp/>actual_val)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>&amp;<sp/><ref refid="unity__internals_8h_1a52b6d0ed023c20279b5cf7d6de75bf87" kindref="member">UNITY_DISPLAY_RANGE_UINT</ref><sp/>&amp;&amp;<sp/>length<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(expect_val))</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>UINT,<sp/>remove<sp/>sign<sp/>extension<sp/>(padding<sp/>1&apos;s)<sp/>from<sp/>signed<sp/>type<sp/>casts<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>mask<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(mask<sp/>&lt;&lt;<sp/>8<sp/>*<sp/>length)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expect_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(expect_val,<sp/>style);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual_val,<sp/>style);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" kindref="member">UNITY_ARRAY_TO_ARRAY</ref>)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/>=<sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(length<sp/>+<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual<sp/><sp/><sp/>=<sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(length<sp/>+<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)actual);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Wrap<sp/>this<sp/>define<sp/>in<sp/>a<sp/>function<sp/>with<sp/>variable<sp/>types<sp/>as<sp/>float<sp/>or<sp/>double<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="unity_8c_1a02810feed4a9aca0b2f997854b94a01c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNITY_FLOAT_OR_DOUBLE_WITHIN(delta,<sp/>expected,<sp/>actual,<sp/>diff)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(isinf(expected)<sp/>&amp;&amp;<sp/>isinf(actual)<sp/>&amp;&amp;<sp/>((expected<sp/>&lt;<sp/>0)<sp/>==<sp/>(actual<sp/>&lt;<sp/>0)))<sp/>return<sp/>1;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(UNITY_NAN_CHECK)<sp/>return<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>actual<sp/>-<sp/>expected;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(diff<sp/>&lt;<sp/>0)<sp/>diff<sp/>=<sp/>-diff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(delta<sp/>&lt;<sp/>0)<sp/>delta<sp/>=<sp/>-delta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>!(isnan(diff)<sp/>||<sp/>isinf(diff)<sp/>||<sp/>(diff<sp/>&gt;<sp/>delta))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>first<sp/>part<sp/>of<sp/>this<sp/>condition<sp/>will<sp/>catch<sp/>any<sp/>NaN<sp/>or<sp/>Infinite<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_NAN_NOT_EQUAL_NAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="unity_8c_1a8943c89baca5ddc88a0f88a389ef13c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_NAN_CHECK<sp/>isnan(expected)<sp/>&amp;&amp;<sp/>isnan(actual)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_NAN_CHECK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="unity_8c_1a8432f7429c7fcc0952eeae3658707be9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT(expected,<sp/>actual)<sp/>\</highlight></codeline>
<codeline lineno="696"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrExpected);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="698"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrintFloat(expected);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="699"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrWas);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="700"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrintFloat(actual);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT(expected,<sp/>actual)<sp/>\</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UnityPrint(UnityStrDelta)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UNITY_EXCLUDE_FLOAT_PRINT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="unity_8c_1a1508384dc55508b31192772f11d6973c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a1508384dc55508b31192772f11d6973c" kindref="member">UnityFloatsWithin</ref>(<ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>delta,<sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>expected,<sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>actual)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>diff;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a02810feed4a9aca0b2f997854b94a01c" kindref="member">UNITY_FLOAT_OR_DOUBLE_WITHIN</ref>(delta,<sp/>expected,<sp/>actual,<sp/>diff);</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712" refid="unity__internals_8h_1abe20adbf70ef8aed0fd8eae06c078b0a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1abe20adbf70ef8aed0fd8eae06c078b0a" kindref="member">UnityAssertEqualFloatArray</ref>(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref>*<sp/>expected,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref>*<sp/>actual,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>num_elements,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref><sp/>flags)</highlight></codeline>
<codeline lineno="718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref>*<sp/>ptr_expected<sp/>=<sp/>expected;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref>*<sp/>ptr_actual<sp/>=<sp/>actual;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>((<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)expected,<sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elements--)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity_8c_1a1508384dc55508b31192772f11d6973c" kindref="member">UnityFloatsWithin</ref>(*ptr_expected<sp/>*<sp/><ref refid="unity__internals_8h_1a98a2e4d26a2d4a3c71e0410459fc66fb" kindref="member">UNITY_FLOAT_PRECISION</ref>,<sp/>*ptr_expected,<sp/>*ptr_actual))</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>((<ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>)*ptr_expected,<sp/>(<ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>)*ptr_actual);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" kindref="member">UNITY_ARRAY_TO_ARRAY</ref>)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_expected++;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_actual++;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="unity__internals_8h_1a14adc0e30747c0823cbea7ebef92f114" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a14adc0e30747c0823cbea7ebef92f114" kindref="member">UnityAssertFloatsWithin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>delta,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>expected,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>actual,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity_8c_1a1508384dc55508b31192772f11d6973c" kindref="member">UnityFloatsWithin</ref>(delta,<sp/>expected,<sp/>actual))</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>((<ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>)expected,<sp/>(<ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>)actual);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="unity__internals_8h_1a5f0d710654c8b1bbd509d78d7813ced7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a5f0d710654c8b1bbd509d78d7813ced7" kindref="member">UnityAssertFloatSpecial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1c5f2cd8f4fa3025ddb3d21596569494" kindref="member">UNITY_FLOAT</ref><sp/>actual,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1b89a0178ea753186faf9f3dc271e2ba" kindref="member">UNITY_FLOAT_TRAIT_T</ref><sp/>style)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trait_names[]<sp/>=<sp/>{<ref refid="unity_8c_1a4876da1b8ed2466bd85555f662e7697e" kindref="member">UnityStrInf</ref>,<sp/><ref refid="unity_8c_1a61bebbc78e4db9e108a3af7836366d11" kindref="member">UnityStrNegInf</ref>,<sp/><ref refid="unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" kindref="member">UnityStrNaN</ref>,<sp/><ref refid="unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" kindref="member">UnityStrDet</ref>};</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>should_be_trait<sp/>=<sp/>((<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)style<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>is_trait<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>!should_be_trait;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>trait_index<sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)(style<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(style)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9ceb93a4a5ce94726a153ca20877c447" kindref="member">UNITY_FLOAT_IS_INF</ref>:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a55d10c41853433a52e4bcf114370cc3c" kindref="member">UNITY_FLOAT_IS_NOT_INF</ref>:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/><ref refid="cJSON_8c_1abad128f70dbd5a06aa93fe79b3acc4df" kindref="member">isinf</ref>(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a4ae18ad2eb5577fbbb61396e7de329cc" kindref="member">UNITY_FLOAT_IS_NEG_INF</ref>:</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a1b9d774ad2582220a5986239a39b0c79" kindref="member">UNITY_FLOAT_IS_NOT_NEG_INF</ref>:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/><ref refid="cJSON_8c_1abad128f70dbd5a06aa93fe79b3acc4df" kindref="member">isinf</ref>(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a43b25527bc46de77748a152b4be49057" kindref="member">UNITY_FLOAT_IS_NAN</ref>:</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a6cd53722882f0d01dea4da8d2c148898" kindref="member">UNITY_FLOAT_IS_NOT_NAN</ref>:</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/><ref refid="cJSON_8c_1a11b2d271b8abcb53159ffb82dc29547a" kindref="member">isnan</ref>(actual)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9df079c54906458c9d1d99d2ac26275a" kindref="member">UNITY_FLOAT_IS_DET</ref>:<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>determinate<sp/>number<sp/>is<sp/>non<sp/>infinite<sp/>and<sp/>not<sp/>NaN.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a87c2784971818301fc117b2ec02e339e" kindref="member">UNITY_FLOAT_IS_NOT_DET</ref>:</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>!<ref refid="cJSON_8c_1abad128f70dbd5a06aa93fe79b3acc4df" kindref="member">isinf</ref>(actual)<sp/>&amp;&amp;<sp/>!<ref refid="cJSON_8c_1a11b2d271b8abcb53159ffb82dc29547a" kindref="member">isnan</ref>(actual);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_names[0]<sp/>=<sp/><ref refid="unity_8c_1a36d991a514b3f74e81e9481529079e3b" kindref="member">UnityStrInvalidFloatTrait</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_trait<sp/>!=<sp/>should_be_trait)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!should_be_trait)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>((<ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>)actual);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_be_trait)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>UNITY_EXCLUDE_FLOAT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="unity_8c_1a98411fdeef76d68b5d2d9fe8e61715bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a98411fdeef76d68b5d2d9fe8e61715bb" kindref="member">UnityDoublesWithin</ref>(<ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>delta,<sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>expected,<sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>actual)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>diff;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a02810feed4a9aca0b2f997854b94a01c" kindref="member">UNITY_FLOAT_OR_DOUBLE_WITHIN</ref>(delta,<sp/>expected,<sp/>actual,<sp/>diff);</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842" refid="unity__internals_8h_1a9ebe014a78730b417504a334e0931e97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a9ebe014a78730b417504a334e0931e97" kindref="member">UnityAssertEqualDoubleArray</ref>(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>*<sp/>expected,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>*<sp/>actual,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>num_elements,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref><sp/>flags)</highlight></codeline>
<codeline lineno="848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>*<sp/>ptr_expected<sp/>=<sp/>expected;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref>*<sp/>ptr_actual<sp/>=<sp/>actual;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>((<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)expected,<sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elements--)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity_8c_1a98411fdeef76d68b5d2d9fe8e61715bb" kindref="member">UnityDoublesWithin</ref>(*ptr_expected<sp/>*<sp/><ref refid="unity__internals_8h_1a22353c6e15ef27e2ba1f7f5cad6717b2" kindref="member">UNITY_DOUBLE_PRECISION</ref>,<sp/>*ptr_expected,<sp/>*ptr_actual))</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>(*ptr_expected,<sp/>*ptr_actual);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" kindref="member">UNITY_ARRAY_TO_ARRAY</ref>)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_expected++;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_actual++;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="unity__internals_8h_1a21f44bea524fd2055973b0e84ed98011" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a21f44bea524fd2055973b0e84ed98011" kindref="member">UnityAssertDoublesWithin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>delta,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>expected,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>actual,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="unity_8c_1a98411fdeef76d68b5d2d9fe8e61715bb" kindref="member">UnityDoublesWithin</ref>(delta,<sp/>expected,<sp/>actual))</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a8432f7429c7fcc0952eeae3658707be9" kindref="member">UNITY_PRINT_EXPECTED_AND_ACTUAL_FLOAT</ref>(expected,<sp/>actual);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903" refid="unity__internals_8h_1ac2f110257d3a7772eaef9d97c0622abe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ac2f110257d3a7772eaef9d97c0622abe" kindref="member">UnityAssertDoubleSpecial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abadfa986ff35c12d7ffd195acba029ca" kindref="member">UNITY_DOUBLE</ref><sp/>actual,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a1b89a0178ea753186faf9f3dc271e2ba" kindref="member">UNITY_FLOAT_TRAIT_T</ref><sp/>style)</highlight></codeline>
<codeline lineno="907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trait_names[]<sp/>=<sp/>{<ref refid="unity_8c_1a4876da1b8ed2466bd85555f662e7697e" kindref="member">UnityStrInf</ref>,<sp/><ref refid="unity_8c_1a61bebbc78e4db9e108a3af7836366d11" kindref="member">UnityStrNegInf</ref>,<sp/><ref refid="unity_8c_1a3b6b03ecb26a781f60329f1e889918d1" kindref="member">UnityStrNaN</ref>,<sp/><ref refid="unity_8c_1a0ba96c1b5c8388a8912e0d30a2d7890b" kindref="member">UnityStrDet</ref>};</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>should_be_trait<sp/>=<sp/>((<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)style<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>is_trait<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>!should_be_trait;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>trait_index<sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)(style<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(style)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9ceb93a4a5ce94726a153ca20877c447" kindref="member">UNITY_FLOAT_IS_INF</ref>:</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a55d10c41853433a52e4bcf114370cc3c" kindref="member">UNITY_FLOAT_IS_NOT_INF</ref>:</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/><ref refid="cJSON_8c_1abad128f70dbd5a06aa93fe79b3acc4df" kindref="member">isinf</ref>(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a4ae18ad2eb5577fbbb61396e7de329cc" kindref="member">UNITY_FLOAT_IS_NEG_INF</ref>:</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a1b9d774ad2582220a5986239a39b0c79" kindref="member">UNITY_FLOAT_IS_NOT_NEG_INF</ref>:</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/><ref refid="cJSON_8c_1abad128f70dbd5a06aa93fe79b3acc4df" kindref="member">isinf</ref>(actual)<sp/>&amp;&amp;<sp/>(actual<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a43b25527bc46de77748a152b4be49057" kindref="member">UNITY_FLOAT_IS_NAN</ref>:</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a6cd53722882f0d01dea4da8d2c148898" kindref="member">UNITY_FLOAT_IS_NOT_NAN</ref>:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/><ref refid="cJSON_8c_1a11b2d271b8abcb53159ffb82dc29547a" kindref="member">isnan</ref>(actual)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a9df079c54906458c9d1d99d2ac26275a" kindref="member">UNITY_FLOAT_IS_DET</ref>:<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>determinate<sp/>number<sp/>is<sp/>non<sp/>infinite<sp/>and<sp/>not<sp/>NaN.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a82d42288d4c610f7e1db67f10c0bb572a87c2784971818301fc117b2ec02e339e" kindref="member">UNITY_FLOAT_IS_NOT_DET</ref>:</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trait<sp/>=<sp/>!<ref refid="cJSON_8c_1abad128f70dbd5a06aa93fe79b3acc4df" kindref="member">isinf</ref>(actual)<sp/>&amp;&amp;<sp/>!<ref refid="cJSON_8c_1a11b2d271b8abcb53159ffb82dc29547a" kindref="member">isnan</ref>(actual);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trait_names[0]<sp/>=<sp/><ref refid="unity_8c_1a36d991a514b3f74e81e9481529079e3b" kindref="member">UnityStrInvalidFloatTrait</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_trait<sp/>!=<sp/>should_be_trait)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!should_be_trait)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT_PRINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1ac3d39bc0740a28949a2ba689588491c2" kindref="member">UnityPrintFloat</ref>(actual);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_be_trait)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a30601346c5bb5f24f4f0e2badb7471b2" kindref="member">UnityStrNot</ref>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(trait_names[trait_index]);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>UNITY_EXCLUDE_DOUBLE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965" refid="unity__internals_8h_1a3d3285ee7b70e57956b95b8e318842eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a3d3285ee7b70e57956b95b8e318842eb" kindref="member">UnityAssertNumbersWithin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref><sp/>delta,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>expected,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>actual,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4" kindref="member">UNITY_DISPLAY_STYLE_T</ref><sp/>style)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((style<sp/>&amp;<sp/><ref refid="unity__internals_8h_1a26974acf13f60993e03bd2fde52e7957" kindref="member">UNITY_DISPLAY_RANGE_INT</ref>)<sp/>==<sp/><ref refid="unity__internals_8h_1a26974acf13f60993e03bd2fde52e7957" kindref="member">UNITY_DISPLAY_RANGE_INT</ref>)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>&gt;<sp/>expected)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)(actual<sp/>-<sp/>expected)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)(expected<sp/>-<sp/>actual)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)actual<sp/>&gt;<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)expected)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)(actual<sp/>-<sp/>expected)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>(<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)((<ref refid="unity__internals_8h_1abb5d2d06855829696244db2ff89290bd" kindref="member">UNITY_UINT</ref>)(expected<sp/>-<sp/>actual)<sp/>&gt;<sp/>delta);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref>)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a984522ea2ae19b44a3b6b01b5db0b7bc" kindref="member">UnityStrDelta</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>((<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)delta,<sp/>style);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(expected,<sp/>style);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(actual,<sp/>style);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004" refid="unity__internals_8h_1ac2901e8d0e2c26074462d616736e808f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ac2901e8d0e2c26074462d616736e808f" kindref="member">UnityAssertEqualString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>i;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>both<sp/>pointers<sp/>not<sp/>null<sp/>compare<sp/>the<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>&amp;&amp;<sp/>actual)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>expected[i]<sp/>||<sp/>actual[i];<sp/>i++)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected[i]<sp/>!=<sp/>actual[i])</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>case<sp/>of<sp/>one<sp/>pointers<sp/>being<sp/>null<sp/>(if<sp/>both<sp/>null,<sp/>test<sp/>should<sp/>pass)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>actual)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref>)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" kindref="member">UnityPrintExpectedAndActualStrings</ref>(expected,<sp/>actual);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043" refid="unity__internals_8h_1acdb5ad99e8015b63ae4f7963cbacef81" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1acdb5ad99e8015b63ae4f7963cbacef81" kindref="member">UnityAssertEqualStringLen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expected,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>actual,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>length,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>i;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>both<sp/>pointers<sp/>not<sp/>null<sp/>compare<sp/>the<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>&amp;&amp;<sp/>actual)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>(i<sp/>&lt;<sp/>length)<sp/>&amp;&amp;<sp/>(expected[i]<sp/>||<sp/>actual[i]);<sp/>i++)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected[i]<sp/>!=<sp/>actual[i])</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>case<sp/>of<sp/>one<sp/>pointers<sp/>being<sp/>null<sp/>(if<sp/>both<sp/>null,<sp/>test<sp/>should<sp/>pass)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>actual)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref>)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aee1c0284290f43293c296a979dc1b901" kindref="member">UnityPrintExpectedAndActualStringsLen</ref>(expected,<sp/>actual,<sp/>length);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083" refid="unity__internals_8h_1a2255be5a89ed1551deedd6732e917915" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a2255be5a89ed1551deedd6732e917915" kindref="member">UnityAssertEqualStringArray</ref>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/>expected,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>actual,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>num_elements,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>expd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>act<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>elements,<sp/>it&apos;s<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)expected<sp/>==<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)actual)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>((<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)expected,<sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>!=<sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" kindref="member">UNITY_ARRAY_TO_ARRAY</ref>)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expd<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act<sp/>=<sp/>actual[j];</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca6e1eb5eefbb4a2bfed70942a3dc274eb" kindref="member">UNITY_ARRAY_TO_ARRAY</ref>)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expd<sp/>=<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*)expected)[j];</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>both<sp/>pointers<sp/>not<sp/>null<sp/>compare<sp/>the<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expd<sp/>&amp;&amp;<sp/>act)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>expd[i]<sp/>||<sp/>act[i];<sp/>i++)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expd[i]<sp/>!=<sp/>act[i])</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>case<sp/>of<sp/>one<sp/>pointers<sp/>being<sp/>null<sp/>(if<sp/>both<sp/>null,<sp/>test<sp/>should<sp/>pass)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expd<sp/>!=<sp/>act)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref>)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(j);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a37ee59a2ee4703563707b044db8739eb" kindref="member">UnityPrintExpectedAndActualStrings</ref>(expd,<sp/>act);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++j<sp/>&lt;<sp/>num_elements);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162" refid="unity__internals_8h_1a4afd608d1d729b4ce666d5c7b4e23552" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a4afd608d1d729b4ce666d5c7b4e23552" kindref="member">UnityAssertEqualMemory</ref>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/>expected,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/>actual,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>length,</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>num_elements,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>lineNumber,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817c" kindref="member">UNITY_FLAGS_T</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr_exp<sp/>=<sp/>(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr_act<sp/>=<sp/>(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)actual;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>elements<sp/>=<sp/>num_elements;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a711b62bcec9cafcd46479a4832adfa55" kindref="member">UNITY_UINT32</ref><sp/>bytes;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((elements<sp/>==<sp/>0)<sp/>||<sp/>(length<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ace6280351b3aa4aa6cfca244ac5193" kindref="member">UnityPrintPointlessAndBail</ref>();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>==<sp/>actual)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Both<sp/>are<sp/>NULL<sp/>or<sp/>same<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aa4561ef9000ea11e866c410fb974192a" kindref="member">UnityIsOneArrayNull</ref>(expected,<sp/>actual,<sp/>lineNumber,<sp/>msg))</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elements--)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bytes--)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr_exp<sp/>!=<sp/>*ptr_act)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a5600fe7afa30db3a4eb95f8917a403a0" kindref="member">UnityTestResultsFailBegin</ref>(lineNumber);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ad8925679ada41bdeeb8f1697010a2f45" kindref="member">UnityStrMemory</ref>);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_elements<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab8983230d73b5d720cb44bf854d3a1dd" kindref="member">UnityStrElement</ref>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(num_elements<sp/>-<sp/>elements<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1abe3ffbbff03bba718fc79bcdc9be918d" kindref="member">UnityStrByte</ref>);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a3ef388786e9a8e769d13af2601b592dc" kindref="member">UnityPrintNumberUnsigned</ref>(length<sp/>-<sp/>bytes<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab50d1dc777d413bfdc738810cee45b7f" kindref="member">UnityStrExpected</ref>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(*ptr_exp,<sp/><ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4af3eb9042cc384cbcba5847d20449c8fa" kindref="member">UNITY_DISPLAY_STYLE_HEX8</ref>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a49e7b7152e94f89de13cbde1fe6a26fc" kindref="member">UnityStrWas</ref>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a83c7c7072b2f0e3cce93e56960da46e7" kindref="member">UnityPrintNumberByStyle</ref>(*ptr_act,<sp/><ref refid="unity__internals_8h_1a828517387e75bc0b3ee6a99d2e0722a4af3eb9042cc384cbcba5847d20449c8fa" kindref="member">UNITY_DISPLAY_STYLE_HEX8</ref>);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1af0db89aa4947c98a55a44bae2a7035d7" kindref="member">UnityAddMsgIfSpecified</ref>(msg);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_exp++;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_act++;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/><ref refid="unity__internals_8h_1a229eb7ffd452e7c158f1fe19005a817ca577dd656fdb92684b33920d5986d6f12" kindref="member">UNITY_ARRAY_TO_VAL</ref>)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_exp<sp/>=<sp/>(<ref refid="unity__internals_8h_1a825b752e1c62ede9bee4bf22fb258a7d" kindref="member">UNITY_PTR_ATTRIBUTE</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)expected;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1ad0279e5d512a86af7ff1cfda67b9f64e" kindref="member">UNITY_INT8</ref><sp/>i8;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1af18ca161e8d679a2d3b75928112c1707" kindref="member">UNITY_INT16</ref><sp/>i16;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" kindref="member">UNITY_INT32</ref><sp/>i32;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_INT64<sp/>i64;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" refkind="member"><highlight class="normal">}<sp/><ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237" refid="unity__internals_8h_1ad433d8b5fe8da56334e6103487aad8fc" refkind="member"><highlight class="normal"><ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/><ref refid="unity_8c_1ad433d8b5fe8da56334e6103487aad8fc" kindref="member">UnityNumToPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref><sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1ae9c38948acf740d92635783d49f7437c" kindref="member">UNITY_UINT8</ref><sp/><ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="unity__output__Spy_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i8<sp/>=<sp/>(<ref refid="unity__internals_8h_1ad0279e5d512a86af7ff1cfda67b9f64e" kindref="member">UNITY_INT8</ref>)num;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(&amp;<ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i8);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i16<sp/>=<sp/>(<ref refid="unity__internals_8h_1af18ca161e8d679a2d3b75928112c1707" kindref="member">UNITY_INT16</ref>)num;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(&amp;<ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i16);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_SUPPORT_64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i64<sp/>=<sp/>(UNITY_INT64)num;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(&amp;<ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i64);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>4<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i32<sp/>=<sp/>(<ref refid="unity__internals_8h_1a05b69a453107cea541ee62916ff349f9" kindref="member">UNITY_INT32</ref>)num;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(&amp;<ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.i32);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261" refid="unity__internals_8h_1a15fd597bf819640790743db56424089b" refkind="member"><highlight class="normal"><ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/><ref refid="unity_8c_1a15fd597bf819640790743db56424089b" kindref="member">UnityFloatToPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.f<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(&amp;<ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.f);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269" refid="unity__internals_8h_1afbf0f0258f53d9e340b36f9979509de0" refkind="member"><highlight class="normal"><ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref><sp/><ref refid="unity_8c_1afbf0f0258f53d9e340b36f9979509de0" kindref="member">UnityDoubleToPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.d<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a5db8f91b73d20fd7b6f1d9bfd28a2dc0" kindref="member">UNITY_INTERNAL_PTR</ref>)(&amp;<ref refid="unity_8c_1a9419c1d39cfb67cc6a260181e28bdb4f" kindref="member">UnityQuickCompare</ref>.d);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/>*<sp/>Control<sp/>Functions</highlight></codeline>
<codeline lineno="1278"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280" refid="unity__internals_8h_1a37e729cc670c13ddc148d0bbf4255d7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a50275e939943157e22d5847646191696" kindref="member">UnityFail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>line)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" kindref="member">TestFile</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNITY_EXCLUDE_DETAILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a21674715adf3d4d1ac7f0c459887cf9d" kindref="member">CurrentDetail1</ref>)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a8fa3a2b3c822d32899dacf0fe5d30cfa" kindref="member">UnityStrDetail1Name</ref>);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a21674715adf3d4d1ac7f0c459887cf9d" kindref="member">CurrentDetail1</ref>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a9d821447e216e215911e8726aa986eec" kindref="member">CurrentDetail2</ref>)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ac80e99105655e5a0acd03ebd897eb15c" kindref="member">UnityStrDetail2Name</ref>);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a9d821447e216e215911e8726aa986eec" kindref="member">CurrentDetail2</ref>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ae6120cfc8a2a44950a6e23ca2503e978" kindref="member">UnityStrSpacer</ref>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(msg);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed0078c0e6e904f5d0071cacef3d519d" kindref="member">UNITY_FAIL_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314" refid="unity__internals_8h_1a65cb63407f65e4f71f29ab4907f78734" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a337924d7f537d54aa719e439d339b1fd" kindref="member">UnityIgnore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref><sp/>line)</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1abf9f99b384602e58874744dda3492aaa" kindref="member">RETURN_IF_FAIL_OR_IGNORE</ref>;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aed932d2a71bfd9bb481def3bb03233f9" kindref="member">UnityTestResultsBegin</ref>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" kindref="member">TestFile</ref>,<sp/>line);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1afee1e18090d3dba33ca2573759911a03" kindref="member">UnityStrIgnore</ref>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(msg);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a8e7615065c9272a62eede0f1e725a774" kindref="member">UNITY_IGNORE_AND_BAIL</ref>;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330" refid="unity__internals_8h_1ae3c8272eef0f0b6228ca47b9dd1aa2af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1ae3c8272eef0f0b6228ca47b9dd1aa2af" kindref="member">UnityDefaultTestRun</ref>(<ref refid="unity__internals_8h_1a750c0436a18789b916e55d70aae12985" kindref="member">UnityTestFunction</ref><sp/>Func,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>FuncName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FuncLineNum)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" kindref="member">CurrentTestName</ref><sp/>=<sp/>FuncName;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" kindref="member">CurrentTestLineNumber</ref><sp/>=<sp/>(<ref refid="unity__internals_8h_1a5c76dbcaafb6db2a52336cf5d4835290" kindref="member">UNITY_LINE_TYPE</ref>)FuncLineNum;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" kindref="member">NumberOfTests</ref>++;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a211afe418b1b4a2590a877ae83f7c48a" kindref="member">UNITY_CLR_DETAILS</ref>();</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a61d21043921ebc1c2ee49543fc100f9a" kindref="member">TEST_PROTECT</ref>())</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8h_1a95c834d6178047ce9e1bce7cbfea2836" kindref="member">setUp</ref>();</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Func();</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity__internals_8h_1a61d21043921ebc1c2ee49543fc100f9a" kindref="member">TEST_PROTECT</ref>())</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8h_1a9909011e5fea0c018842eec4d93d0662" kindref="member">tearDown</ref>();</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a44f03f0124e59f6996da61946cc2a58e" kindref="member">UnityConcludeTest</ref>();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349" refid="unity__internals_8h_1aed50601fbdaea8fc0fef0c61cf877809" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1aed50601fbdaea8fc0fef0c61cf877809" kindref="member">UnityBegin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" kindref="member">TestFile</ref><sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" kindref="member">CurrentTestName</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1aeb87d29c27b7befe4a1dc98e4c0df985" kindref="member">CurrentTestLineNumber</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" kindref="member">NumberOfTests</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" kindref="member">TestFailures</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" kindref="member">TestIgnores</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a4eeda402afb14c612b7ea86f35697c12" kindref="member">CurrentTestFailed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1afdcdd2259f9ae537c0a89c44a227a793" kindref="member">CurrentTestIgnored</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a211afe418b1b4a2590a877ae83f7c48a" kindref="member">UNITY_CLR_DETAILS</ref>();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a96e6c4faeb1b01d3f3dc00aabe4eccc2" kindref="member">UNITY_OUTPUT_START</ref>();</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365" refid="unity__internals_8h_1a4820ba04ff5e9a474fe38ab6633d30a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="unity_8c_1a4820ba04ff5e9a474fe38ab6633d30a0" kindref="member">UnityEnd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a44f23e51b5eaee8327f6ea0e9dd8935b" kindref="member">UnityStrBreaker</ref>);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1ae4df45c5af47cc35eb0aedc57816d2ef" kindref="member">NumberOfTests</ref>));</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a5c25be31c48ff281ee738b38fb5fab02" kindref="member">UnityStrResultsTests</ref>);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" kindref="member">TestFailures</ref>));</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1a0de0bb775fd9e2f5664463780634a2dd" kindref="member">UnityStrResultsFailures</ref>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1a644211a214ab000dcabd5582c52e0313" kindref="member">UnityPrintNumber</ref>((<ref refid="unity__internals_8h_1ab304e341ff16e7076e9d06cc9c64c2a7" kindref="member">UNITY_INT</ref>)(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a75c4a690faa55da67e6c2079ad74cd6e" kindref="member">TestIgnores</ref>));</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ab866d9dfd564414877c69e753e7e382e" kindref="member">UnityStrResultsIgnored</ref>);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" kindref="member">TestFailures</ref><sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1aa0d91c84fde1e6562ec77dd393b5c07c" kindref="member">UnityStrOk</ref>);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(<ref refid="unity_8c_1ad8448fdd418724662e7d4ccf03d96b08" kindref="member">UnityStrFail</ref>);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_DIFFERENTIATE_FINAL_FAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">);<sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a797ba83286171b672f39e93f97bce814" kindref="member">UNITY_FLUSH_CALL</ref>();</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a05bb0df6aae73691385d7aca5b50aa93" kindref="member">UNITY_OUTPUT_COMPLETE</ref>();</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a2b309a6c4639312ba6f3b030cfd55ce4" kindref="member">TestFailures</ref>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>*<sp/>Command<sp/>Line<sp/>Argument<sp/>Support</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/>*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITY_USE_COMMAND_LINE_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>UnityOptionIncludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>UnityOptionExcludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityVerbosity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityParseOptions(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>UnityOptionIncludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>UnityOptionExcludeNamed<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(argv[i][1])</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>list<sp/>tests<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>include<sp/>tests<sp/>with<sp/>name<sp/>including<sp/>this<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>an<sp/>alias<sp/>for<sp/>-n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionIncludeNamed<sp/>=<sp/>&amp;argv[i][3];</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i<sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionIncludeNamed<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>No<sp/>Test<sp/>String<sp/>to<sp/>Include<sp/>Matches<sp/>For&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;q&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>quiet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityVerbosity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>verbose<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityVerbosity<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>exclude<sp/>tests<sp/>with<sp/>name<sp/>including<sp/>this<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionExcludeNamed<sp/>=<sp/>&amp;argv[i][3];</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i<sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnityOptionExcludeNamed<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>No<sp/>Test<sp/>String<sp/>to<sp/>Exclude<sp/>Matches<sp/>For&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8c_1accff2eb4cfd0273e8ad62c37639d3e3c" kindref="member">UnityPrint</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Unknown<sp/>Option<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a7f32cab7edafc4634a8faa14b3e0042c" kindref="member">UNITY_OUTPUT_CHAR</ref>(argv[i][1]);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1a9e38369f7998441218877815228db8e3" kindref="member">UNITY_PRINT_EOL</ref>();</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IsStringInBiggerString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>longstring,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shortstring)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lptr<sp/>=<sp/>longstring;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sptr<sp/>=<sp/>shortstring;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lnext<sp/>=<sp/>lptr;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*lptr)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lnext<sp/>=<sp/>lptr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>they<sp/>current<sp/>bytes<sp/>match,<sp/>go<sp/>on<sp/>to<sp/>the<sp/>next<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*lptr<sp/>&amp;&amp;<sp/>*sptr<sp/>&amp;&amp;<sp/>(*lptr<sp/>==<sp/>*sptr))</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lptr++;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sptr++;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>done<sp/>if<sp/>we<sp/>match<sp/>the<sp/>entire<sp/>string<sp/>or<sp/>up<sp/>to<sp/>a<sp/>wildcard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sptr<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>we<sp/>start<sp/>in<sp/>the<sp/>long<sp/>pointer<sp/>1<sp/>character<sp/>further<sp/>and<sp/>try<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lptr<sp/>=<sp/>lnext;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sptr<sp/>=<sp/>shortstring;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityStringArgumentMatches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr1;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr2;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptrf;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>through<sp/>the<sp/>options<sp/>and<sp/>get<sp/>the<sp/>substrings<sp/>for<sp/>matching<sp/>one<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr1[0]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr1[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr1[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1++;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>look<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>next<sp/>partial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2<sp/>=<sp/>ptr1;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2++;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[1]<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrf<sp/>=<sp/>&amp;ptr2[1];</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr2[0]<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(ptr2[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr2[0]<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>((ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(ptr2[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2++;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>if<sp/>complete<sp/>filename<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>IsStringInBiggerString(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a69613e2d9945fc1ce5a4848613828a1f" kindref="member">TestFile</ref>,<sp/>ptr1);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>if<sp/>testname<sp/>match<sp/>after<sp/>filename<sp/>partial<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/>(ptrf<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsStringInBiggerString(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" kindref="member">CurrentTestName</ref>,<sp/>ptrf))</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>if<sp/>complete<sp/>testname<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsStringInBiggerString(<ref refid="unity_8c_1aad738f665f16eb2336b8bc33f432d0da" kindref="member">Unity</ref>.<ref refid="structUNITY__STORAGE__T_1a0d7f8bf6c8a95ebe237d411f1fc7e345" kindref="member">CurrentTestName</ref>,<sp/>ptr1)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>ptr2;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>couldn&apos;t<sp/>find<sp/>a<sp/>match<sp/>for<sp/>any<sp/>substrings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UnityTestMatches(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>this<sp/>test<sp/>name<sp/>matches<sp/>the<sp/>included<sp/>test<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UnityOptionIncludeNamed)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>UnityStringArgumentMatches(UnityOptionIncludeNamed);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>this<sp/>test<sp/>name<sp/>matches<sp/>the<sp/>excluded<sp/>test<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UnityOptionExcludeNamed)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UnityStringArgumentMatches(UnityOptionExcludeNamed))</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UNITY_USE_COMMAND_LINE_ARGS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tests/unity/src/unity.c"/>
  </compounddef>
</doxygen>
