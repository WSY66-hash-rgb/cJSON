<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="print__object_8c" kind="file" language="C++">
    <compoundname>print_object.c</compoundname>
    <includes refid="unity__config_8h" local="yes">unity/examples/unity_config.h</includes>
    <includes refid="unity_8h" local="yes">unity/src/unity.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <incdepgraph>
      <node id="15">
        <label>float.h</label>
      </node>
      <node id="11">
        <label>../cJSON.c</label>
        <link refid="cJSON_8c"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cJSON.h</label>
        <link refid="cJSON_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>setjmp.h</label>
      </node>
      <node id="10">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>limits.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="2">
        <label>unity/examples/unity_config.h</label>
        <link refid="unity__config_8h"/>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>unity_internals.h</label>
        <link refid="unity__internals_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>unity/src/unity.h</label>
        <link refid="unity_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ctype.h</label>
      </node>
      <node id="1">
        <label>tests/print_object.c</label>
        <link refid="print__object_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void assert_print_object</definition>
        <argsstring>(const char *const expected, const char *const input)</argsstring>
        <name>assert_print_object</name>
        <param>
          <type>const char *const</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/print_object.c" line="27" column="13" bodyfile="tests/print_object.c" bodystart="27" bodyend="69"/>
        <references refid="structprintbuffer_1a754f63618e91db99f7ab6cfc4e629013" compoundref="cJSON_8c" startline="429">printbuffer::buffer</references>
        <references refid="structparse__buffer_1a52ee1184576baa3d5171059ab0e942de" compoundref="cJSON_8c" startline="289">parse_buffer::content</references>
        <references refid="structprintbuffer_1a75d3f480f5308e7f4afecf30e11277ef" compoundref="cJSON_8c" startline="434">printbuffer::format</references>
        <references refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" compoundref="cJSON_8c" startline="186">global_hooks</references>
        <references refid="structparse__buffer_1a2c3e99b15da2935fc5d58124ffb4a894" compoundref="cJSON_8c" startline="293">parse_buffer::hooks</references>
        <references refid="structprintbuffer_1a43a8b3bcc644432f12f5aed5159d2520" compoundref="cJSON_8c" startline="435">printbuffer::hooks</references>
        <references refid="structparse__buffer_1a036970e9335896d3cee8459eda9e2eb9" compoundref="cJSON_8c" startline="290">parse_buffer::length</references>
        <references refid="structprintbuffer_1a1a679f8b6fe9b413fb3a87203b0f5bc8" compoundref="cJSON_8c" startline="430">printbuffer::length</references>
        <references refid="structprintbuffer_1aa2a7966b71dc3535e4e3789c33ec5368" compoundref="cJSON_8c" startline="433">printbuffer::noalloc</references>
        <references refid="structprintbuffer_1a3ed6f9d24d6591047680492a962dc7c9" compoundref="cJSON_8c" startline="431">printbuffer::offset</references>
        <references refid="cJSON_8c_1a1472ac5d1becd7d9a5e558b4c053b06a" compoundref="cJSON_8c" startline="1597" endline="1707">parse_object</references>
        <references refid="cJSON_8c_1a3d742f5c68799bca291432a9cd72f8dd" compoundref="cJSON_8c" startline="1710" endline="1821">print_object</references>
        <references refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" compoundref="common_8h" startline="29" endline="44">reset</references>
        <referencedby refid="print__object_8c_1a0dbeb73bce7e877f23309f4dc9eb2351" compoundref="print__object_8c" startline="71" endline="74">print_object_should_print_empty_objects</referencedby>
        <referencedby refid="print__object_8c_1acb855ee06acce703c482aa460071cd30" compoundref="print__object_8c" startline="85" endline="89">print_object_should_print_objects_with_multiple_elements</referencedby>
        <referencedby refid="print__object_8c_1aba8127498a6bd0748bb33540c2e43a82" compoundref="print__object_8c" startline="76" endline="83">print_object_should_print_objects_with_one_element</referencedby>
      </memberdef>
      <memberdef kind="function" id="print__object_8c_1a0dbeb73bce7e877f23309f4dc9eb2351" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_object_should_print_empty_objects</definition>
        <argsstring>(void)</argsstring>
        <name>print_object_should_print_empty_objects</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/print_object.c" line="71" column="13" bodyfile="tests/print_object.c" bodystart="71" bodyend="74"/>
        <references refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" compoundref="print__object_8c" startline="27" endline="69">assert_print_object</references>
        <referencedby refid="print__object_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="print__object_8c" startline="91" endline="101">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="print__object_8c_1aba8127498a6bd0748bb33540c2e43a82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_object_should_print_objects_with_one_element</definition>
        <argsstring>(void)</argsstring>
        <name>print_object_should_print_objects_with_one_element</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/print_object.c" line="76" column="13" bodyfile="tests/print_object.c" bodystart="76" bodyend="83"/>
        <references refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" compoundref="print__object_8c" startline="27" endline="69">assert_print_object</references>
        <referencedby refid="print__object_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="print__object_8c" startline="91" endline="101">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="print__object_8c_1acb855ee06acce703c482aa460071cd30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_object_should_print_objects_with_multiple_elements</definition>
        <argsstring>(void)</argsstring>
        <name>print_object_should_print_objects_with_multiple_elements</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/print_object.c" line="85" column="13" bodyfile="tests/print_object.c" bodystart="85" bodyend="89"/>
        <references refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" compoundref="print__object_8c" startline="27" endline="69">assert_print_object</references>
        <referencedby refid="print__object_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="print__object_8c" startline="91" endline="101">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="print__object_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/print_object.c" line="91" column="8" bodyfile="tests/print_object.c" bodystart="91" bodyend="101"/>
        <references refid="print__object_8c_1a0dbeb73bce7e877f23309f4dc9eb2351" compoundref="print__object_8c" startline="71" endline="74">print_object_should_print_empty_objects</references>
        <references refid="print__object_8c_1acb855ee06acce703c482aa460071cd30" compoundref="print__object_8c" startline="85" endline="89">print_object_should_print_objects_with_multiple_elements</references>
        <references refid="print__object_8c_1aba8127498a6bd0748bb33540c2e43a82" compoundref="print__object_8c" startline="76" endline="83">print_object_should_print_objects_with_one_element</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2009-2017<sp/>Dave<sp/>Gamble<sp/>and<sp/>cJSON<sp/>contributors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity__config_8h" kindref="compound">unity/examples/unity_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity_8h" kindref="compound">unity/src/unity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>expected,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>input)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>printed_unformatted[1024];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>printed_formatted[1024];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/><ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>[1];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>formatted_buffer<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>unformatted_buffer<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparse__buffer" kindref="compound">parse_buffer</ref><sp/>parsebuffer<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffer<sp/>for<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>parsebuffer.<ref refid="structparse__buffer_1a52ee1184576baa3d5171059ab0e942de" kindref="member">content</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)input;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>parsebuffer.<ref refid="structparse__buffer_1a036970e9335896d3cee8459eda9e2eb9" kindref="member">length</ref><sp/>=<sp/>strlen(input)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>parsebuffer.<ref refid="structparse__buffer_1a2c3e99b15da2935fc5d58124ffb4a894" kindref="member">hooks</ref><sp/>=<sp/><ref refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" kindref="member">global_hooks</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffer<sp/>for<sp/>formatted<sp/>printing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>formatted_buffer.<ref refid="structprintbuffer_1a754f63618e91db99f7ab6cfc4e629013" kindref="member">buffer</ref><sp/>=<sp/>printed_formatted;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>formatted_buffer.<ref refid="structprintbuffer_1a1a679f8b6fe9b413fb3a87203b0f5bc8" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(printed_formatted);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>formatted_buffer.<ref refid="structprintbuffer_1a3ed6f9d24d6591047680492a962dc7c9" kindref="member">offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>formatted_buffer.<ref refid="structprintbuffer_1aa2a7966b71dc3535e4e3789c33ec5368" kindref="member">noalloc</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>formatted_buffer.<ref refid="structprintbuffer_1a43a8b3bcc644432f12f5aed5159d2520" kindref="member">hooks</ref><sp/>=<sp/><ref refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" kindref="member">global_hooks</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>buffer<sp/>for<sp/>unformatted<sp/>printing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>unformatted_buffer.<ref refid="structprintbuffer_1a754f63618e91db99f7ab6cfc4e629013" kindref="member">buffer</ref><sp/>=<sp/>printed_unformatted;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>unformatted_buffer.<ref refid="structprintbuffer_1a1a679f8b6fe9b413fb3a87203b0f5bc8" kindref="member">length</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(printed_unformatted);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>unformatted_buffer.<ref refid="structprintbuffer_1a3ed6f9d24d6591047680492a962dc7c9" kindref="member">offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>unformatted_buffer.<ref refid="structprintbuffer_1aa2a7966b71dc3535e4e3789c33ec5368" kindref="member">noalloc</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>unformatted_buffer.<ref refid="structprintbuffer_1a43a8b3bcc644432f12f5aed5159d2520" kindref="member">hooks</ref><sp/>=<sp/><ref refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" kindref="member">global_hooks</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1ae92bec0a6b42edae91cce2726e34145c" kindref="member">TEST_ASSERT_TRUE_MESSAGE</ref>(<ref refid="cJSON_8c_1a1472ac5d1becd7d9a5e558b4c053b06a" kindref="member">parse_object</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>&amp;parsebuffer),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>object.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>unformatted_buffer.<ref refid="structprintbuffer_1a75d3f480f5308e7f4afecf30e11277ef" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1ae92bec0a6b42edae91cce2726e34145c" kindref="member">TEST_ASSERT_TRUE_MESSAGE</ref>(<ref refid="cJSON_8c_1a3d742f5c68799bca291432a9cd72f8dd" kindref="member">print_object</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>&amp;unformatted_buffer),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>print<sp/>unformatted<sp/>string.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1abca87135f5bc5737e7e46ab02cddf39e" kindref="member">TEST_ASSERT_EQUAL_STRING_MESSAGE</ref>(input,<sp/>printed_unformatted,<sp/></highlight><highlight class="stringliteral">&quot;Unformatted<sp/>object<sp/>is<sp/>not<sp/>correct.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>formatted_buffer.<ref refid="structprintbuffer_1a75d3f480f5308e7f4afecf30e11277ef" kindref="member">format</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1ae92bec0a6b42edae91cce2726e34145c" kindref="member">TEST_ASSERT_TRUE_MESSAGE</ref>(<ref refid="cJSON_8c_1a3d742f5c68799bca291432a9cd72f8dd" kindref="member">print_object</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>&amp;formatted_buffer),<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>print<sp/>formatted<sp/>string.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1abca87135f5bc5737e7e46ab02cddf39e" kindref="member">TEST_ASSERT_EQUAL_STRING_MESSAGE</ref>(expected,<sp/>printed_formatted,<sp/></highlight><highlight class="stringliteral">&quot;Formatted<sp/>ojbect<sp/>is<sp/>not<sp/>correct.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" kindref="member">reset</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="print__object_8c_1a0dbeb73bce7e877f23309f4dc9eb2351" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="print__object_8c_1a0dbeb73bce7e877f23309f4dc9eb2351" kindref="member">print_object_should_print_empty_objects</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="stringliteral">&quot;{\n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="print__object_8c_1aba8127498a6bd0748bb33540c2e43a82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="print__object_8c_1aba8127498a6bd0748bb33540c2e43a82" kindref="member">print_object_should_print_objects_with_one_element</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="stringliteral">&quot;{\n\t\&quot;one\&quot;:\t1\n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;one\&quot;:1}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="stringliteral">&quot;{\n\t\&quot;hello\&quot;:\t\&quot;world!\&quot;\n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;hello\&quot;:\&quot;world!\&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="stringliteral">&quot;{\n\t\&quot;array\&quot;:\t[]\n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;array\&quot;:[]}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="stringliteral">&quot;{\n\t\&quot;null\&quot;:\tnull\n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;null\&quot;:null}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="print__object_8c_1acb855ee06acce703c482aa460071cd30" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="print__object_8c_1acb855ee06acce703c482aa460071cd30" kindref="member">print_object_should_print_objects_with_multiple_elements</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="stringliteral">&quot;{\n\t\&quot;one\&quot;:\t1,\n\t\&quot;two\&quot;:\t2,\n\t\&quot;three\&quot;:\t3\n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;one\&quot;:1,\&quot;two\&quot;:2,\&quot;three\&quot;:3}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print__object_8c_1a91697b5911579b3ff34114ad9b914f4b" kindref="member">assert_print_object</ref>(</highlight><highlight class="stringliteral">&quot;{\n\t\&quot;one\&quot;:\t1,\n\t\&quot;NULL\&quot;:\tnull,\n\t\&quot;TRUE\&quot;:\ttrue,\n\t\&quot;FALSE\&quot;:\tfalse,\n\t\&quot;array\&quot;:\t[],\n\t\&quot;world\&quot;:\t\&quot;hello\&quot;,\n\t\&quot;object\&quot;:\t{\n\t}\n}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;one\&quot;:1,\&quot;NULL\&quot;:null,\&quot;TRUE\&quot;:true,\&quot;FALSE\&quot;:false,\&quot;array\&quot;:[],\&quot;world\&quot;:\&quot;hello\&quot;,\&quot;object\&quot;:{}}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="print__object_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a79203c3ba406ffd5736627cc1e082e38" kindref="member">CJSON_CDECL</ref><sp/><ref refid="print__object_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>cJSON<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aaad15a5d10e50a412d0a6851d0e5091a" kindref="member">UNITY_BEGIN</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="print__object_8c_1a0dbeb73bce7e877f23309f4dc9eb2351" kindref="member">print_object_should_print_empty_objects</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="print__object_8c_1aba8127498a6bd0748bb33540c2e43a82" kindref="member">print_object_should_print_objects_with_one_element</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="print__object_8c_1acb855ee06acce703c482aa460071cd30" kindref="member">print_object_should_print_objects_with_multiple_elements</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1aa519129d3af737eb796fc91720fae26a" kindref="member">UNITY_END</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/print_object.c"/>
  </compounddef>
</doxygen>
