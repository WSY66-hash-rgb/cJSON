<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="parse__array_8c" kind="file" language="C++">
    <compoundname>parse_array.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="unity__config_8h" local="yes">unity/examples/unity_config.h</includes>
    <includes refid="unity_8h" local="yes">unity/src/unity.h</includes>
    <includes refid="common_8h" local="yes">common.h</includes>
    <incdepgraph>
      <node id="15">
        <label>float.h</label>
      </node>
      <node id="13">
        <label>../cJSON.c</label>
        <link refid="cJSON_8c"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cJSON.h</label>
        <link refid="cJSON_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>setjmp.h</label>
      </node>
      <node id="12">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>tests/parse_array.c</label>
        <link refid="parse__array_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>unity/examples/unity_config.h</label>
        <link refid="unity__config_8h"/>
      </node>
      <node id="9">
        <label>math.h</label>
      </node>
      <node id="7">
        <label>unity_internals.h</label>
        <link refid="unity__internals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>unity/src/unity.h</label>
        <link refid="unity_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ctype.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" prot="public" static="yes" mutable="no">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref></type>
        <definition>cJSON item[1]</definition>
        <argsstring>[1]</argsstring>
        <name>item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="31" column="14" bodyfile="tests/parse_array.c" bodystart="31" bodyend="-1"/>
        <referencedby refid="cJSON_8c_1a816d10c908af6be844a1f8277363e2f1" compoundref="cJSON_8c" startline="1952" endline="1983">add_item_to_array</referencedby>
        <referencedby refid="cJSON_8c_1acc48bef0e1b495898d9489e577b91d5c" compoundref="cJSON_8c" startline="2007" endline="2042">add_item_to_object</referencedby>
        <referencedby refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" compoundref="parse__array_8c" startline="45" endline="54">assert_not_array</referencedby>
        <referencedby refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" compoundref="parse__array_8c" startline="56" endline="65">assert_parse_array</referencedby>
        <referencedby refid="cJSON_8c_1af6760a489221979675cf09a929ab8371" compoundref="cJSON_8c" startline="2055" endline="2063">cJSON_AddItemReferenceToArray</referencedby>
        <referencedby refid="cJSON_8c_1ac58d6e55575270866aa3f6b385711635" compoundref="cJSON_8c" startline="2065" endline="2073">cJSON_AddItemReferenceToObject</referencedby>
        <referencedby refid="cJSON_8c_1afdbbb05c681bab6cf6bd7fc856ed0f31" compoundref="cJSON_8c" startline="1986" endline="1989">cJSON_AddItemToArray</referencedby>
        <referencedby refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" compoundref="cJSON_8c" startline="2044" endline="2047">cJSON_AddItemToObject</referencedby>
        <referencedby refid="cJSON_8c_1a1a8343a44a67e9e12dcdd4ab5ec0eeab" compoundref="cJSON_8c" startline="2050" endline="2053">cJSON_AddItemToObjectCS</referencedby>
        <referencedby refid="cJSON_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="cJSON_8c" startline="2513" endline="2522">cJSON_CreateArray</referencedby>
        <referencedby refid="cJSON_8c_1a1f44bc9691c8766252b5bddaae04ffc2" compoundref="cJSON_8c" startline="2486" endline="2494">cJSON_CreateArrayReference</referencedby>
        <referencedby refid="cJSON_8c_1a859fe1cf8203f2d0131d388f7b1178f1" compoundref="cJSON_8c" startline="2409" endline="2418">cJSON_CreateBool</referencedby>
        <referencedby refid="cJSON_8c_1a33dcdd4d4f5da12bc91372376908c42b" compoundref="cJSON_8c" startline="2398" endline="2407">cJSON_CreateFalse</referencedby>
        <referencedby refid="cJSON_8c_1a83ea2a0b33071a1120b9052170a2bc13" compoundref="cJSON_8c" startline="2376" endline="2385">cJSON_CreateNull</referencedby>
        <referencedby refid="cJSON_8c_1a220d076d7d3a309049d6889be6d4904a" compoundref="cJSON_8c" startline="2420" endline="2444">cJSON_CreateNumber</referencedby>
        <referencedby refid="cJSON_8c_1a9c5f44afdd781b16dead90042fe74085" compoundref="cJSON_8c" startline="2524" endline="2533">cJSON_CreateObject</referencedby>
        <referencedby refid="cJSON_8c_1a3c3b40420dd74cc7fbbc355628239aa1" compoundref="cJSON_8c" startline="2475" endline="2484">cJSON_CreateObjectReference</referencedby>
        <referencedby refid="cJSON_8c_1a57b09346ba8bf22a1ef6198258f12e20" compoundref="cJSON_8c" startline="2496" endline="2511">cJSON_CreateRaw</referencedby>
        <referencedby refid="cJSON_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" compoundref="cJSON_8c" startline="2446" endline="2461">cJSON_CreateString</referencedby>
        <referencedby refid="cJSON_8c_1a9cb226121d5eb9ba4aa84b1c19cbc25b" compoundref="cJSON_8c" startline="2463" endline="2473">cJSON_CreateStringReference</referencedby>
        <referencedby refid="cJSON_8c_1a07b3d4616c5a682aa558180713ce858a" compoundref="cJSON_8c" startline="2387" endline="2396">cJSON_CreateTrue</referencedby>
        <referencedby refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" compoundref="cJSON_8c" startline="253" endline="274">cJSON_Delete</referencedby>
        <referencedby refid="cJSON_8c_1ae9c7ddde95571ef5027da5007281a4b4" compoundref="cJSON_8c" startline="2183" endline="2217">cJSON_DetachItemViaPointer</referencedby>
        <referencedby refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" compoundref="cJSON_8c" startline="2697" endline="2778">cJSON_Duplicate</referencedby>
        <referencedby refid="misc__tests_8c_1a8db8916ca66092c6f9924456953fbf8f" compoundref="misc__tests_8c" startline="352" endline="436">cjson_functions_should_not_crash_with_null_pointers</referencedby>
        <referencedby refid="misc__tests_8c_1abe19814f80199e414e440866b87c9402" compoundref="misc__tests_8c" startline="99" endline="128">cjson_get_object_item_case_sensitive_should_get_object_items</referencedby>
        <referencedby refid="misc__tests_8c_1a7747c301507939a00a1f4ba0d9cd2a39" compoundref="misc__tests_8c" startline="67" endline="97">cjson_get_object_item_should_get_object_items</referencedby>
        <referencedby refid="cJSON_8c_1a894042068cc1b20996bc7800700a9df0" compoundref="cJSON_8c" startline="109" endline="117">cJSON_GetNumberValue</referencedby>
        <referencedby refid="cJSON_8c_1a8f13476fa43d33e3e6439b564af5c5e0" compoundref="cJSON_8c" startline="99" endline="107">cJSON_GetStringValue</referencedby>
        <referencedby refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" compoundref="cJSON_8c" startline="2947" endline="2955">cJSON_IsArray</referencedby>
        <referencedby refid="cJSON_8c_1a16bbe75ed6f97d121c141e4fec38d497" compoundref="cJSON_8c" startline="2908" endline="2916">cJSON_IsBool</referencedby>
        <referencedby refid="cJSON_8c_1a160f9c97b2e63c46dcdc192e3de9274d" compoundref="cJSON_8c" startline="2887" endline="2895">cJSON_IsFalse</referencedby>
        <referencedby refid="cJSON_8c_1a49373f6a455b8b99443b9c170b787e86" compoundref="cJSON_8c" startline="2877" endline="2885">cJSON_IsInvalid</referencedby>
        <referencedby refid="cJSON_8c_1a7e941f0d623c8476b6a10e9b05464f4f" compoundref="cJSON_8c" startline="2917" endline="2925">cJSON_IsNull</referencedby>
        <referencedby refid="cJSON_8c_1a04148f2da6d47885c7498cfbf521a74d" compoundref="cJSON_8c" startline="2927" endline="2935">cJSON_IsNumber</referencedby>
        <referencedby refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" compoundref="cJSON_8c" startline="2957" endline="2965">cJSON_IsObject</referencedby>
        <referencedby refid="cJSON_8c_1a9fc519447ecd559e84bdd3b634162ba8" compoundref="cJSON_8c" startline="2967" endline="2975">cJSON_IsRaw</referencedby>
        <referencedby refid="cJSON_8c_1a87b7cb8032c9a552995e006f65f49cb5" compoundref="cJSON_8c" startline="2937" endline="2945">cJSON_IsString</referencedby>
        <referencedby refid="cJSON_8c_1a4ad6de706aeece32cdb6348ba3e390f7" compoundref="cJSON_8c" startline="2897" endline="2905">cJSON_IsTrue</referencedby>
        <referencedby refid="cJSON_8c_1af72a0b4e3c59e7053859c0c0fe4fcda3" compoundref="cJSON_8c" startline="1091" endline="1168">cJSON_ParseWithLengthOpts</referencedby>
        <referencedby refid="cJSON_8c_1ae2177acac9871b89531e722b49f14925" compoundref="cJSON_8c" startline="1248" endline="1251">cJSON_Print</referencedby>
        <referencedby refid="cJSON_8c_1a318ef2c8804675893ed66dd28149cb12" compoundref="cJSON_8c" startline="1258" endline="1286">cJSON_PrintBuffered</referencedby>
        <referencedby refid="cJSON_8c_1afc7c06663cbfb2acf82d6db5f1436fbd" compoundref="cJSON_8c" startline="1288" endline="1305">cJSON_PrintPreallocated</referencedby>
        <referencedby refid="cJSON_8c_1a0fa352e498073ced1c7fb9b84b5f684c" compoundref="cJSON_8c" startline="1253" endline="1256">cJSON_PrintUnformatted</referencedby>
        <referencedby refid="cJSON_8c_1a47bb96e61883eafa3f5d359ce5dd6509" compoundref="cJSON_8c" startline="2288" endline="2335">cJSON_ReplaceItemViaPointer</referencedby>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
        <referencedby refid="cJSON_8c_1ac06bbc307a6f39fe58aafbcb82fbf4b3" compoundref="cJSON_8c" startline="1931" endline="1950">create_reference</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a2a6ae8b4e5b92328fa1d884895bb4d47" compoundref="cJSON__Utils_8c" startline="262" endline="272">get_array_item</referencedby>
        <referencedby refid="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__array_8c" startline="156" endline="167">main</referencedby>
        <referencedby refid="cJSON_8c_1a367cc7ac5a592211d9f18dc02dd23069" compoundref="cJSON_8c" startline="1437" endline="1532">parse_array</referencedby>
        <referencedby refid="parse__array_8c_1a5f15cf96ecc1d962b9ac16cc1ec6396e" compoundref="parse__array_8c" startline="104" endline="143">parse_array_should_parse_arrays_with_multiple_elements</referencedby>
        <referencedby refid="parse__array_8c_1a70a390289c7d6092fedaab0dc681fe95" compoundref="parse__array_8c" startline="77" endline="102">parse_array_should_parse_arrays_with_one_element</referencedby>
        <referencedby refid="parse__array_8c_1a4f42cc7ab6f82377b7a1e83f1b894784" compoundref="parse__array_8c" startline="67" endline="74">parse_array_should_parse_empty_arrays</referencedby>
        <referencedby refid="cJSON_8c_1a699e1cebda71c2846a9a10b29b4dc407" compoundref="cJSON_8c" startline="305" endline="379">parse_number</referencedby>
        <referencedby refid="cJSON_8c_1a1472ac5d1becd7d9a5e558b4c053b06a" compoundref="cJSON_8c" startline="1597" endline="1707">parse_object</referencedby>
        <referencedby refid="cJSON_8c_1adf47b520af96d1bbefa2390016fbdb51" compoundref="cJSON_8c" startline="769" endline="895">parse_string</referencedby>
        <referencedby refid="cJSON_8c_1afd5c0b7089e4de2fc9b2af599d4b596f" compoundref="cJSON_8c" startline="1308" endline="1360">parse_value</referencedby>
        <referencedby refid="cJSON_8c_1ae71e2aec89bf140e6430cb7d5ca417c5" compoundref="cJSON_8c" startline="1183" endline="1245">print</referencedby>
        <referencedby refid="cJSON_8c_1ae84642817f3965a85c7c617663250c16" compoundref="cJSON_8c" startline="1535" endline="1594">print_array</referencedby>
        <referencedby refid="cJSON_8c_1ad93d84de08872da0eaa6624be0e74a68" compoundref="cJSON_8c" startline="545" endline="608">print_number</referencedby>
        <referencedby refid="cJSON_8c_1a3d742f5c68799bca291432a9cd72f8dd" compoundref="cJSON_8c" startline="1710" endline="1821">print_object</referencedby>
        <referencedby refid="cJSON_8c_1ad087dd738e49b4258f0a3d378a121df6" compoundref="cJSON_8c" startline="1020" endline="1023">print_string</referencedby>
        <referencedby refid="cJSON_8c_1a5ba141f183b9abb4b49e38a211299c7e" compoundref="cJSON_8c" startline="1363" endline="1434">print_value</referencedby>
        <referencedby refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" compoundref="common_8h" startline="29" endline="44">reset</referencedby>
        <referencedby refid="cJSON_8c_1a5d61bcc0045ace88c2ae04f0928eeace" compoundref="cJSON_8c" startline="1924" endline="1928">suffix_object</referencedby>
        <referencedby refid="misc__tests_8c_1af0db23c93ab585bd85cffb9b550ea4cd" compoundref="misc__tests_8c" startline="152" endline="206">typecheck_functions_should_check_type</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parse__array_8c_1a1366c9daf2b88392dc00e8b763e38337" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void assert_is_array</definition>
        <argsstring>(cJSON *array_item)</argsstring>
        <name>assert_is_array</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>array_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="33" column="13" bodyfile="tests/parse_array.c" bodystart="33" bodyend="43"/>
        <referencedby refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" compoundref="parse__array_8c" startline="56" endline="65">assert_parse_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void assert_not_array</definition>
        <argsstring>(const char *json)</argsstring>
        <name>assert_not_array</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="45" column="13" bodyfile="tests/parse_array.c" bodystart="45" bodyend="54"/>
        <references refid="structparse__buffer_1a52ee1184576baa3d5171059ab0e942de" compoundref="cJSON_8c" startline="289">parse_buffer::content</references>
        <references refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" compoundref="cJSON_8c" startline="186">global_hooks</references>
        <references refid="structparse__buffer_1a2c3e99b15da2935fc5d58124ffb4a894" compoundref="cJSON_8c" startline="293">parse_buffer::hooks</references>
        <references refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__array_8c" startline="31">item</references>
        <references refid="structparse__buffer_1a036970e9335896d3cee8459eda9e2eb9" compoundref="cJSON_8c" startline="290">parse_buffer::length</references>
        <references refid="cJSON_8c_1a367cc7ac5a592211d9f18dc02dd23069" compoundref="cJSON_8c" startline="1437" endline="1532">parse_array</references>
        <referencedby refid="parse__array_8c_1aa72dd72799a1ef93bb0e958e7b2dca6b" compoundref="parse__array_8c" startline="145" endline="154">parse_array_should_not_parse_non_arrays</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void assert_parse_array</definition>
        <argsstring>(const char *json)</argsstring>
        <name>assert_parse_array</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="56" column="13" bodyfile="tests/parse_array.c" bodystart="56" bodyend="65"/>
        <references refid="parse__array_8c_1a1366c9daf2b88392dc00e8b763e38337" compoundref="parse__array_8c" startline="33" endline="43">assert_is_array</references>
        <references refid="structparse__buffer_1a52ee1184576baa3d5171059ab0e942de" compoundref="cJSON_8c" startline="289">parse_buffer::content</references>
        <references refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" compoundref="cJSON_8c" startline="186">global_hooks</references>
        <references refid="structparse__buffer_1a2c3e99b15da2935fc5d58124ffb4a894" compoundref="cJSON_8c" startline="293">parse_buffer::hooks</references>
        <references refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__array_8c" startline="31">item</references>
        <references refid="structparse__buffer_1a036970e9335896d3cee8459eda9e2eb9" compoundref="cJSON_8c" startline="290">parse_buffer::length</references>
        <references refid="cJSON_8c_1a367cc7ac5a592211d9f18dc02dd23069" compoundref="cJSON_8c" startline="1437" endline="1532">parse_array</references>
        <referencedby refid="parse__array_8c_1a5f15cf96ecc1d962b9ac16cc1ec6396e" compoundref="parse__array_8c" startline="104" endline="143">parse_array_should_parse_arrays_with_multiple_elements</referencedby>
        <referencedby refid="parse__array_8c_1a70a390289c7d6092fedaab0dc681fe95" compoundref="parse__array_8c" startline="77" endline="102">parse_array_should_parse_arrays_with_one_element</referencedby>
        <referencedby refid="parse__array_8c_1a4f42cc7ab6f82377b7a1e83f1b894784" compoundref="parse__array_8c" startline="67" endline="74">parse_array_should_parse_empty_arrays</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__array_8c_1a4f42cc7ab6f82377b7a1e83f1b894784" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_array_should_parse_empty_arrays</definition>
        <argsstring>(void)</argsstring>
        <name>parse_array_should_parse_empty_arrays</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="67" column="13" bodyfile="tests/parse_array.c" bodystart="67" bodyend="74"/>
        <references refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" compoundref="parse__array_8c" startline="56" endline="65">assert_parse_array</references>
        <references refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__array_8c" startline="31">item</references>
        <referencedby refid="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__array_8c" startline="156" endline="167">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__array_8c_1a70a390289c7d6092fedaab0dc681fe95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_array_should_parse_arrays_with_one_element</definition>
        <argsstring>(void)</argsstring>
        <name>parse_array_should_parse_arrays_with_one_element</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="77" column="13" bodyfile="tests/parse_array.c" bodystart="77" bodyend="102"/>
        <references refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" compoundref="parse__array_8c" startline="56" endline="65">assert_parse_array</references>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__array_8c" startline="31">item</references>
        <references refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" compoundref="common_8h" startline="29" endline="44">reset</references>
        <references refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" compoundref="cJSON_8h" startline="115">cJSON::valuestring</references>
        <referencedby refid="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__array_8c" startline="156" endline="167">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__array_8c_1a5f15cf96ecc1d962b9ac16cc1ec6396e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_array_should_parse_arrays_with_multiple_elements</definition>
        <argsstring>(void)</argsstring>
        <name>parse_array_should_parse_arrays_with_multiple_elements</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="104" column="13" bodyfile="tests/parse_array.c" bodystart="104" bodyend="143"/>
        <references refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" compoundref="parse__array_8c" startline="56" endline="65">assert_parse_array</references>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__array_8c" startline="31">item</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" compoundref="common_8h" startline="29" endline="44">reset</references>
        <references refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" compoundref="cJSON_8h" startline="112">cJSON::type</references>
        <referencedby refid="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__array_8c" startline="156" endline="167">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__array_8c_1aa72dd72799a1ef93bb0e958e7b2dca6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void parse_array_should_not_parse_non_arrays</definition>
        <argsstring>(void)</argsstring>
        <name>parse_array_should_not_parse_non_arrays</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="145" column="13" bodyfile="tests/parse_array.c" bodystart="145" bodyend="154"/>
        <references refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" compoundref="parse__array_8c" startline="45" endline="54">assert_not_array</references>
        <referencedby refid="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="parse__array_8c" startline="156" endline="167">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/parse_array.c" line="156" column="8" bodyfile="tests/parse_array.c" bodystart="156" bodyend="167"/>
        <references refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" compoundref="parse__array_8c" startline="31">item</references>
        <references refid="parse__array_8c_1aa72dd72799a1ef93bb0e958e7b2dca6b" compoundref="parse__array_8c" startline="145" endline="154">parse_array_should_not_parse_non_arrays</references>
        <references refid="parse__array_8c_1a5f15cf96ecc1d962b9ac16cc1ec6396e" compoundref="parse__array_8c" startline="104" endline="143">parse_array_should_parse_arrays_with_multiple_elements</references>
        <references refid="parse__array_8c_1a70a390289c7d6092fedaab0dc681fe95" compoundref="parse__array_8c" startline="77" endline="102">parse_array_should_parse_arrays_with_one_element</references>
        <references refid="parse__array_8c_1a4f42cc7ab6f82377b7a1e83f1b894784" compoundref="parse__array_8c" startline="67" endline="74">parse_array_should_parse_empty_arrays</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2009-2017<sp/>Dave<sp/>Gamble<sp/>and<sp/>cJSON<sp/>contributors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity__config_8h" kindref="compound">unity/examples/unity_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unity_8h" kindref="compound">unity/src/unity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/><ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>[1];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="parse__array_8c_1a1366c9daf2b88392dc00e8b763e38337" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1a1366c9daf2b88392dc00e8b763e38337" kindref="member">assert_is_array</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*array_item)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1ab29f13f0eaebfc7cd26c0b9360f66e92" kindref="member">TEST_ASSERT_NOT_NULL_MESSAGE</ref>(array_item,<sp/></highlight><highlight class="stringliteral">&quot;Item<sp/>is<sp/>NULL.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a2c8688f23b1d3dc9584d95cbb2779612" kindref="member">assert_not_in_list</ref>(array_item);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(array_item,<sp/><ref refid="cJSON_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1a6e62df3c208d5c52b7ac5a43c691a2" kindref="member">assert_has_no_reference</ref>(array_item);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a72c7484cb26a1f6575e20febbdc69b12" kindref="member">assert_has_no_const_string</ref>(array_item);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1e8af304fb1faa1122841764ea1ac7bb" kindref="member">assert_has_no_valuestring</ref>(array_item);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1aabd3d6d1e1cd513025780693b223f279" kindref="member">assert_has_no_string</ref>(array_item);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="readme__examples_8c_1a4dd85a1ffd4add568eb3b646e857eadc" kindref="member">json</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparse__buffer" kindref="compound">parse_buffer</ref><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.content<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="readme__examples_8c_1a4dd85a1ffd4add568eb3b646e857eadc" kindref="member">json</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.length<sp/>=<sp/>strlen(<ref refid="readme__examples_8c_1a4dd85a1ffd4add568eb3b646e857eadc" kindref="member">json</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.hooks<sp/>=<sp/><ref refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" kindref="member">global_hooks</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1a9d18ac80652af344ba355a6a9fed1c30" kindref="member">TEST_ASSERT_FALSE</ref>(<ref refid="cJSON_8c_1a367cc7ac5a592211d9f18dc02dd23069" kindref="member">parse_array</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>&amp;<ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a040a3b994f988d83f9b30b5f7b621155" kindref="member">assert_is_invalid</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="readme__examples_8c_1a4dd85a1ffd4add568eb3b646e857eadc" kindref="member">json</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structparse__buffer" kindref="compound">parse_buffer</ref><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref><sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.content<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="readme__examples_8c_1a4dd85a1ffd4add568eb3b646e857eadc" kindref="member">json</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.length<sp/>=<sp/>strlen(<ref refid="readme__examples_8c_1a4dd85a1ffd4add568eb3b646e857eadc" kindref="member">json</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>.hooks<sp/>=<sp/><ref refid="cJSON_8c_1a855c7241e836a5b2d87577df8c113faf" kindref="member">global_hooks</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1a6a0527f090dfc0b5ce9724415e51ebe5" kindref="member">TEST_ASSERT_TRUE</ref>(<ref refid="cJSON_8c_1a367cc7ac5a592211d9f18dc02dd23069" kindref="member">parse_array</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>&amp;<ref refid="unity__output__Spy_8c_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a1366c9daf2b88392dc00e8b763e38337" kindref="member">assert_is_array</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="parse__array_8c_1a4f42cc7ab6f82377b7a1e83f1b894784" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1a4f42cc7ab6f82377b7a1e83f1b894784" kindref="member">parse_array_should_parse_empty_arrays</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a740922f131411646171056003b2cb526" kindref="member">assert_has_no_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[\n\t]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a740922f131411646171056003b2cb526" kindref="member">assert_has_no_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="parse__array_8c_1a70a390289c7d6092fedaab0dc681fe95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1a70a390289c7d6092fedaab0dc681fe95" kindref="member">parse_array_should_parse_arrays_with_one_element</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[1]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a4f8ad015d9e00be85794d582da34d41c" kindref="member">assert_has_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>,<sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" kindref="member">reset</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[\&quot;hello!\&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a4f8ad015d9e00be85794d582da34d41c" kindref="member">assert_has_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>,<sp/><ref refid="cJSON_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1a1432f008fb6fb923371d4d0402571bf6" kindref="member">TEST_ASSERT_EQUAL_STRING</ref>(</highlight><highlight class="stringliteral">&quot;hello!&quot;</highlight><highlight class="normal">,<sp/><ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" kindref="member">reset</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[[]]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a4f8ad015d9e00be85794d582da34d41c" kindref="member">assert_has_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1afae78efdc83dcc60f08347b8390525b9" kindref="member">TEST_ASSERT_NOT_NULL</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>,<sp/><ref refid="cJSON_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a740922f131411646171056003b2cb526" kindref="member">assert_has_no_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" kindref="member">reset</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[null]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a4f8ad015d9e00be85794d582da34d41c" kindref="member">assert_has_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>,<sp/><ref refid="cJSON_8h_1aeadaba63ddb68aaa518528595d503dcd" kindref="member">cJSON_NULL</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" kindref="member">reset</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="parse__array_8c_1a5f15cf96ecc1d962b9ac16cc1ec6396e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1a5f15cf96ecc1d962b9ac16cc1ec6396e" kindref="member">parse_array_should_parse_arrays_with_multiple_elements</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[1\t,\n2,<sp/>3]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a4f8ad015d9e00be85794d582da34d41c" kindref="member">assert_has_child</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1afae78efdc83dcc60f08347b8390525b9" kindref="member">TEST_ASSERT_NOT_NULL</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1afae78efdc83dcc60f08347b8390525b9" kindref="member">TEST_ASSERT_NOT_NULL</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity_8h_1a4d807ccb46fae06886f16ea8a86590ca" kindref="member">TEST_ASSERT_NULL</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>,<sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>,<sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1ace49ab08deaebb78ba9be3240d621aeb" kindref="member">assert_has_type</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>,<sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" kindref="member">reset</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*node<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected_types[7]<sp/>=</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1aeadaba63ddb68aaa518528595d503dcd" kindref="member">cJSON_NULL</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1aad4e442b8095939decddfb67d87d9324" kindref="member">cJSON_True</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1a2d240682316354b5748f909ad220184b" kindref="member">cJSON_False</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1a22c6e13481c090629afbd77b7cebd24c" kindref="member">cJSON_Object</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a643a34e3765ad0861b82fcf9c20dbfd6" kindref="member">assert_parse_array</ref>(</highlight><highlight class="stringliteral">&quot;[1,<sp/>null,<sp/>true,<sp/>false,<sp/>[],<sp/>\&quot;hello\&quot;,<sp/>{}]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i<sp/>&lt;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(expected_types)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(node<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)i++,<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8h_1ae76772524d720cfce161b2cb7cff8886" kindref="member">TEST_ASSERT_BITS</ref>(0xFF,<sp/>expected_types[i],<sp/>node-&gt;<ref refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unity_8h_1af52a321a93c580a6213fef3e0f85c237" kindref="member">TEST_ASSERT_EQUAL_INT</ref>(i,<sp/>7);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1a1dbe1f08dd3011edc95b056ae945417d" kindref="member">reset</ref>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="parse__array_8c_1aa72dd72799a1ef93bb0e958e7b2dca6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1aa72dd72799a1ef93bb0e958e7b2dca6b" kindref="member">parse_array_should_not_parse_non_arrays</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="stringliteral">&quot;{\&quot;hello\&quot;:[]}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="stringliteral">&quot;42&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="stringliteral">&quot;3.14&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1ab2c6686d29bdffb007af20b488809169" kindref="member">assert_not_array</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;[]hello<sp/>world!\n\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a79203c3ba406ffd5736627cc1e082e38" kindref="member">CJSON_CDECL</ref><sp/><ref refid="parse__array_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>cJSON<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcJSON" kindref="compound">cJSON</ref>));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unity__internals_8h_1aaad15a5d10e50a412d0a6851d0e5091a" kindref="member">UNITY_BEGIN</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__array_8c_1a4f42cc7ab6f82377b7a1e83f1b894784" kindref="member">parse_array_should_parse_empty_arrays</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__array_8c_1a70a390289c7d6092fedaab0dc681fe95" kindref="member">parse_array_should_parse_arrays_with_one_element</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__array_8c_1a5f15cf96ecc1d962b9ac16cc1ec6396e" kindref="member">parse_array_should_parse_arrays_with_multiple_elements</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__1_2test_2test__runners_2TestProductionCode2__Runner_8c_1af3a9b37ea192d5f498c7d699d65ad530" kindref="member">RUN_TEST</ref>(<ref refid="parse__array_8c_1aa72dd72799a1ef93bb0e958e7b2dca6b" kindref="member">parse_array_should_not_parse_non_arrays</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="unity__internals_8h_1aa519129d3af737eb796fc91720fae26a" kindref="member">UNITY_END</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/parse_array.c"/>
  </compounddef>
</doxygen>
