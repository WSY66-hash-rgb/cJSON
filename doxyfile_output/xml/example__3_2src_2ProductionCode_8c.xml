<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="example__3_2src_2ProductionCode_8c" kind="file" language="C++">
    <compoundname>ProductionCode.c</compoundname>
    <includes refid="example__3_2src_2ProductionCode_8h" local="yes">ProductionCode.h</includes>
    <incdepgraph>
      <node id="1">
        <label>tests/unity/examples/example_3/src/ProductionCode.c</label>
        <link refid="example__3_2src_2ProductionCode_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ProductionCode.h</label>
        <link refid="example__3_2src_2ProductionCode_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="example__3_2src_2ProductionCode_8c_1a8da6d6b33b7597f02434fedca1781cbc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Counter</definition>
        <argsstring></argsstring>
        <name>Counter</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/examples/example_3/src/ProductionCode.c" line="4" column="5" bodyfile="tests/unity/examples/example_3/src/ProductionCode.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="example__3_2src_2ProductionCode_8c_1a3514af4f93461af05b73b6a19cfd4780" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int NumbersToFind[9]</definition>
        <argsstring>[9]</argsstring>
        <name>NumbersToFind</name>
        <initializer>= { 0, 34, 55, 66, 32, 11, 1, 77, 888 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/examples/example_3/src/ProductionCode.c" line="5" column="5" bodyfile="tests/unity/examples/example_3/src/ProductionCode.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="example__3_2src_2ProductionCode_8c_1adcb2cff68b396cd27ab1b16a1139d696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FindFunction_WhichIsBroken</definition>
        <argsstring>(int NumberToFind)</argsstring>
        <name>FindFunction_WhichIsBroken</name>
        <param>
          <type>int</type>
          <declname>NumberToFind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/examples/example_3/src/ProductionCode.c" line="11" column="5" bodyfile="tests/unity/examples/example_3/src/ProductionCode.c" bodystart="11" bodyend="19"/>
        <references refid="example__1_2src_2ProductionCode_8c_1a3514af4f93461af05b73b6a19cfd4780" compoundref="example__1_2src_2ProductionCode_8c" startline="5">NumbersToFind</references>
      </memberdef>
      <memberdef kind="function" id="example__3_2src_2ProductionCode_8c_1a76defbd7150d0c294cdc91f797b60245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FunctionWhichReturnsLocalVariable</definition>
        <argsstring>(void)</argsstring>
        <name>FunctionWhichReturnsLocalVariable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/unity/examples/example_3/src/ProductionCode.c" line="21" column="5" bodyfile="tests/unity/examples/example_3/src/ProductionCode.c" bodystart="21" bodyend="24"/>
        <references refid="example__1_2src_2ProductionCode_8c_1a8da6d6b33b7597f02434fedca1781cbc" compoundref="example__1_2src_2ProductionCode_8c" startline="4">Counter</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="example__3_2src_2ProductionCode_8h" kindref="compound">ProductionCode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="example__3_2src_2ProductionCode_8c_1a8da6d6b33b7597f02434fedca1781cbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__1_2src_2ProductionCode_8c_1a8da6d6b33b7597f02434fedca1781cbc" kindref="member">Counter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5" refid="example__3_2src_2ProductionCode_8c_1a3514af4f93461af05b73b6a19cfd4780" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__1_2src_2ProductionCode_8c_1a3514af4f93461af05b73b6a19cfd4780" kindref="member">NumbersToFind</ref>[9]<sp/>=<sp/>{<sp/>0,<sp/>34,<sp/>55,<sp/>66,<sp/>32,<sp/>11,<sp/>1,<sp/>77,<sp/>888<sp/>};<sp/></highlight><highlight class="comment">//some<sp/>obnoxious<sp/>array<sp/>to<sp/>search<sp/>that<sp/>is<sp/>1-based<sp/>indexing<sp/>instead<sp/>of<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>supposed<sp/>to<sp/>search<sp/>through<sp/>NumbersToFind<sp/>and<sp/>find<sp/>a<sp/>particular<sp/>number.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>finds<sp/>it,<sp/>the<sp/>index<sp/>is<sp/>returned.<sp/><sp/>Otherwise<sp/>0<sp/>is<sp/>returned<sp/>which<sp/>sorta<sp/>makes<sp/>sense<sp/>since<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NumbersToFind<sp/>is<sp/>indexed<sp/>from<sp/>1.<sp/><sp/>Unfortunately<sp/>it&apos;s<sp/>broken<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(and<sp/>should<sp/>therefore<sp/>be<sp/>caught<sp/>by<sp/>our<sp/>tests)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="example__3_2src_2ProductionCode_8c_1adcb2cff68b396cd27ab1b16a1139d696" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__1_2src_2ProductionCode_8c_1adcb2cff68b396cd27ab1b16a1139d696" kindref="member">FindFunction_WhichIsBroken</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumberToFind)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>8)<sp/></highlight><highlight class="comment">//Notice<sp/>I<sp/>should<sp/>have<sp/>been<sp/>in<sp/>braces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="example__1_2src_2ProductionCode_8c_1a3514af4f93461af05b73b6a19cfd4780" kindref="member">NumbersToFind</ref>[i]<sp/>==<sp/>NumberToFind)<sp/></highlight><highlight class="comment">//Yikes!<sp/><sp/>I&apos;m<sp/>getting<sp/>run<sp/>after<sp/>the<sp/>loop<sp/>finishes<sp/>instead<sp/>of<sp/>during<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="example__3_2src_2ProductionCode_8c_1a76defbd7150d0c294cdc91f797b60245" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__1_2src_2ProductionCode_8c_1a76defbd7150d0c294cdc91f797b60245" kindref="member">FunctionWhichReturnsLocalVariable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="example__1_2src_2ProductionCode_8c_1a8da6d6b33b7597f02434fedca1781cbc" kindref="member">Counter</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/unity/examples/example_3/src/ProductionCode.c"/>
  </compounddef>
</doxygen>
