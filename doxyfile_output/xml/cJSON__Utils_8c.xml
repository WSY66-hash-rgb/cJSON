<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cJSON__Utils_8c" kind="file" language="C++">
    <compoundname>cJSON_Utils.c</compoundname>
    <includes local="no">ctype.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">float.h</includes>
    <includes refid="cJSON__Utils_8h" local="yes">cJSON_Utils.h</includes>
    <incdepgraph>
      <node id="1">
        <label>cJSON_Utils.c</label>
        <link refid="cJSON__Utils_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cJSON_Utils.h</label>
        <link refid="cJSON__Utils_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>float.h</label>
      </node>
      <node id="10">
        <label>cJSON.h</label>
        <link refid="cJSON_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>ctype.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cJSON__Utils_8c_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" prot="public" static="no">
        <name>true</name>
        <initializer>((<ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref>)1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="59" column="10" bodyfile="cJSON_Utils.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cJSON__Utils_8c_1a65e9886d74aaee76545e83dd09011727" prot="public" static="no">
        <name>false</name>
        <initializer>((<ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref>)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="64" column="10" bodyfile="cJSON_Utils.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225" prot="public" static="no" strong="no">
        <type></type>
        <name>patch_operation</name>
        <enumvalue id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aef2863a469df3ea6871d640e3669a2f2" prot="public">
          <name>INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225acfcf145f2788bf340ff3f3098bc54909" prot="public">
          <name>ADD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a894523bc8f6298dbfe0a6cc5c43a6f30" prot="public">
          <name>REMOVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a765ae4f8f09e8a28e363acc11643ed91" prot="public">
          <name>REPLACE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aed3ef32890b6da0919b57254c5206c62" prot="public">
          <name>MOVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aba6788019f0f871f0aefcd5644635785" prot="public">
          <name>COPY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225ab2f0cd22b1963becef8b91d29d567fe8" prot="public">
          <name>TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="740" column="1" bodyfile="cJSON_Utils.c" bodystart="740" bodyend="740"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* cJSONUtils_strdup</definition>
        <argsstring>(const unsigned char *const string)</argsstring>
        <name>cJSONUtils_strdup</name>
        <param>
          <type>const unsigned char *const</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="66" column="22" bodyfile="cJSON_Utils.c" bodystart="66" bodyend="80"/>
        <references refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" compoundref="cJSON_8c" startline="3102" endline="3105">cJSON_malloc</references>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" compoundref="cJSON__Utils_8c" startline="198" endline="259">cJSONUtils_FindPointerFromObjectTo</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" compoundref="cJSON__Utils_8c" startline="430" endline="481">detach_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int compare_strings</definition>
        <argsstring>(const unsigned char *string1, const unsigned char *string2, const cJSON_bool case_sensitive)</argsstring>
        <name>compare_strings</name>
        <param>
          <type>const unsigned char *</type>
          <declname>string1</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>string2</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="83" column="12" bodyfile="cJSON_Utils.c" bodystart="83" bodyend="109"/>
        <referencedby refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" compoundref="cJSON__Utils_8c" startline="604" endline="690">compare_json</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</referencedby>
        <referencedby refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" compoundref="cJSON__Utils_8c" startline="484" endline="593">sort_list</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1aa7a85b63f1830e7e666e1f56872d5d3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
        <definition>static cJSON_bool compare_double</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>compare_double</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="112" column="19" bodyfile="cJSON_Utils.c" bodystart="112" bodyend="116"/>
        <referencedby refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" compoundref="cJSON__Utils_8c" startline="604" endline="690">compare_json</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a5b1b02cebe430578f717392cc740411f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
        <definition>static cJSON_bool compare_pointers</definition>
        <argsstring>(const unsigned char *name, const unsigned char *pointer, const cJSON_bool case_sensitive)</argsstring>
        <name>compare_pointers</name>
        <param>
          <type>const unsigned char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="120" column="19" bodyfile="cJSON_Utils.c" bodystart="120" bodyend="154"/>
        <referencedby refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" compoundref="cJSON__Utils_8c" startline="301" endline="346">get_item_from_pointer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t pointer_encoded_length</definition>
        <argsstring>(const unsigned char *string)</argsstring>
        <name>pointer_encoded_length</name>
        <param>
          <type>const unsigned char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="157" column="15" bodyfile="cJSON_Utils.c" bodystart="157" bodyend="170"/>
        <referencedby refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" compoundref="cJSON__Utils_8c" startline="198" endline="259">cJSONUtils_FindPointerFromObjectTo</referencedby>
        <referencedby refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" compoundref="cJSON__Utils_8c" startline="1096" endline="1134">compose_patch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void encode_string_as_pointer</definition>
        <argsstring>(unsigned char *destination, const unsigned char *source)</argsstring>
        <name>encode_string_as_pointer</name>
        <param>
          <type>unsigned char *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="173" column="13" bodyfile="cJSON_Utils.c" bodystart="173" bodyend="196"/>
        <referencedby refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" compoundref="cJSON__Utils_8c" startline="198" endline="259">cJSONUtils_FindPointerFromObjectTo</referencedby>
        <referencedby refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" compoundref="cJSON__Utils_8c" startline="1096" endline="1134">compose_patch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* cJSONUtils_FindPointerFromObjectTo</definition>
        <argsstring>(const cJSON *const object, const cJSON *const target)</argsstring>
        <name>cJSONUtils_FindPointerFromObjectTo</name>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="198" column="9" bodyfile="cJSON_Utils.c" bodystart="198" bodyend="259"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" compoundref="cJSON_8c" startline="3107" endline="3110">cJSON_free</references>
        <references refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" compoundref="cJSON_8c" startline="2947" endline="2955">cJSON_IsArray</references>
        <references refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" compoundref="cJSON_8c" startline="2957" endline="2965">cJSON_IsObject</references>
        <references refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" compoundref="cJSON_8c" startline="3102" endline="3105">cJSON_malloc</references>
        <references refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" compoundref="cJSON__Utils_8c" startline="198" endline="259">cJSONUtils_FindPointerFromObjectTo</references>
        <references refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" compoundref="cJSON__Utils_8c" startline="66" endline="80">cJSONUtils_strdup</references>
        <references refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" compoundref="cJSON__Utils_8c" startline="173" endline="196">encode_string_as_pointer</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" compoundref="cJSON__Utils_8c" startline="157" endline="170">pointer_encoded_length</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" compoundref="cJSON__Utils_8c" startline="198" endline="259">cJSONUtils_FindPointerFromObjectTo</referencedby>
        <referencedby refid="old__utils__tests_8c_1a5eef89c8012b160e542da762a24a15a1" compoundref="old__utils__tests_8c" startline="88" endline="136">misc_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a2a6ae8b4e5b92328fa1d884895bb4d47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* get_array_item</definition>
        <argsstring>(const cJSON *array, size_t item)</argsstring>
        <name>get_array_item</name>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="262" column="14" bodyfile="cJSON_Utils.c" bodystart="262" bodyend="272"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <referencedby refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" compoundref="cJSON__Utils_8c" startline="301" endline="346">get_item_from_pointer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
        <definition>static cJSON_bool decode_array_index_from_pointer</definition>
        <argsstring>(const unsigned char *const pointer, size_t *const index)</argsstring>
        <name>decode_array_index_from_pointer</name>
        <param>
          <type>const unsigned char *const</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>size_t *const</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="274" column="19" bodyfile="cJSON_Utils.c" bodystart="274" bodyend="299"/>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" compoundref="cJSON__Utils_8c" startline="430" endline="481">detach_path</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" compoundref="cJSON__Utils_8c" startline="301" endline="346">get_item_from_pointer</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* get_item_from_pointer</definition>
        <argsstring>(cJSON *const object, const char *pointer, const cJSON_bool case_sensitive)</argsstring>
        <name>get_item_from_pointer</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="301" column="14" bodyfile="cJSON_Utils.c" bodystart="301" bodyend="346"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" compoundref="cJSON_8c" startline="2947" endline="2955">cJSON_IsArray</references>
        <references refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" compoundref="cJSON_8c" startline="2957" endline="2965">cJSON_IsObject</references>
        <references refid="cJSON__Utils_8c_1a5b1b02cebe430578f717392cc740411f" compoundref="cJSON__Utils_8c" startline="120" endline="154">compare_pointers</references>
        <references refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" compoundref="cJSON__Utils_8c" startline="274" endline="299">decode_array_index_from_pointer</references>
        <references refid="cJSON__Utils_8c_1a2a6ae8b4e5b92328fa1d884895bb4d47" compoundref="cJSON__Utils_8c" startline="262" endline="272">get_array_item</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a08336023772bc23fe9957c285446ab90" compoundref="cJSON__Utils_8c" startline="348" endline="351">cJSONUtils_GetPointer</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a7a6b41024e0ea635bd14451d68870db2" compoundref="cJSON__Utils_8c" startline="353" endline="356">cJSONUtils_GetPointerCaseSensitive</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" compoundref="cJSON__Utils_8c" startline="430" endline="481">detach_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a08336023772bc23fe9957c285446ab90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_GetPointer</definition>
        <argsstring>(cJSON *const object, const char *pointer)</argsstring>
        <name>cJSONUtils_GetPointer</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="348" column="10" bodyfile="cJSON_Utils.c" bodystart="348" bodyend="351"/>
        <references refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" compoundref="cJSON__Utils_8c" startline="301" endline="346">get_item_from_pointer</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
        <referencedby refid="old__utils__tests_8c_1a5b450637565a7e09b4fc5cbf6bad28e2" compoundref="old__utils__tests_8c" startline="52" endline="86">json_pointer_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a7a6b41024e0ea635bd14451d68870db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_GetPointerCaseSensitive</definition>
        <argsstring>(cJSON *const object, const char *pointer)</argsstring>
        <name>cJSONUtils_GetPointerCaseSensitive</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="353" column="10" bodyfile="cJSON_Utils.c" bodystart="353" bodyend="356"/>
        <references refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" compoundref="cJSON__Utils_8c" startline="301" endline="346">get_item_from_pointer</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1aba4cee7648d3ed01c07b0d1ae5f092c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void decode_pointer_inplace</definition>
        <argsstring>(unsigned char *string)</argsstring>
        <name>decode_pointer_inplace</name>
        <param>
          <type>unsigned char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="359" column="13" bodyfile="cJSON_Utils.c" bodystart="359" bodyend="390"/>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" compoundref="cJSON__Utils_8c" startline="430" endline="481">detach_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a282a449e93fcd1614a0ef5b47ab99626" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* detach_item_from_array</definition>
        <argsstring>(cJSON *array, size_t which)</argsstring>
        <name>detach_item_from_array</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="393" column="14" bodyfile="cJSON_Utils.c" bodystart="393" bodyend="427"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" compoundref="cJSON_8h" startline="107">cJSON::prev</references>
        <referencedby refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" compoundref="cJSON__Utils_8c" startline="430" endline="481">detach_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* detach_path</definition>
        <argsstring>(cJSON *object, const unsigned char *path, const cJSON_bool case_sensitive)</argsstring>
        <name>detach_path</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="430" column="14" bodyfile="cJSON_Utils.c" bodystart="430" bodyend="481"/>
        <references refid="cJSON_8c_1a7010822d267256f274e0adf22be2b202" compoundref="cJSON_8c" startline="2234" endline="2239">cJSON_DetachItemFromObject</references>
        <references refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" compoundref="cJSON_8c" startline="3107" endline="3110">cJSON_free</references>
        <references refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" compoundref="cJSON_8c" startline="2947" endline="2955">cJSON_IsArray</references>
        <references refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" compoundref="cJSON_8c" startline="2957" endline="2965">cJSON_IsObject</references>
        <references refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" compoundref="cJSON__Utils_8c" startline="66" endline="80">cJSONUtils_strdup</references>
        <references refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" compoundref="cJSON__Utils_8c" startline="274" endline="299">decode_array_index_from_pointer</references>
        <references refid="cJSON__Utils_8c_1aba4cee7648d3ed01c07b0d1ae5f092c0" compoundref="cJSON__Utils_8c" startline="359" endline="390">decode_pointer_inplace</references>
        <references refid="cJSON__Utils_8c_1a282a449e93fcd1614a0ef5b47ab99626" compoundref="cJSON__Utils_8c" startline="393" endline="427">detach_item_from_array</references>
        <references refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" compoundref="cJSON__Utils_8c" startline="301" endline="346">get_item_from_pointer</references>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* sort_list</definition>
        <argsstring>(cJSON *list, const cJSON_bool case_sensitive)</argsstring>
        <name>sort_list</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="484" column="14" bodyfile="cJSON_Utils.c" bodystart="484" bodyend="593"/>
        <references refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" compoundref="cJSON__Utils_8c" startline="83" endline="109">compare_strings</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" compoundref="cJSON_8h" startline="107">cJSON::prev</references>
        <references refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" compoundref="cJSON__Utils_8c" startline="484" endline="593">sort_list</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <referencedby refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" compoundref="cJSON__Utils_8c" startline="484" endline="593">sort_list</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" compoundref="cJSON__Utils_8c" startline="595" endline="602">sort_object</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sort_object</definition>
        <argsstring>(cJSON *const object, const cJSON_bool case_sensitive)</argsstring>
        <name>sort_object</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="595" column="13" bodyfile="cJSON_Utils.c" bodystart="595" bodyend="602"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" compoundref="cJSON__Utils_8c" startline="484" endline="593">sort_list</references>
        <referencedby refid="cJSON__Utils_8c_1a405a912a1ac38c57ce587e25e68c1fea" compoundref="cJSON__Utils_8c" startline="1311" endline="1314">cJSONUtils_SortObject</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a0b653f6de92e7b51100457251ab15402" compoundref="cJSON__Utils_8c" startline="1316" endline="1319">cJSONUtils_SortObjectCaseSensitive</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" compoundref="cJSON__Utils_8c" startline="604" endline="690">compare_json</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</referencedby>
        <referencedby refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" compoundref="cJSON__Utils_8c" startline="1390" endline="1470">generate_merge_patch</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
        <definition>static cJSON_bool compare_json</definition>
        <argsstring>(cJSON *a, cJSON *b, const cJSON_bool case_sensitive)</argsstring>
        <name>compare_json</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="604" column="19" bodyfile="cJSON_Utils.c" bodystart="604" bodyend="690"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON__Utils_8c_1aa7a85b63f1830e7e666e1f56872d5d3e" compoundref="cJSON__Utils_8c" startline="112" endline="116">compare_double</references>
        <references refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" compoundref="cJSON__Utils_8c" startline="604" endline="690">compare_json</references>
        <references refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" compoundref="cJSON__Utils_8c" startline="83" endline="109">compare_strings</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" compoundref="cJSON__Utils_8c" startline="595" endline="602">sort_object</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <references refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" compoundref="cJSON_8h" startline="112">cJSON::type</references>
        <references refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" compoundref="cJSON_8h" startline="119">cJSON::valuedouble</references>
        <references refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" compoundref="cJSON_8h" startline="117">cJSON::valueint</references>
        <references refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" compoundref="cJSON_8h" startline="115">cJSON::valuestring</references>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" compoundref="cJSON__Utils_8c" startline="604" endline="690">compare_json</referencedby>
        <referencedby refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" compoundref="cJSON__Utils_8c" startline="1390" endline="1470">generate_merge_patch</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1aa6cc1d0d8a5424cc0d480fa655234ca1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
        <definition>static cJSON_bool insert_item_in_array</definition>
        <argsstring>(cJSON *array, size_t which, cJSON *newitem)</argsstring>
        <name>insert_item_in_array</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>which</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>newitem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="693" column="19" bodyfile="cJSON_Utils.c" bodystart="693" bodyend="728"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1afdbbb05c681bab6cf6bd7fc856ed0f31" compoundref="cJSON_8c" startline="1986" endline="1989">cJSON_AddItemToArray</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" compoundref="cJSON_8h" startline="107">cJSON::prev</references>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* get_object_item</definition>
        <argsstring>(const cJSON *const object, const char *name, const cJSON_bool case_sensitive)</argsstring>
        <name>get_object_item</name>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="730" column="14" bodyfile="cJSON_Utils.c" bodystart="730" bodyend="738"/>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a1bcd9b566a44f40998eee63918e67270" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225" kindref="member">patch_operation</ref></type>
        <definition>static enum patch_operation decode_patch_operation</definition>
        <argsstring>(const cJSON *const patch, const cJSON_bool case_sensitive)</argsstring>
        <name>decode_patch_operation</name>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patch</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="730" column="14" bodyfile="cJSON_Utils.c" bodystart="742" bodyend="781"/>
        <references refid="cJSON_8c_1af2319add4b386eb74159ab4d8ed0695d" compoundref="cJSON_8c" startline="1908" endline="1911">cJSON_GetObjectItem</references>
        <references refid="cJSON_8c_1a8be913fd1cb9ccf9672afcc3cdac35d5" compoundref="cJSON_8c" startline="1913" endline="1916">cJSON_GetObjectItemCaseSensitive</references>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1acf685df049535cc95f2e66759cfe057e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void overwrite_item</definition>
        <argsstring>(cJSON *const root, const cJSON replacement)</argsstring>
        <name>overwrite_item</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref></type>
          <declname>replacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="784" column="13" bodyfile="cJSON_Utils.c" bodystart="784" bodyend="805"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" compoundref="cJSON_8c" startline="253" endline="274">cJSON_Delete</references>
        <references refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" compoundref="cJSON_8c" startline="3107" endline="3110">cJSON_free</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <references refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" compoundref="cJSON_8h" startline="115">cJSON::valuestring</references>
        <referencedby refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int apply_patch</definition>
        <argsstring>(cJSON *object, const cJSON *patch, const cJSON_bool case_sensitive)</argsstring>
        <name>apply_patch</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>patch</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="807" column="12" bodyfile="cJSON_Utils.c" bodystart="807" bodyend="1036"/>
        <references refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225acfcf145f2788bf340ff3f3098bc54909" compoundref="cJSON__Utils_8c" startline="740">ADD</references>
        <references refid="cJSON_8c_1afdbbb05c681bab6cf6bd7fc856ed0f31" compoundref="cJSON_8c" startline="1986" endline="1989">cJSON_AddItemToArray</references>
        <references refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" compoundref="cJSON_8c" startline="2044" endline="2047">cJSON_AddItemToObject</references>
        <references refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" compoundref="cJSON_8c" startline="253" endline="274">cJSON_Delete</references>
        <references refid="cJSON_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" compoundref="cJSON_8c" startline="2248" endline="2251">cJSON_DeleteItemFromObject</references>
        <references refid="cJSON_8c_1a65893174ab9ffa37a7896e9aa7461975" compoundref="cJSON_8c" startline="2253" endline="2256">cJSON_DeleteItemFromObjectCaseSensitive</references>
        <references refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" compoundref="cJSON_8c" startline="2697" endline="2778">cJSON_Duplicate</references>
        <references refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" compoundref="cJSON_8c" startline="3107" endline="3110">cJSON_free</references>
        <references refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" compoundref="cJSON_8c" startline="2947" endline="2955">cJSON_IsArray</references>
        <references refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" compoundref="cJSON_8c" startline="2957" endline="2965">cJSON_IsObject</references>
        <references refid="cJSON_8c_1a87b7cb8032c9a552995e006f65f49cb5" compoundref="cJSON_8c" startline="2937" endline="2945">cJSON_IsString</references>
        <references refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" compoundref="cJSON__Utils_8c" startline="66" endline="80">cJSONUtils_strdup</references>
        <references refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" compoundref="cJSON__Utils_8c" startline="604" endline="690">compare_json</references>
        <references refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aba6788019f0f871f0aefcd5644635785" compoundref="cJSON__Utils_8c" startline="740">COPY</references>
        <references refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" compoundref="cJSON__Utils_8c" startline="274" endline="299">decode_array_index_from_pointer</references>
        <references refid="cJSON__Utils_8c_1aba4cee7648d3ed01c07b0d1ae5f092c0" compoundref="cJSON__Utils_8c" startline="359" endline="390">decode_pointer_inplace</references>
        <references refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" compoundref="cJSON__Utils_8c" startline="430" endline="481">detach_path</references>
        <references refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" compoundref="cJSON__Utils_8c" startline="301" endline="346">get_item_from_pointer</references>
        <references refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" compoundref="cJSON__Utils_8c" startline="730" endline="738">get_object_item</references>
        <references refid="cJSON__Utils_8c_1aa6cc1d0d8a5424cc0d480fa655234ca1" compoundref="cJSON__Utils_8c" startline="693" endline="728">insert_item_in_array</references>
        <references refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aef2863a469df3ea6871d640e3669a2f2" compoundref="cJSON__Utils_8c" startline="740">INVALID</references>
        <references refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aed3ef32890b6da0919b57254c5206c62" compoundref="cJSON__Utils_8c" startline="740">MOVE</references>
        <references refid="cJSON__Utils_8c_1acf685df049535cc95f2e66759cfe057e" compoundref="cJSON__Utils_8c" startline="784" endline="805">overwrite_item</references>
        <references refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a894523bc8f6298dbfe0a6cc5c43a6f30" compoundref="cJSON__Utils_8c" startline="740">REMOVE</references>
        <references refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a765ae4f8f09e8a28e363acc11643ed91" compoundref="cJSON__Utils_8c" startline="740">REPLACE</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <references refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225ab2f0cd22b1963becef8b91d29d567fe8" compoundref="cJSON__Utils_8c" startline="740">TEST</references>
        <references refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" compoundref="cJSON_8h" startline="115">cJSON::valuestring</references>
        <referencedby refid="cJSON__Utils_8c_1a641cb4552c85b29763cd604be0b3e2e1" compoundref="cJSON__Utils_8c" startline="1038" endline="1065">cJSONUtils_ApplyPatches</referencedby>
        <referencedby refid="cJSON__Utils_8c_1aedc0555c83da63f2cf2418ed371cfcab" compoundref="cJSON__Utils_8c" startline="1067" endline="1094">cJSONUtils_ApplyPatchesCaseSensitive</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a641cb4552c85b29763cd604be0b3e2e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cJSONUtils_ApplyPatches</definition>
        <argsstring>(cJSON *const object, const cJSON *const patches)</argsstring>
        <name>cJSONUtils_ApplyPatches</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1038" column="7" bodyfile="cJSON_Utils.c" bodystart="1038" bodyend="1065"/>
        <references refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</references>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" compoundref="cJSON_8c" startline="2947" endline="2955">cJSON_IsArray</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1aedc0555c83da63f2cf2418ed371cfcab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cJSONUtils_ApplyPatchesCaseSensitive</definition>
        <argsstring>(cJSON *const object, const cJSON *const patches)</argsstring>
        <name>cJSONUtils_ApplyPatchesCaseSensitive</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1067" column="7" bodyfile="cJSON_Utils.c" bodystart="1067" bodyend="1094"/>
        <references refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" compoundref="cJSON__Utils_8c" startline="807" endline="1036">apply_patch</references>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" compoundref="cJSON_8c" startline="2947" endline="2955">cJSON_IsArray</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
        <referencedby refid="json__patch__tests_8c_1a3ae4cfc74fe6a5fac249299f229e8ab7" compoundref="json__patch__tests_8c" startline="49" endline="120">test_apply_patch</referencedby>
        <referencedby refid="json__patch__tests_8c_1aa59e85969b210bbc43f2105bb522c73a" compoundref="json__patch__tests_8c" startline="122" endline="181">test_generate_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compose_patch</definition>
        <argsstring>(cJSON *const patches, const unsigned char *const operation, const unsigned char *const path, const unsigned char *suffix, const cJSON *const value)</argsstring>
        <name>compose_patch</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patches</declname>
        </param>
        <param>
          <type>const unsigned char *const</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const unsigned char *const</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>suffix</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1096" column="13" bodyfile="cJSON_Utils.c" bodystart="1096" bodyend="1134"/>
        <references refid="cJSON_8c_1afdbbb05c681bab6cf6bd7fc856ed0f31" compoundref="cJSON_8c" startline="1986" endline="1989">cJSON_AddItemToArray</references>
        <references refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" compoundref="cJSON_8c" startline="2044" endline="2047">cJSON_AddItemToObject</references>
        <references refid="cJSON_8c_1a9c5f44afdd781b16dead90042fe74085" compoundref="cJSON_8c" startline="2524" endline="2533">cJSON_CreateObject</references>
        <references refid="cJSON_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" compoundref="cJSON_8c" startline="2446" endline="2461">cJSON_CreateString</references>
        <references refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" compoundref="cJSON_8c" startline="2697" endline="2778">cJSON_Duplicate</references>
        <references refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" compoundref="cJSON_8c" startline="3107" endline="3110">cJSON_free</references>
        <references refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" compoundref="cJSON_8c" startline="3102" endline="3105">cJSON_malloc</references>
        <references refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" compoundref="cJSON__Utils_8c" startline="173" endline="196">encode_string_as_pointer</references>
        <references refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" compoundref="cJSON__Utils_8c" startline="157" endline="170">pointer_encoded_length</references>
        <referencedby refid="cJSON__Utils_8c_1a9df65351d73c14fff4c7c3717b03a222" compoundref="cJSON__Utils_8c" startline="1136" endline="1139">cJSONUtils_AddPatchToArray</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a9df65351d73c14fff4c7c3717b03a222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSONUtils_AddPatchToArray</definition>
        <argsstring>(cJSON *const array, const char *const operation, const char *const path, const cJSON *const value)</argsstring>
        <name>cJSONUtils_AddPatchToArray</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1136" column="8" bodyfile="cJSON_Utils.c" bodystart="1136" bodyend="1139"/>
        <references refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" compoundref="cJSON__Utils_8c" startline="1096" endline="1134">compose_patch</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void create_patches</definition>
        <argsstring>(cJSON *const patches, const unsigned char *const path, cJSON *const from, cJSON *const to, const cJSON_bool case_sensitive)</argsstring>
        <name>create_patches</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patches</declname>
        </param>
        <param>
          <type>const unsigned char *const</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1141" column="13" bodyfile="cJSON_Utils.c" bodystart="1141" bodyend="1279"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" compoundref="cJSON_8c" startline="3107" endline="3110">cJSON_free</references>
        <references refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" compoundref="cJSON_8c" startline="3102" endline="3105">cJSON_malloc</references>
        <references refid="cJSON__Utils_8c_1aa7a85b63f1830e7e666e1f56872d5d3e" compoundref="cJSON__Utils_8c" startline="112" endline="116">compare_double</references>
        <references refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" compoundref="cJSON__Utils_8c" startline="83" endline="109">compare_strings</references>
        <references refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" compoundref="cJSON__Utils_8c" startline="1096" endline="1134">compose_patch</references>
        <references refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</references>
        <references refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" compoundref="cJSON__Utils_8c" startline="173" endline="196">encode_string_as_pointer</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" compoundref="cJSON__Utils_8c" startline="157" endline="170">pointer_encoded_length</references>
        <references refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" compoundref="cJSON__Utils_8c" startline="595" endline="602">sort_object</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <references refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" compoundref="cJSON_8h" startline="112">cJSON::type</references>
        <references refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" compoundref="cJSON_8h" startline="119">cJSON::valuedouble</references>
        <references refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" compoundref="cJSON_8h" startline="117">cJSON::valueint</references>
        <references refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" compoundref="cJSON_8h" startline="115">cJSON::valuestring</references>
        <referencedby refid="cJSON__Utils_8c_1a33b9d8e8460ad8334278651727a27866" compoundref="cJSON__Utils_8c" startline="1281" endline="1294">cJSONUtils_GeneratePatches</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ae6ffc4b4590ab520f4d44fccfcf79323" compoundref="cJSON__Utils_8c" startline="1296" endline="1309">cJSONUtils_GeneratePatchesCaseSensitive</referencedby>
        <referencedby refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a33b9d8e8460ad8334278651727a27866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_GeneratePatches</definition>
        <argsstring>(cJSON *const from, cJSON *const to)</argsstring>
        <name>cJSONUtils_GeneratePatches</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1281" column="10" bodyfile="cJSON_Utils.c" bodystart="1281" bodyend="1294"/>
        <references refid="cJSON_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="cJSON_8c" startline="2513" endline="2522">cJSON_CreateArray</references>
        <references refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1ae6ffc4b4590ab520f4d44fccfcf79323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_GeneratePatchesCaseSensitive</definition>
        <argsstring>(cJSON *const from, cJSON *const to)</argsstring>
        <name>cJSONUtils_GeneratePatchesCaseSensitive</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1296" column="10" bodyfile="cJSON_Utils.c" bodystart="1296" bodyend="1309"/>
        <references refid="cJSON_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="cJSON_8c" startline="2513" endline="2522">cJSON_CreateArray</references>
        <references refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" compoundref="cJSON__Utils_8c" startline="1141" endline="1279">create_patches</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
        <referencedby refid="json__patch__tests_8c_1aa59e85969b210bbc43f2105bb522c73a" compoundref="json__patch__tests_8c" startline="122" endline="181">test_generate_test</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a405a912a1ac38c57ce587e25e68c1fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSONUtils_SortObject</definition>
        <argsstring>(cJSON *const object)</argsstring>
        <name>cJSONUtils_SortObject</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1311" column="8" bodyfile="cJSON_Utils.c" bodystart="1311" bodyend="1314"/>
        <references refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" compoundref="cJSON__Utils_8c" startline="595" endline="602">sort_object</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
        <referencedby refid="old__utils__tests_8c_1ac65d33ddd0ff0a5284ecbbd589bcb6ce" compoundref="old__utils__tests_8c" startline="138" endline="166">sort_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a0b653f6de92e7b51100457251ab15402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSONUtils_SortObjectCaseSensitive</definition>
        <argsstring>(cJSON *const object)</argsstring>
        <name>cJSONUtils_SortObjectCaseSensitive</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1316" column="8" bodyfile="cJSON_Utils.c" bodystart="1316" bodyend="1319"/>
        <references refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" compoundref="cJSON__Utils_8c" startline="595" endline="602">sort_object</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* merge_patch</definition>
        <argsstring>(cJSON *target, const cJSON *const patch, const cJSON_bool case_sensitive)</argsstring>
        <name>merge_patch</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patch</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1321" column="14" bodyfile="cJSON_Utils.c" bodystart="1321" bodyend="1378"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" compoundref="cJSON_8c" startline="2044" endline="2047">cJSON_AddItemToObject</references>
        <references refid="cJSON_8c_1a9c5f44afdd781b16dead90042fe74085" compoundref="cJSON_8c" startline="2524" endline="2533">cJSON_CreateObject</references>
        <references refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" compoundref="cJSON_8c" startline="253" endline="274">cJSON_Delete</references>
        <references refid="cJSON_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" compoundref="cJSON_8c" startline="2248" endline="2251">cJSON_DeleteItemFromObject</references>
        <references refid="cJSON_8c_1a65893174ab9ffa37a7896e9aa7461975" compoundref="cJSON_8c" startline="2253" endline="2256">cJSON_DeleteItemFromObjectCaseSensitive</references>
        <references refid="cJSON_8c_1a7010822d267256f274e0adf22be2b202" compoundref="cJSON_8c" startline="2234" endline="2239">cJSON_DetachItemFromObject</references>
        <references refid="cJSON_8c_1a75ab57d1dfc9dca274bf713fca641ba1" compoundref="cJSON_8c" startline="2241" endline="2246">cJSON_DetachItemFromObjectCaseSensitive</references>
        <references refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" compoundref="cJSON_8c" startline="2697" endline="2778">cJSON_Duplicate</references>
        <references refid="cJSON_8c_1a7e941f0d623c8476b6a10e9b05464f4f" compoundref="cJSON_8c" startline="2917" endline="2925">cJSON_IsNull</references>
        <references refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" compoundref="cJSON_8c" startline="2957" endline="2965">cJSON_IsObject</references>
        <references refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" compoundref="cJSON__Utils_8c" startline="1321" endline="1378">merge_patch</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <referencedby refid="cJSON__Utils_8c_1a2020aa55140d2520acafb82b5b2e3145" compoundref="cJSON__Utils_8c" startline="1380" endline="1383">cJSONUtils_MergePatch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a8a3c24bc764ddcb255995dca6f148236" compoundref="cJSON__Utils_8c" startline="1385" endline="1388">cJSONUtils_MergePatchCaseSensitive</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" compoundref="cJSON__Utils_8c" startline="1321" endline="1378">merge_patch</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a2020aa55140d2520acafb82b5b2e3145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_MergePatch</definition>
        <argsstring>(cJSON *target, const cJSON *const patch)</argsstring>
        <name>cJSONUtils_MergePatch</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1380" column="10" bodyfile="cJSON_Utils.c" bodystart="1380" bodyend="1383"/>
        <references refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" compoundref="cJSON__Utils_8c" startline="1321" endline="1378">merge_patch</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
        <referencedby refid="old__utils__tests_8c_1adb6b0c8e83b5b398535412ed78af6616" compoundref="old__utils__tests_8c" startline="192" endline="212">generate_merge_tests</referencedby>
        <referencedby refid="old__utils__tests_8c_1aa1bbd39feda45d95a138a2ad6f7ee52b" compoundref="old__utils__tests_8c" startline="168" endline="190">merge_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a8a3c24bc764ddcb255995dca6f148236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_MergePatchCaseSensitive</definition>
        <argsstring>(cJSON *target, const cJSON *const patch)</argsstring>
        <name>cJSONUtils_MergePatchCaseSensitive</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>patch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1385" column="10" bodyfile="cJSON_Utils.c" bodystart="1385" bodyend="1388"/>
        <references refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" compoundref="cJSON__Utils_8c" startline="1321" endline="1378">merge_patch</references>
        <referencedby refid="misc__utils__tests_8c_1a78a9e6deb564e73bdb8d641a59456898" compoundref="misc__utils__tests_8c" startline="32" endline="71">cjson_utils_functions_shouldnt_crash_with_null_pointers</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* generate_merge_patch</definition>
        <argsstring>(cJSON *const from, cJSON *const to, const cJSON_bool case_sensitive)</argsstring>
        <name>generate_merge_patch</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref></type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1390" column="14" bodyfile="cJSON_Utils.c" bodystart="1390" bodyend="1470"/>
        <references refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" compoundref="cJSON_8h" startline="109">cJSON::child</references>
        <references refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" compoundref="cJSON_8c" startline="2044" endline="2047">cJSON_AddItemToObject</references>
        <references refid="cJSON_8c_1a83ea2a0b33071a1120b9052170a2bc13" compoundref="cJSON_8c" startline="2376" endline="2385">cJSON_CreateNull</references>
        <references refid="cJSON_8c_1a9c5f44afdd781b16dead90042fe74085" compoundref="cJSON_8c" startline="2524" endline="2533">cJSON_CreateObject</references>
        <references refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" compoundref="cJSON_8c" startline="253" endline="274">cJSON_Delete</references>
        <references refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" compoundref="cJSON_8c" startline="2697" endline="2778">cJSON_Duplicate</references>
        <references refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" compoundref="cJSON_8c" startline="2957" endline="2965">cJSON_IsObject</references>
        <references refid="cJSON__Utils_8c_1a111512642cc5cc37cae52bbe44f6da3b" compoundref="cJSON__Utils_8c" startline="1472" endline="1475">cJSONUtils_GenerateMergePatch</references>
        <references refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" compoundref="cJSON__Utils_8c" startline="604" endline="690">compare_json</references>
        <references refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" compoundref="cJSON_8h" startline="106">cJSON::next</references>
        <references refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" compoundref="cJSON__Utils_8c" startline="595" endline="602">sort_object</references>
        <references refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" compoundref="cJSON_8h" startline="122">cJSON::string</references>
        <referencedby refid="cJSON__Utils_8c_1a111512642cc5cc37cae52bbe44f6da3b" compoundref="cJSON__Utils_8c" startline="1472" endline="1475">cJSONUtils_GenerateMergePatch</referencedby>
        <referencedby refid="cJSON__Utils_8c_1a91f150fcbf0bca40f59eee03ddc8b5f2" compoundref="cJSON__Utils_8c" startline="1477" endline="1480">cJSONUtils_GenerateMergePatchCaseSensitive</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a111512642cc5cc37cae52bbe44f6da3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_GenerateMergePatch</definition>
        <argsstring>(cJSON *const from, cJSON *const to)</argsstring>
        <name>cJSONUtils_GenerateMergePatch</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1472" column="10" bodyfile="cJSON_Utils.c" bodystart="1472" bodyend="1475"/>
        <references refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" compoundref="cJSON__Utils_8c" startline="1390" endline="1470">generate_merge_patch</references>
        <referencedby refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" compoundref="cJSON__Utils_8c" startline="1390" endline="1470">generate_merge_patch</referencedby>
        <referencedby refid="old__utils__tests_8c_1adb6b0c8e83b5b398535412ed78af6616" compoundref="old__utils__tests_8c" startline="192" endline="212">generate_merge_tests</referencedby>
      </memberdef>
      <memberdef kind="function" id="cJSON__Utils_8c_1a91f150fcbf0bca40f59eee03ddc8b5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSONUtils_GenerateMergePatchCaseSensitive</definition>
        <argsstring>(cJSON *const from, cJSON *const to)</argsstring>
        <name>cJSONUtils_GenerateMergePatchCaseSensitive</name>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="structcJSON" kindref="compound">cJSON</ref> *const</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cJSON_Utils.c" line="1477" column="10" bodyfile="cJSON_Utils.c" bodystart="1477" bodyend="1480"/>
        <references refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" compoundref="cJSON__Utils_8c" startline="1390" endline="1470">generate_merge_patch</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2009-2017<sp/>Dave<sp/>Gamble<sp/>and<sp/>cJSON<sp/>contributors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>disable<sp/>warnings<sp/>about<sp/>old<sp/>C89<sp/>functions<sp/>in<sp/>MSVC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_CRT_SECURE_NO_DEPRECATE)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_DEPRECATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUCC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>visibility<sp/>push(default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>disable<sp/>warning<sp/>about<sp/>single<sp/>line<sp/>comments<sp/>in<sp/>system<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(disable<sp/>:<sp/>4001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUCC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>visibility<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cJSON__Utils_8h" kindref="compound">cJSON_Utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>define<sp/>our<sp/>own<sp/>boolean<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="cJSON__Utils_8c_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>true<sp/>((cJSON_bool)1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="cJSON__Utils_8c_1a65e9886d74aaee76545e83dd09011727" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>false<sp/>((cJSON_bool)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" kindref="member">cJSONUtils_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*copy<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>copy<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" kindref="member">cJSON_malloc</ref>(length);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(copy,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/>length);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>string<sp/>comparison<sp/>which<sp/>doesn&apos;t<sp/>consider<sp/>NULL<sp/>pointers<sp/>equal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" kindref="member">compare_strings</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*string1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*string2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((string1<sp/>==<sp/>NULL)<sp/>||<sp/>(string2<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(string1<sp/>==<sp/>string2)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(case_sensitive)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)string1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)string2);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>tolower(*string1)<sp/>==<sp/>tolower(*string2);<sp/>(void)string1++,<sp/>string2++)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*string1<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tolower(*string1)<sp/>-<sp/>tolower(*string2);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>securely<sp/>comparison<sp/>of<sp/>floating-point<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="cJSON__Utils_8c_1aa7a85b63f1830e7e666e1f56872d5d3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/><ref refid="cJSON__Utils_8c_1aa7a85b63f1830e7e666e1f56872d5d3e" kindref="member">compare_double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxVal<sp/>=<sp/>fabs(a)<sp/>&gt;<sp/>fabs(b)<sp/>?<sp/>fabs(a)<sp/>:<sp/>fabs(b);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fabs(a<sp/>-<sp/>b)<sp/>&lt;=<sp/>maxVal<sp/>*<sp/>DBL_EPSILON);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compare<sp/>the<sp/>next<sp/>path<sp/>element<sp/>of<sp/>two<sp/>JSON<sp/>pointers,<sp/>two<sp/>NULL<sp/>pointers<sp/>are<sp/>considered<sp/>unequal:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="cJSON__Utils_8c_1a5b1b02cebe430578f717392cc740411f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/><ref refid="cJSON__Utils_8c_1a5b1b02cebe430578f717392cc740411f" kindref="member">compare_pointers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pointer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref><sp/>==<sp/>NULL)<sp/>||<sp/>(pointer<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(*<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*pointer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*pointer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);<sp/>(void)<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>++,<sp/>pointer++)<sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>until<sp/>next<sp/>&apos;/&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pointer<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>escaped<sp/>&apos;~&apos;<sp/>(~0)<sp/>and<sp/>&apos;/&apos;<sp/>(~1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((pointer[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(*<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>((pointer[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(*<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>escape<sp/>sequence<sp/>or<sp/>wrong<sp/>character<sp/>in<sp/>*name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer++;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!case_sensitive<sp/>&amp;&amp;<sp/>(tolower(*<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>)<sp/>!=<sp/>tolower(*pointer)))<sp/>||<sp/>(case_sensitive<sp/>&amp;&amp;<sp/>(*<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref><sp/>!=<sp/>*pointer)))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*pointer<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(*pointer<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>!=<sp/>(*<ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref><sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>string<sp/>has<sp/>ended,<sp/>the<sp/>other<sp/>not<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>length<sp/>of<sp/>a<sp/>string<sp/>if<sp/>encoded<sp/>as<sp/>JSON<sp/>pointer<sp/>with<sp/>~0<sp/>and<sp/>~1<sp/>escape<sp/>sequences<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" kindref="member">pointer_encoded_length</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(length<sp/>=<sp/>0;<sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>(void)</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">++,<sp/>length++)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>character<sp/>needs<sp/>to<sp/>be<sp/>escaped?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length++;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>copy<sp/>a<sp/>string<sp/>while<sp/>escaping<sp/>&apos;~&apos;<sp/>and<sp/>&apos;/&apos;<sp/>with<sp/>~0<sp/>and<sp/>~1<sp/>JSON<sp/>pointer<sp/>escape<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" kindref="member">encode_string_as_pointer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destination,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*source)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>source[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>(void)source++,<sp/>destination++)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination++;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination++;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination[0]<sp/>=<sp/>source[0];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>destination[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" kindref="member">cJSONUtils_FindPointerFromObjectTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>child_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*current_child<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>||<sp/>(target<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>==<sp/>target)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" kindref="member">cJSONUtils_strdup</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>recursively<sp/>search<sp/>all<sp/>children<sp/>of<sp/>the<sp/>object<sp/>or<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(current_child<sp/>=<sp/>object-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;<sp/>current_child<sp/>!=<sp/>NULL;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)(current_child<sp/>=<sp/>current_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>),<sp/>child_index++)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*target_pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="cJSON__Utils_8c_1a77e7485a5ded70768f9deb7ccde950bd" kindref="member">cJSONUtils_FindPointerFromObjectTo</ref>(current_child,<sp/>target);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>the<sp/>target?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target_pointer<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" kindref="member">cJSON_IsArray</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reserve<sp/>enough<sp/>memory<sp/>for<sp/>a<sp/>64<sp/>bit<sp/>integer<sp/>+<sp/>&apos;/&apos;<sp/>and<sp/>&apos;\0&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*full_pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" kindref="member">cJSON_malloc</ref>(strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)target_pointer)<sp/>+<sp/>20<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>conversion<sp/>to<sp/>unsigned<sp/>long<sp/>is<sp/>valid</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>should<sp/>be<sp/>eliminated<sp/>at<sp/>compile<sp/>time<sp/>by<sp/>dead<sp/>code<sp/>elimination</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>size_t<sp/>is<sp/>an<sp/>alias<sp/>of<sp/>unsigned<sp/>long,<sp/>or<sp/>if<sp/>it<sp/>is<sp/>bigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child_index<sp/>&gt;<sp/>ULONG_MAX)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(target_pointer);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(full_pointer);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)full_pointer,<sp/></highlight><highlight class="stringliteral">&quot;/%lu%s&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)child_index,<sp/>target_pointer);<sp/></highlight><highlight class="comment">/*<sp/>/&lt;array_index&gt;&lt;path&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(target_pointer);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)full_pointer;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*full_pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" kindref="member">cJSON_malloc</ref>(strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)target_pointer)<sp/>+<sp/><ref refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" kindref="member">pointer_encoded_length</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)current_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>)<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_pointer[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" kindref="member">encode_string_as_pointer</ref>(full_pointer<sp/>+<sp/>1,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)current_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)full_pointer,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)target_pointer);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(target_pointer);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)full_pointer;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reached<sp/>leaf<sp/>of<sp/>the<sp/>tree,<sp/>found<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(target_pointer);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>non<sp/>broken<sp/>version<sp/>of<sp/>cJSON_GetArrayItem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="cJSON__Utils_8c_1a2a6ae8b4e5b92328fa1d884895bb4d47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1a2a6ae8b4e5b92328fa1d884895bb4d47" kindref="member">get_array_item</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*array,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*child<sp/>=<sp/>array<sp/>?<sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((child<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(<ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref><sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="parse__array_8c_1a2fb18e347d685a61044e15509c5b7318" kindref="member">item</ref>--;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>child;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/><ref refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" kindref="member">decode_array_index_from_pointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pointer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>parsed_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pointer[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>((pointer[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(pointer[1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>leading<sp/>zeroes<sp/>are<sp/>not<sp/>permitted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(position<sp/>=<sp/>0;<sp/>(pointer[position]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(pointer[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">);<sp/>position++)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsed_index<sp/>=<sp/>(10<sp/>*<sp/>parsed_index)<sp/>+<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(pointer[position]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pointer[position]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(pointer[position]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>*index<sp/>=<sp/>parsed_index;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" kindref="member">get_item_from_pointer</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pointer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*current_element<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>follow<sp/>path<sp/>of<sp/>the<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((pointer[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(current_element<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer++;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" kindref="member">cJSON_IsArray</ref>(current_element))</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" kindref="member">decode_array_index_from_pointer</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pointer,<sp/>&amp;index))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_element<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a2a6ae8b4e5b92328fa1d884895bb4d47" kindref="member">get_array_item</ref>(current_element,<sp/>index);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(current_element))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_element<sp/>=<sp/>current_element-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetObjectItem.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((current_element<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>!<ref refid="cJSON__Utils_8c_1a5b1b02cebe430578f717392cc740411f" kindref="member">compare_pointers</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)current_element-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pointer,<sp/>case_sensitive))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_element<sp/>=<sp/>current_element-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>the<sp/>next<sp/>path<sp/>token<sp/>or<sp/>end<sp/>of<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((pointer[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(pointer[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer++;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_element;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="cJSON__Utils_8c_1a08336023772bc23fe9957c285446ab90" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a08336023772bc23fe9957c285446ab90" kindref="member">cJSONUtils_GetPointer</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pointer)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" kindref="member">get_item_from_pointer</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>pointer,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="cJSON__Utils_8c_1a7a6b41024e0ea635bd14451d68870db2" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a7a6b41024e0ea635bd14451d68870db2" kindref="member">cJSONUtils_GetPointerCaseSensitive</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pointer)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" kindref="member">get_item_from_pointer</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>pointer,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>JSON<sp/>Patch<sp/>implementation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="cJSON__Utils_8c_1aba4cee7648d3ed01c07b0d1ae5f092c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aba4cee7648d3ed01c07b0d1ae5f092c0" kindref="member">decode_pointer_inplace</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*decoded_string<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*string;<sp/>(void)decoded_string++,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">++)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded_string[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded_string[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>escape<sp/>sequence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>decoded_string[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>non-broken<sp/>cJSON_DetachItemFromArray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="cJSON__Utils_8c_1a282a449e93fcd1614a0ef5b47ab99626" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1a282a449e93fcd1614a0ef5b47ab99626" kindref="member">detach_item_from_array</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*array,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*c<sp/>=<sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/>(which<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which--;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>item<sp/>doesn&apos;t<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>the<sp/>first<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>c-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>c-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref><sp/>=<sp/>c-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>c-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>the<sp/>detached<sp/>item<sp/>doesn&apos;t<sp/>point<sp/>anywhere<sp/>anymore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>c-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>detach<sp/>an<sp/>item<sp/>at<sp/>the<sp/>given<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" kindref="member">detach_path</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parent_pointer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*child_pointer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*parent<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*detached_item<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>path<sp/>and<sp/>split<sp/>it<sp/>in<sp/>parent<sp/>and<sp/>child<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_pointer<sp/>=<sp/><ref refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" kindref="member">cJSONUtils_strdup</ref>(path);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_pointer<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>child_pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)strrchr((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)parent_pointer,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>last<sp/>&apos;/&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child_pointer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>child_pointer[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>child_pointer++;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>parent<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" kindref="member">get_item_from_pointer</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)parent_pointer,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1aba4cee7648d3ed01c07b0d1ae5f092c0" kindref="member">decode_pointer_inplace</ref>(child_pointer);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" kindref="member">cJSON_IsArray</ref>(parent))</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" kindref="member">decode_array_index_from_pointer</ref>(child_pointer,<sp/>&amp;index))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detached_item<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a282a449e93fcd1614a0ef5b47ab99626" kindref="member">detach_item_from_array</ref>(parent,<sp/>index);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(parent))</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detached_item<sp/>=<sp/><ref refid="cJSON_8c_1a7010822d267256f274e0adf22be2b202" kindref="member">cJSON_DetachItemFromObject</ref>(parent,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child_pointer);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Couldn&apos;t<sp/>find<sp/>object<sp/>to<sp/>remove<sp/>child<sp/>from.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">cleanup:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_pointer<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(parent_pointer);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detached_item;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sort<sp/>lists<sp/>using<sp/>mergesort<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" kindref="member">sort_list</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*first<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*second<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*current_item<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*result<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*result_tail<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((list<sp/>==<sp/>NULL)<sp/>||<sp/>(list-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>One<sp/>entry<sp/>is<sp/>sorted<sp/>already.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((current_item<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(current_item-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(<ref refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" kindref="member">compare_strings</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)current_item-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)current_item-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>case_sensitive)<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>for<sp/>list<sp/>sorted.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_item<sp/>=<sp/>current_item-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_item<sp/>==<sp/>NULL)<sp/>||<sp/>(current_item-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Leave<sp/>sorted<sp/>lists<sp/>unmodified.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>pointer<sp/>to<sp/>the<sp/>beginning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>current_item<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current_item<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Walk<sp/>two<sp/>pointers<sp/>to<sp/>find<sp/>the<sp/>middle.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second<sp/>=<sp/>second-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_item<sp/>=<sp/>current_item-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advances<sp/>current_item<sp/>two<sp/>steps<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_item<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_item<sp/>=<sp/>current_item-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((second<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(second-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Split<sp/>the<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recursively<sp/>sort<sp/>the<sp/>sub-lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>first<sp/>=<sp/><ref refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" kindref="member">sort_list</ref>(first,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>second<sp/>=<sp/><ref refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" kindref="member">sort_list</ref>(second,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Merge<sp/>the<sp/>sub-lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((first<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(second<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*smaller<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" kindref="member">compare_strings</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)first-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)second-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>case_sensitive)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller<sp/>=<sp/>second;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>merged<sp/>list<sp/>with<sp/>the<sp/>smaller<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_tail<sp/>=<sp/>smaller;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>smaller;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>smaller<sp/>element<sp/>to<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_tail-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>smaller;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>result_tail;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_tail<sp/>=<sp/>smaller;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>==<sp/>smaller)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>first-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second<sp/>=<sp/>second-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>rest<sp/>of<sp/>first<sp/>list.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_tail-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>result_tail;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(second<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>rest<sp/>of<sp/>second<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>second;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_tail-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>second;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>result_tail;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;child<sp/>=<sp/><ref refid="cJSON__Utils_8c_1acc6f9b671251aed5b9880b6d117037c9" kindref="member">sort_list</ref>(object-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/><ref refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" kindref="member">compare_json</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*a,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a<sp/>==<sp/>NULL)<sp/>||<sp/>(b<sp/>==<sp/>NULL)<sp/>||<sp/>((a-&gt;<ref refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" kindref="member">type</ref><sp/>&amp;<sp/>0xFF)<sp/>!=<sp/>(b-&gt;<ref refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" kindref="member">type</ref><sp/>&amp;<sp/>0xFF)))</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mismatched<sp/>type.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(a-&gt;<ref refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" kindref="member">type</ref><sp/>&amp;<sp/>0xFF)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>:</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>numeric<sp/>mismatch.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a-&gt;<ref refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" kindref="member">valueint</ref><sp/>!=<sp/>b-&gt;<ref refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" kindref="member">valueint</ref>)<sp/>||<sp/>(!<ref refid="cJSON__Utils_8c_1aa7a85b63f1830e7e666e1f56872d5d3e" kindref="member">compare_double</ref>(a-&gt;<ref refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" kindref="member">valuedouble</ref>,<sp/>b-&gt;<ref refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" kindref="member">valuedouble</ref>)))</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>:</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>string<sp/>mismatch.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(a-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/>b-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>:</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)(a<sp/>=<sp/>a-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>),<sp/>b<sp/>=<sp/>b-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;<sp/>(a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(b<sp/>!=<sp/>NULL);<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)(a<sp/>=<sp/>a-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>),<sp/>b<sp/>=<sp/>b-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>identical<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" kindref="member">compare_json</ref>(a,<sp/>b,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!identical)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>array<sp/>size<sp/>mismatch?<sp/>(one<sp/>of<sp/>both<sp/>children<sp/>is<sp/>not<sp/>NULL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a<sp/>!=<sp/>NULL)<sp/>||<sp/>(b<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a22c6e13481c090629afbd77b7cebd24c" kindref="member">cJSON_Object</ref>:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(a,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(b,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)(a<sp/>=<sp/>a-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>),<sp/>b<sp/>=<sp/>b-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;<sp/>(a<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(b<sp/>!=<sp/>NULL);<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)(a<sp/>=<sp/>a-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>),<sp/>b<sp/>=<sp/>b-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>identical<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>object<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" kindref="member">compare_strings</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)a-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)b-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>case_sensitive))</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>missing<sp/>member<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identical<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" kindref="member">compare_json</ref>(a,<sp/>b,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!identical)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>object<sp/>length<sp/>mismatch<sp/>(one<sp/>of<sp/>both<sp/>children<sp/>is<sp/>not<sp/>null)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a<sp/>!=<sp/>NULL)<sp/>||<sp/>(b<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>null,<sp/>true<sp/>or<sp/>false<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>non<sp/>broken<sp/>version<sp/>of<sp/>cJSON_InsertItemInArray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="cJSON__Utils_8c_1aa6cc1d0d8a5424cc0d480fa655234ca1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/><ref refid="cJSON__Utils_8c_1aa6cc1d0d8a5424cc0d480fa655234ca1" kindref="member">insert_item_in_array</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*array,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*newitem)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*child<sp/>=<sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child<sp/>&amp;&amp;<sp/>(which<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which--;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>item<sp/>is<sp/>after<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1afdbbb05c681bab6cf6bd7fc856ed0f31" kindref="member">cJSON_AddItemToArray</ref>(array,<sp/>newitem);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>insert<sp/>into<sp/>the<sp/>linked<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>newitem-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>child;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>newitem-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>child-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>child-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref><sp/>=<sp/>newitem;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>was<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child<sp/>==<sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref><sp/>=<sp/>newitem;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newitem-&gt;<ref refid="structcJSON_1a488a393f610347821fce8e985e79fc2f" kindref="member">prev</ref>-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref><sp/>=<sp/>newitem;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="cJSON__Utils_8c_1a1bcd9b566a44f40998eee63918e67270" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" kindref="member">get_object_item</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(case_sensitive)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON_8c_1a8be913fd1cb9ccf9672afcc3cdac35d5" kindref="member">cJSON_GetObjectItemCaseSensitive</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON_8c_1af2319add4b386eb74159ab4d8ed0695d" kindref="member">cJSON_GetObjectItem</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="unity__fixture__Test_8c_1a8ad72759d07f18eaf8f6690e5dfb747c" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225acfcf145f2788bf340ff3f3098bc54909" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225" kindref="member">patch_operation</ref><sp/>{<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aef2863a469df3ea6871d640e3669a2f2" kindref="member">INVALID</ref>,<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225acfcf145f2788bf340ff3f3098bc54909" kindref="member">ADD</ref>,<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a894523bc8f6298dbfe0a6cc5c43a6f30" kindref="member">REMOVE</ref>,<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a765ae4f8f09e8a28e363acc11643ed91" kindref="member">REPLACE</ref>,<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aed3ef32890b6da0919b57254c5206c62" kindref="member">MOVE</ref>,<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref>,<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225ab2f0cd22b1963becef8b91d29d567fe8" kindref="member">TEST</ref><sp/>};</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225" kindref="member">patch_operation</ref><sp/><ref refid="cJSON__Utils_8c_1a1bcd9b566a44f40998eee63918e67270" kindref="member">decode_patch_operation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*operation<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" kindref="member">get_object_item</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON_8c_1a87b7cb8032c9a552995e006f65f49cb5" kindref="member">cJSON_IsString</ref>(operation))</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aef2863a469df3ea6871d640e3669a2f2" kindref="member">INVALID</ref>;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(operation-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225acfcf145f2788bf340ff3f3098bc54909" kindref="member">ADD</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(operation-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/></highlight><highlight class="stringliteral">&quot;remove&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a894523bc8f6298dbfe0a6cc5c43a6f30" kindref="member">REMOVE</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(operation-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/></highlight><highlight class="stringliteral">&quot;replace&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a765ae4f8f09e8a28e363acc11643ed91" kindref="member">REPLACE</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(operation-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/></highlight><highlight class="stringliteral">&quot;move&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aed3ef32890b6da0919b57254c5206c62" kindref="member">MOVE</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(operation-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/></highlight><highlight class="stringliteral">&quot;copy&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(operation-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225ab2f0cd22b1963becef8b91d29d567fe8" kindref="member">TEST</ref>;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aef2863a469df3ea6871d640e3669a2f2" kindref="member">INVALID</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>overwrite<sp/>and<sp/>existing<sp/>item<sp/>with<sp/>another<sp/>one<sp/>and<sp/>free<sp/>resources<sp/>on<sp/>the<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="cJSON__Utils_8c_1acf685df049535cc95f2e66759cfe057e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1acf685df049535cc95f2e66759cfe057e" kindref="member">overwrite_item</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>root,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>replacement)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(root-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(root-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" kindref="member">cJSON_Delete</ref>(root-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(root,<sp/>&amp;replacement,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcJSON" kindref="compound">cJSON</ref>));</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807" refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" kindref="member">apply_patch</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*patch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*path<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*parent<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225" kindref="member">patch_operation</ref><sp/>opcode<sp/>=<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aef2863a469df3ea6871d640e3669a2f2" kindref="member">INVALID</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parent_pointer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*child_pointer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>path<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" kindref="member">get_object_item</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON_8c_1a87b7cb8032c9a552995e006f65f49cb5" kindref="member">cJSON_IsString</ref>(path))</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>malformed<sp/>patch.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>opcode<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a1bcd9b566a44f40998eee63918e67270" kindref="member">decode_patch_operation</ref>(patch,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aef2863a469df3ea6871d640e3669a2f2" kindref="member">INVALID</ref>)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225ab2f0cd22b1963becef8b91d29d567fe8" kindref="member">TEST</ref>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>value:<sp/>{...}<sp/>with<sp/>the<sp/>given<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>!<ref refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" kindref="member">compare_json</ref>(<ref refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" kindref="member">get_item_from_pointer</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>path-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/>case_sensitive),<sp/><ref refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" kindref="member">get_object_item</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>case_sensitive),<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>for<sp/>replacing<sp/>the<sp/>root<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a894523bc8f6298dbfe0a6cc5c43a6f30" kindref="member">REMOVE</ref>)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>invalid<sp/>=<sp/>{<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/><ref refid="cJSON_8h_1a80c36e86d8d65b697bc623fe28027668" kindref="member">cJSON_Invalid</ref>,<sp/>NULL,<sp/>0,<sp/>0,<sp/>NULL};</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1acf685df049535cc95f2e66759cfe057e" kindref="member">overwrite_item</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>invalid);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a765ae4f8f09e8a28e363acc11643ed91" kindref="member">REPLACE</ref>)<sp/>||<sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225acfcf145f2788bf340ff3f3098bc54909" kindref="member">ADD</ref>))</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" kindref="member">get_object_item</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>missing<sp/>&quot;value&quot;<sp/>for<sp/>add/replace.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" kindref="member">cJSON_Duplicate</ref>(value,<sp/>1);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>of<sp/>memory<sp/>for<sp/>add/replace.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1acf685df049535cc95f2e66759cfe057e" kindref="member">overwrite_item</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>*value);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>the<sp/>duplicated<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(value);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>string<sp/>&quot;value&quot;<sp/>isn&apos;t<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(object-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;string<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a894523bc8f6298dbfe0a6cc5c43a6f30" kindref="member">REMOVE</ref>)<sp/>||<sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a765ae4f8f09e8a28e363acc11643ed91" kindref="member">REPLACE</ref>))</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>rid<sp/>of<sp/>old.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*old_item<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" kindref="member">detach_path</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_item<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" kindref="member">cJSON_Delete</ref>(old_item);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225a894523bc8f6298dbfe0a6cc5c43a6f30" kindref="member">REMOVE</ref>)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Remove,<sp/>this<sp/>job<sp/>is<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy/Move<sp/>uses<sp/>&quot;from&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aed3ef32890b6da0919b57254c5206c62" kindref="member">MOVE</ref>)<sp/>||<sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref>))</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*from<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" kindref="member">get_object_item</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>missing<sp/>&quot;from&quot;<sp/>for<sp/>copy/move.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aed3ef32890b6da0919b57254c5206c62" kindref="member">MOVE</ref>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a53302772bf80ab32f501e603ffe9ac98" kindref="member">detach_path</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)from-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref>)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" kindref="member">get_item_from_pointer</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>from-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>missing<sp/>&quot;from&quot;<sp/>for<sp/>copy/move.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opcode<sp/>==<sp/><ref refid="cJSON__Utils_8c_1aaa57b5e01ec6361fc7dfecc688a04225aba6788019f0f871f0aefcd5644635785" kindref="member">COPY</ref>)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" kindref="member">cJSON_Duplicate</ref>(value,<sp/>1);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>of<sp/>memory<sp/>for<sp/>copy/move.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Add/Replace<sp/>uses<sp/>&quot;value&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a90fcb2a97cd4a9f72bf4156c547c30cc" kindref="member">get_object_item</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>missing<sp/>&quot;value&quot;<sp/>for<sp/>add/replace.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" kindref="member">cJSON_Duplicate</ref>(value,<sp/>1);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>of<sp/>memory<sp/>for<sp/>add/replace.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>just<sp/>add<sp/>&quot;value&quot;<sp/>to<sp/>&quot;path&quot;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>pointer<sp/>in<sp/>parent<sp/>and<sp/>child<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>parent_pointer<sp/>=<sp/><ref refid="cJSON__Utils_8c_1ae9902c3fd7daebe10107208317f4175a" kindref="member">cJSONUtils_strdup</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_pointer)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)strrchr((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)parent_pointer,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child_pointer<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_pointer[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_pointer++;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>parent<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a3a675e027f14a993c43dd5397897798b" kindref="member">get_item_from_pointer</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)parent_pointer,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1aba4cee7648d3ed01c07b0d1ae5f092c0" kindref="member">decode_pointer_inplace</ref>(child_pointer);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add,<sp/>remove,<sp/>replace,<sp/>move,<sp/>copy,<sp/>test.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((parent<sp/>==<sp/>NULL)<sp/>||<sp/>(child_pointer<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Couldn&apos;t<sp/>find<sp/>object<sp/>to<sp/>add<sp/>to.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" kindref="member">cJSON_IsArray</ref>(parent))</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child_pointer,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1afdbbb05c681bab6cf6bd7fc856ed0f31" kindref="member">cJSON_AddItemToArray</ref>(parent,<sp/>value);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON__Utils_8c_1a99a7957d2cd9b52fff5cc61d16d97d39" kindref="member">decode_array_index_from_pointer</ref>(child_pointer,<sp/>&amp;index))</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON__Utils_8c_1aa6cc1d0d8a5424cc0d480fa655234ca1" kindref="member">insert_item_in_array</ref>(parent,<sp/>index,<sp/>value))</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(parent))</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(case_sensitive)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a65893174ab9ffa37a7896e9aa7461975" kindref="member">cJSON_DeleteItemFromObjectCaseSensitive</ref>(parent,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child_pointer);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" kindref="member">cJSON_DeleteItemFromObject</ref>(parent,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child_pointer);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(parent,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child_pointer,<sp/>value);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>parent<sp/>is<sp/>not<sp/>an<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Couldn&apos;t<sp/>find<sp/>object<sp/>to<sp/>add<sp/>to.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal">cleanup:</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" kindref="member">cJSON_Delete</ref>(value);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_pointer<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(parent_pointer);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="cJSON__Utils_8c_1a641cb4552c85b29763cd604be0b3e2e1" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="cJSON__Utils_8c_1a641cb4552c85b29763cd604be0b3e2e1" kindref="member">cJSONUtils_ApplyPatches</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patches)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*current_patch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" kindref="member">cJSON_IsArray</ref>(patches))</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>malformed<sp/>patches.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patches<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_patch<sp/>=<sp/>patches-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current_patch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" kindref="member">apply_patch</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>current_patch,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_patch<sp/>=<sp/>current_patch-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067" refid="cJSON__Utils_8c_1aedc0555c83da63f2cf2418ed371cfcab" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="cJSON__Utils_8c_1aedc0555c83da63f2cf2418ed371cfcab" kindref="member">cJSONUtils_ApplyPatchesCaseSensitive</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patches)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*current_patch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON_8c_1a3e8d0723e3be479074c45008f5cd3497" kindref="member">cJSON_IsArray</ref>(patches))</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>malformed<sp/>patches.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patches<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_patch<sp/>=<sp/>patches-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current_patch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="cJSON__Utils_8c_1ae7f4ca7c392e544cb2fb6ff04af7a7ab" kindref="member">apply_patch</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>current_patch,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_patch<sp/>=<sp/>current_patch-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096" refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patches,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>operation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*suffix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*patch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((patches<sp/>==<sp/>NULL)<sp/>||<sp/>(operation<sp/>==<sp/>NULL)<sp/>||<sp/>(path<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>patch<sp/>=<sp/><ref refid="cJSON_8c_1a9c5f44afdd781b16dead90042fe74085" kindref="member">cJSON_CreateObject</ref>();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patch<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">,<sp/><ref refid="cJSON_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" kindref="member">cJSON_CreateString</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)operation));</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(suffix<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">,<sp/><ref refid="cJSON_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" kindref="member">cJSON_CreateString</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path));</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>suffix_length<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" kindref="member">pointer_encoded_length</ref>(suffix);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_length<sp/>=<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*full_path<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" kindref="member">cJSON_malloc</ref>(path_length<sp/>+<sp/>suffix_length<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)full_path,<sp/></highlight><highlight class="stringliteral">&quot;%s/&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" kindref="member">encode_string_as_pointer</ref>(full_path<sp/>+<sp/>path_length<sp/>+<sp/>1,<sp/>suffix);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">,<sp/><ref refid="cJSON_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" kindref="member">cJSON_CreateString</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)full_path));</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(full_path);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(patch,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/><ref refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" kindref="member">cJSON_Duplicate</ref>(value,<sp/>1));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1afdbbb05c681bab6cf6bd7fc856ed0f31" kindref="member">cJSON_AddItemToArray</ref>(patches,<sp/>patch);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136" refid="cJSON__Utils_8c_1a9df65351d73c14fff4c7c3717b03a222" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><ref refid="cJSON__Utils_8c_1a9df65351d73c14fff4c7c3717b03a222" kindref="member">cJSONUtils_AddPatchToArray</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>operation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(array,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)operation,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path,<sp/>NULL,<sp/>value);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141" refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" kindref="member">create_patches</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patches,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>path,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((from<sp/>==<sp/>NULL)<sp/>||<sp/>(to<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((from-&gt;<ref refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" kindref="member">type</ref><sp/>&amp;<sp/>0xFF)<sp/>!=<sp/>(to-&gt;<ref refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" kindref="member">type</ref><sp/>&amp;<sp/>0xFF))</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;replace&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>0,<sp/>to);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(from-&gt;<ref refid="structcJSON_1ab13084c574681593b12f6e0a3db0dcfc" kindref="member">type</ref><sp/>&amp;<sp/>0xFF)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>:</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((from-&gt;<ref refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" kindref="member">valueint</ref><sp/>!=<sp/>to-&gt;<ref refid="structcJSON_1a369cea49494eb5d4409d532a731a0fbf" kindref="member">valueint</ref>)<sp/>||<sp/>!<ref refid="cJSON__Utils_8c_1aa7a85b63f1830e7e666e1f56872d5d3e" kindref="member">compare_double</ref>(from-&gt;<ref refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" kindref="member">valuedouble</ref>,<sp/>to-&gt;<ref refid="structcJSON_1a4b21817d0fd2919901abadac73214e7f" kindref="member">valuedouble</ref>))</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;replace&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>NULL,<sp/>to);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>:</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(from-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>,<sp/>to-&gt;<ref refid="structcJSON_1ad43f8de2571e504c4c5ce0a36990e6e1" kindref="member">valuestring</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;replace&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>NULL,<sp/>to);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>:</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*from_child<sp/>=<sp/>from-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*to_child<sp/>=<sp/>to-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_path<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" kindref="member">cJSON_malloc</ref>(strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path)<sp/>+<sp/>20<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>space<sp/>for<sp/>64bit<sp/>int.<sp/>log10(2^64)<sp/>=<sp/>20<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>patches<sp/>for<sp/>all<sp/>array<sp/>elements<sp/>that<sp/>exist<sp/>in<sp/>both<sp/>&quot;from&quot;<sp/>and<sp/>&quot;to&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>(from_child<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(to_child<sp/>!=<sp/>NULL);<sp/>(void)(from_child<sp/>=<sp/>from_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>),<sp/>(void)(to_child<sp/>=<sp/>to_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>),<sp/>index++)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>conversion<sp/>to<sp/>unsigned<sp/>long<sp/>is<sp/>valid</highlight></codeline>
<codeline lineno="1181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>should<sp/>be<sp/>eliminated<sp/>at<sp/>compile<sp/>time<sp/>by<sp/>dead<sp/>code<sp/>elimination</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>size_t<sp/>is<sp/>an<sp/>alias<sp/>of<sp/>unsigned<sp/>long,<sp/>or<sp/>if<sp/>it<sp/>is<sp/>bigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>ULONG_MAX)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(new_path);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)new_path,<sp/></highlight><highlight class="stringliteral">&quot;%s/%lu&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)index);<sp/></highlight><highlight class="comment">/*<sp/>path<sp/>of<sp/>the<sp/>current<sp/>array<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" kindref="member">create_patches</ref>(patches,<sp/>new_path,<sp/>from_child,<sp/>to_child,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>leftover<sp/>elements<sp/>from<sp/>&apos;from&apos;<sp/>that<sp/>are<sp/>not<sp/>in<sp/>&apos;to&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(from_child<sp/>!=<sp/>NULL);<sp/>(void)(from_child<sp/>=<sp/>from_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>))</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>conversion<sp/>to<sp/>unsigned<sp/>long<sp/>is<sp/>valid</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>should<sp/>be<sp/>eliminated<sp/>at<sp/>compile<sp/>time<sp/>by<sp/>dead<sp/>code<sp/>elimination</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>size_t<sp/>is<sp/>an<sp/>alias<sp/>of<sp/>unsigned<sp/>long,<sp/>or<sp/>if<sp/>it<sp/>is<sp/>bigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>ULONG_MAX)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(new_path);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)new_path,<sp/></highlight><highlight class="stringliteral">&quot;%lu&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)index);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;remove&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>new_path,<sp/>NULL);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>new<sp/>elements<sp/>in<sp/>&apos;to&apos;<sp/>that<sp/>were<sp/>not<sp/>in<sp/>&apos;from&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(to_child<sp/>!=<sp/>NULL);<sp/>(void)(to_child<sp/>=<sp/>to_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>),<sp/>index++)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/>to_child);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(new_path);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1a22c6e13481c090629afbd77b7cebd24c" kindref="member">cJSON_Object</ref>:</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*from_child<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*to_child<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(from,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(to,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_child<sp/>=<sp/>from-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_child<sp/>=<sp/>to-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>all<sp/>object<sp/>values<sp/>in<sp/>the<sp/>object<sp/>with<sp/>more<sp/>of<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((from_child<sp/>!=<sp/>NULL)<sp/>||<sp/>(to_child<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diff;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_child<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_child<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a35da17f4bc03c4af760a6f5ac3a3c868" kindref="member">compare_strings</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)from_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)to_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>both<sp/>object<sp/>keys<sp/>are<sp/>the<sp/>same<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_length<sp/>=<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>from_child_name_length<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a5a0a233320cc7d0e9aa61314c5f87d19" kindref="member">pointer_encoded_length</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)from_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_path<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="cJSON_8c_1aeb5d79aa96b3440181bfe67323239770" kindref="member">cJSON_malloc</ref>(path_length<sp/>+<sp/>from_child_name_length<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)new_path,<sp/></highlight><highlight class="stringliteral">&quot;%s/&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a0b170971d040585b100449879d486d5a" kindref="member">encode_string_as_pointer</ref>(new_path<sp/>+<sp/>path_length<sp/>+<sp/>1,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)from_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>a<sp/>patch<sp/>for<sp/>the<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" kindref="member">create_patches</ref>(patches,<sp/>new_path,<sp/>from_child,<sp/>to_child,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1aed268df09d4cf0d685d0c035a7453fd5" kindref="member">cJSON_free</ref>(new_path);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_child<sp/>=<sp/>from_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_child<sp/>=<sp/>to_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>object<sp/>element<sp/>doesn&apos;t<sp/>exist<sp/>in<sp/>&apos;to&apos;<sp/>--&gt;<sp/>remove<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;remove&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)from_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_child<sp/>=<sp/>from_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>object<sp/>element<sp/>doesn&apos;t<sp/>exist<sp/>in<sp/>&apos;from&apos;<sp/>--&gt;<sp/>add<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1af8cba403c61c1c77c2904176b90a1252" kindref="member">compose_patch</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)to_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>to_child);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_child<sp/>=<sp/>to_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281" refid="cJSON__Utils_8c_1a33b9d8e8460ad8334278651727a27866" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a33b9d8e8460ad8334278651727a27866" kindref="member">cJSONUtils_GeneratePatches</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>to)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*patches<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((from<sp/>==<sp/>NULL)<sp/>||<sp/>(to<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>patches<sp/>=<sp/><ref refid="cJSON_8c_1a29e5808c66c1cf1f3edbf117babe07b3" kindref="member">cJSON_CreateArray</ref>();</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" kindref="member">create_patches</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>from,<sp/>to,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>patches;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296" refid="cJSON__Utils_8c_1ae6ffc4b4590ab520f4d44fccfcf79323" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1ae6ffc4b4590ab520f4d44fccfcf79323" kindref="member">cJSONUtils_GeneratePatchesCaseSensitive</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>to)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*patches<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((from<sp/>==<sp/>NULL)<sp/>||<sp/>(to<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>patches<sp/>=<sp/><ref refid="cJSON_8c_1a29e5808c66c1cf1f3edbf117babe07b3" kindref="member">cJSON_CreateArray</ref>();</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1ac9c69681d59c2d18501cbf05dc93b52a" kindref="member">create_patches</ref>(patches,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>from,<sp/>to,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>patches;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311" refid="cJSON__Utils_8c_1a405a912a1ac38c57ce587e25e68c1fea" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><ref refid="cJSON__Utils_8c_1a405a912a1ac38c57ce587e25e68c1fea" kindref="member">cJSONUtils_SortObject</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316" refid="cJSON__Utils_8c_1a0b653f6de92e7b51100457251ab15402" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><ref refid="cJSON__Utils_8c_1a0b653f6de92e7b51100457251ab15402" kindref="member">cJSONUtils_SortObjectCaseSensitive</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321" refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" kindref="member">merge_patch</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*patch_child<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(patch))</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scalar<sp/>value,<sp/>array<sp/>or<sp/>NULL,<sp/>just<sp/>duplicate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" kindref="member">cJSON_Delete</ref>(target);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" kindref="member">cJSON_Duplicate</ref>(patch,<sp/>1);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(target))</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" kindref="member">cJSON_Delete</ref>(target);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/><ref refid="cJSON_8c_1a9c5f44afdd781b16dead90042fe74085" kindref="member">cJSON_CreateObject</ref>();</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>patch_child<sp/>=<sp/>patch-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(patch_child<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cJSON_8c_1a7e941f0d623c8476b6a10e9b05464f4f" kindref="member">cJSON_IsNull</ref>(patch_child))</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>is<sp/>the<sp/>indicator<sp/>to<sp/>remove<sp/>a<sp/>value,<sp/>see<sp/>RFC7396<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(case_sensitive)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a65893174ab9ffa37a7896e9aa7461975" kindref="member">cJSON_DeleteItemFromObjectCaseSensitive</ref>(target,<sp/>patch_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" kindref="member">cJSON_DeleteItemFromObject</ref>(target,<sp/>patch_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*replace_me<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*replacement<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(case_sensitive)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace_me<sp/>=<sp/><ref refid="cJSON_8c_1a75ab57d1dfc9dca274bf713fca641ba1" kindref="member">cJSON_DetachItemFromObjectCaseSensitive</ref>(target,<sp/>patch_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace_me<sp/>=<sp/><ref refid="cJSON_8c_1a7010822d267256f274e0adf22be2b202" kindref="member">cJSON_DetachItemFromObject</ref>(target,<sp/>patch_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement<sp/>=<sp/><ref refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" kindref="member">merge_patch</ref>(replace_me,<sp/>patch_child,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replacement<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(target,<sp/>patch_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>replacement);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patch_child<sp/>=<sp/>patch_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380" refid="cJSON__Utils_8c_1a2020aa55140d2520acafb82b5b2e3145" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a2020aa55140d2520acafb82b5b2e3145" kindref="member">cJSONUtils_MergePatch</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patch)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" kindref="member">merge_patch</ref>(target,<sp/>patch,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385" refid="cJSON__Utils_8c_1a8a3c24bc764ddcb255995dca6f148236" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a8a3c24bc764ddcb255995dca6f148236" kindref="member">cJSONUtils_MergePatchCaseSensitive</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patch)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1a0a9688491653ffc21762a397ee028693" kindref="member">merge_patch</ref>(target,<sp/>patch,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390" refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<ref refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" kindref="member">generate_merge_patch</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cJSON_8h_1aea0a1491f73d98b7cc4b8b791c408a4a" kindref="member">cJSON_bool</ref><sp/>case_sensitive)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*from_child<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*to_child<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*patch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>patch<sp/>to<sp/>delete<sp/>everything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON_8c_1a83ea2a0b33071a1120b9052170a2bc13" kindref="member">cJSON_CreateNull</ref>();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(to)<sp/>||<sp/>!<ref refid="cJSON_8c_1a23baebcbfa93b56edb9e6b6f303f521b" kindref="member">cJSON_IsObject</ref>(from))</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" kindref="member">cJSON_Duplicate</ref>(to,<sp/>1);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(from,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cJSON__Utils_8c_1a3fde69b6cea66c36ab8605e8bdcd883b" kindref="member">sort_object</ref>(to,<sp/>case_sensitive);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>from_child<sp/>=<sp/>from-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>to_child<sp/>=<sp/>to-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>patch<sp/>=<sp/><ref refid="cJSON_8c_1a9c5f44afdd781b16dead90042fe74085" kindref="member">cJSON_CreateObject</ref>();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patch<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(from_child<sp/>||<sp/>to_child)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diff;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_child<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_child<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>strcmp(from_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/>to_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>from<sp/>has<sp/>a<sp/>value<sp/>that<sp/>to<sp/>doesn&apos;t<sp/>have<sp/>-&gt;<sp/>remove<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(patch,<sp/>from_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/><ref refid="cJSON_8c_1a83ea2a0b33071a1120b9052170a2bc13" kindref="member">cJSON_CreateNull</ref>());</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_child<sp/>=<sp/>from_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>has<sp/>a<sp/>value<sp/>that<sp/>from<sp/>doesn&apos;t<sp/>have<sp/>-&gt;<sp/>add<sp/>to<sp/>patch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(patch,<sp/>to_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/><ref refid="cJSON_8c_1a010fe0dd2606bdfafc7eb0123b20222e" kindref="member">cJSON_Duplicate</ref>(to_child,<sp/>1));</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_child<sp/>=<sp/>to_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>object<sp/>key<sp/>exists<sp/>in<sp/>both<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cJSON__Utils_8c_1a3cd12de610e736cb58466b6172628377" kindref="member">compare_json</ref>(from_child,<sp/>to_child,<sp/>case_sensitive))</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>identical<sp/>--&gt;<sp/>generate<sp/>a<sp/>patch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1abd37b2dd120f7852123dd51af5ff9d78" kindref="member">cJSON_AddItemToObject</ref>(patch,<sp/>to_child-&gt;<ref refid="structcJSON_1aa6b47e9a4b0e0a26f519b1a2b6739983" kindref="member">string</ref>,<sp/><ref refid="cJSON__Utils_8c_1a111512642cc5cc37cae52bbe44f6da3b" kindref="member">cJSONUtils_GenerateMergePatch</ref>(from_child,<sp/>to_child));</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>key<sp/>in<sp/>the<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_child<sp/>=<sp/>from_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_child<sp/>=<sp/>to_child-&gt;<ref refid="structcJSON_1ade862b880379b5e2a591f7326401fa8d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(patch-&gt;<ref refid="structcJSON_1a401b274c2da358dac5c23ab8b2c71f85" kindref="member">child</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>patch<sp/>generated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cJSON_8c_1a927f7b148cc30fc17210a4511f724cb0" kindref="member">cJSON_Delete</ref>(patch);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>patch;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472" refid="cJSON__Utils_8c_1a111512642cc5cc37cae52bbe44f6da3b" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a111512642cc5cc37cae52bbe44f6da3b" kindref="member">cJSONUtils_GenerateMergePatch</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>to)</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" kindref="member">generate_merge_patch</ref>(from,<sp/>to,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477" refid="cJSON__Utils_8c_1a91f150fcbf0bca40f59eee03ddc8b5f2" refkind="member"><highlight class="normal"><ref refid="cJSON_8h_1a70709a6f2a7e45debe4f5abe345fcb86" kindref="member">CJSON_PUBLIC</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*)<sp/><ref refid="cJSON__Utils_8c_1a91f150fcbf0bca40f59eee03ddc8b5f2" kindref="member">cJSONUtils_GenerateMergePatchCaseSensitive</ref>(<ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from,<sp/><ref refid="structcJSON" kindref="compound">cJSON</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>to)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cJSON__Utils_8c_1aadd3bcea1f78c5f4cd4e0b794b62806f" kindref="member">generate_merge_patch</ref>(from,<sp/>to,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="cJSON_Utils.c"/>
  </compounddef>
</doxygen>
